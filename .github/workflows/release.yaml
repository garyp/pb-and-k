name: Publish Release

env:
  GRADLE_OPTS: '-Dkotlin.incremental=false'
  JAVA_VERSION: 17
  SONATYPE_BASE_URL: 'https://s01.oss.sonatype.org/service/local/'
  SONATYPE_STAGING_PROFILE_ID: 'ad18f49c95e39'

on:
  push:
    branches:
      - master
      - v[0-9]+.[0-9]+.x
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-*
    paths-ignore:
      - '*.md'

jobs:
  build-and-test:
    uses: ./.github/workflows/build-and-test.yaml

  create-staging-repository:
    needs: build-and-test
    # Only tagged versions get staged for release to Maven Central. All other builds only get published to the
    # snapshot repository.
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    name: Create staging repository
    runs-on: ubuntu-22.04
    outputs:
      repository_id: ${{ steps.create.outputs.repository_id }}
    steps:
      - id: create
        uses: nexus-actions/create-nexus-staging-repo@v1.1
        with:
          username: ${{ secrets.SONATYPE_API_USER }}
          password: ${{ secrets.SONATYPE_API_KEY }}
          staging_profile_id: ${{ env.SONATYPE_STAGING_PROFILE_ID }}
          base_url: ${{ env.SONATYPE_BASE_URL }}
          description: "${{ github.workflow }} #${{ github.run_number }} (${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"

  publish:
    needs: [ build-and-test, create-staging-repository ]
    # TODO: There's gotta be a better way :(
    if: ${{ success() || (needs.create-staging-repository.result == 'skipped' && needs.build-and-test.result == 'success') }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            os-type: linux
          - os: macos-12
            os-type: macos
      fail-fast: false
    name: Publish (${{ matrix.os-type }})
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Cache gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Install dependencies needed by native build
        if: matrix.os-type == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libtinfo5

      # This will publish to the OSSRH Snapshot repository rather than Maven Central if the version
      # name ends with -SNAPSHOT.
      - name: Publish to Maven Central
        env:
          SIGNING_KEY_ASCII_ARMORED: ${{ secrets.SIGNING_KEY_ASCII_ARMORED }}
          SONATYPE_API_USER: ${{ secrets.SONATYPE_API_USER }}
          SONATYPE_API_KEY: ${{ secrets.SONATYPE_API_KEY }}
          SONATYPE_REPOSITORY_ID: ${{ needs.create-staging-repository.outputs.repository_id }}
        run: |
          if [ "${{ matrix.os-type }}" == "linux" ]; then
            ./gradlew clean publishAllPublicationsToSonatypeRepository
          else
            ./gradlew clean \
                    publishIosArm64PublicationToSonatypeRepository \
                    publishIosSimulatorArm64PublicationToSonatypeRepository \
                    publishIosX64PublicationToSonatypeRepository \
                    publishTvosArm64PublicationToSonatypeRepository \
                    publishTvosSimulatorArm64PublicationToSonatypeRepository \
                    publishTvosX64PublicationToSonatypeRepository \
                    publishMacosArm64PublicationToSonatypeRepository \
                    publishMacosX64PublicationToSonatypeRepository
          fi

  finalize-staging-repository:
    needs: [ create-staging-repository, publish ]
    if: ${{ always() && needs.create-staging-repository.result == 'success' }}
    name: Finalize staging repository
    runs-on: ubuntu-22.04

    steps:
      - name: Discard
        if: ${{ needs.publish.result != 'success' }}
        uses: nexus-actions/drop-nexus-staging-repo@v1
        with:
          username: ${{ secrets.SONATYPE_API_USER }}
          password: ${{ secrets.SONATYPE_API_KEY }}
          staging_repository_id: ${{ needs.create-staging-repository.outputs.repository_id }}
          base_url: ${{ env.SONATYPE_BASE_URL }}
      - name: Release
        if: ${{ needs.publish.result == 'success' }}
        uses: nexus-actions/release-nexus-staging-repo@v1
        with:
          username: ${{ secrets.SONATYPE_API_USER }}
          password: ${{ secrets.SONATYPE_API_KEY }}
          staging_repository_id: ${{ needs.create-staging-repository.outputs.repository_id }}
          base_url: ${{ env.SONATYPE_BASE_URL }}
