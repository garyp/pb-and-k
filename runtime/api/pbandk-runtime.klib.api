// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs]
// Alias: native => [iosArm64, iosSimulatorArm64, iosX64, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <pro.streem.pbandk:pbandk-runtime>
open annotation class pbandk/ExperimentalProtoJson : kotlin/Annotation { // pbandk/ExperimentalProtoJson|null[0]
    constructor <init>() // pbandk/ExperimentalProtoJson.<init>|<init>(){}[0]
}

open annotation class pbandk/ExperimentalProtoReflection : kotlin/Annotation { // pbandk/ExperimentalProtoReflection|null[0]
    constructor <init>() // pbandk/ExperimentalProtoReflection.<init>|<init>(){}[0]
}

open annotation class pbandk/MessageBuilderMarker : kotlin/Annotation { // pbandk/MessageBuilderMarker|null[0]
    constructor <init>() // pbandk/MessageBuilderMarker.<init>|<init>(){}[0]
}

open annotation class pbandk/PbandkInternal : kotlin/Annotation { // pbandk/PbandkInternal|null[0]
    constructor <init>() // pbandk/PbandkInternal.<init>|<init>(){}[0]
}

open annotation class pbandk/PublicForGeneratedCode : kotlin/Annotation { // pbandk/PublicForGeneratedCode|null[0]
    constructor <init>() // pbandk/PublicForGeneratedCode.<init>|<init>(){}[0]
}

open annotation class pbandk/TypeRegistryDsl : kotlin/Annotation { // pbandk/TypeRegistryDsl|null[0]
    constructor <init>() // pbandk/TypeRegistryDsl.<init>|<init>(){}[0]
}

final enum class pbandk/MessageEncoding : kotlin/Enum<pbandk/MessageEncoding> { // pbandk/MessageEncoding|null[0]
    enum entry DELIMITED // pbandk/MessageEncoding.DELIMITED|null[0]
    enum entry LENGTH_PREFIXED // pbandk/MessageEncoding.LENGTH_PREFIXED|null[0]

    final val entries // pbandk/MessageEncoding.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<pbandk/MessageEncoding> // pbandk/MessageEncoding.entries.<get-entries>|<get-entries>#static(){}[0]

    final fun valueOf(kotlin/String): pbandk/MessageEncoding // pbandk/MessageEncoding.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<pbandk/MessageEncoding> // pbandk/MessageEncoding.values|values#static(){}[0]
}

abstract interface <#A: kotlin/Any, #B: kotlin/Any> pbandk.gen/MapField : kotlin.collections/Map<#A, #B> { // pbandk.gen/MapField|null[0]
    abstract fun asMessages(): kotlin.collections/Collection<pbandk.gen/MapField.Entry<#A, #B>> // pbandk.gen/MapField.asMessages|asMessages(){}[0]

    abstract interface <#A1: kotlin/Any, #B1: kotlin/Any> Entry : kotlin.collections/Map.Entry<#A1, #B1>, pbandk/Message { // pbandk.gen/MapField.Entry|null[0]
        abstract val descriptor // pbandk.gen/MapField.Entry.descriptor|{}descriptor[0]
            abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.gen/MapField.Entry<#A1, #B1>> // pbandk.gen/MapField.Entry.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        abstract fun plus(pbandk/Message?): pbandk.gen/MapField.Entry<#A1, #B1> // pbandk.gen/MapField.Entry.plus|plus(pbandk.Message?){}[0]
    }

    final object Companion // pbandk.gen/MapField.Companion|null[0]
}

abstract interface <#A: kotlin/Any, #B: kotlin/Any> pbandk.gen/MutableMapField : kotlin.collections/MutableMap<#A, #B> { // pbandk.gen/MutableMapField|null[0]
    abstract val entryDescriptor // pbandk.gen/MutableMapField.entryDescriptor|{}entryDescriptor[0]
        abstract fun <get-entryDescriptor>(): pbandk/MessageDescriptor<pbandk.gen/MapField.Entry<#A, #B>> // pbandk.gen/MutableMapField.entryDescriptor.<get-entryDescriptor>|<get-entryDescriptor>(){}[0]

    abstract fun put(kotlin.collections/Map.Entry<#A, #B>) // pbandk.gen/MutableMapField.put|put(kotlin.collections.Map.Entry<1:0,1:1>){}[0]
    abstract fun putAll(kotlin.sequences/Sequence<kotlin.collections/Map.Entry<#A, #B>>) // pbandk.gen/MutableMapField.putAll|putAll(kotlin.sequences.Sequence<kotlin.collections.Map.Entry<1:0,1:1>>){}[0]
    abstract fun toMapField(): pbandk.gen/MapField<#A, #B> // pbandk.gen/MutableMapField.toMapField|toMapField(){}[0]

    abstract interface <#A1: kotlin/Any, #B1: kotlin/Any> MutableEntry : kotlin.collections/MutableMap.MutableEntry<#A1, #B1>, pbandk.gen/MapField.Entry<#A1, #B1>, pbandk/MutableMessage<pbandk.gen/MapField.Entry<#A1, #B1>> { // pbandk.gen/MutableMapField.MutableEntry|null[0]
        abstract var key // pbandk.gen/MutableMapField.MutableEntry.key|{}key[0]
            abstract fun <get-key>(): #A1 // pbandk.gen/MutableMapField.MutableEntry.key.<get-key>|<get-key>(){}[0]
            abstract fun <set-key>(#A1) // pbandk.gen/MutableMapField.MutableEntry.key.<set-key>|<set-key>(1:0){}[0]
        abstract var value // pbandk.gen/MutableMapField.MutableEntry.value|{}value[0]
            abstract fun <get-value>(): #B1 // pbandk.gen/MutableMapField.MutableEntry.value.<get-value>|<get-value>(){}[0]
            abstract fun <set-value>(#B1) // pbandk.gen/MutableMapField.MutableEntry.value.<set-value>|<set-value>(1:1){}[0]
    }
}

abstract interface <#A: kotlin/Any> pbandk.types/ValueType { // pbandk.types/ValueType|null[0]
    abstract val binaryWireType // pbandk.types/ValueType.binaryWireType|{}binaryWireType[0]
        abstract fun <get-binaryWireType>(): pbandk.binary/WireType // pbandk.types/ValueType.binaryWireType.<get-binaryWireType>|<get-binaryWireType>(){}[0]
    abstract val defaultValue // pbandk.types/ValueType.defaultValue|{}defaultValue[0]
        abstract fun <get-defaultValue>(): #A // pbandk.types/ValueType.defaultValue.<get-defaultValue>|<get-defaultValue>(){}[0]

    abstract fun binarySize(#A): kotlin/Int // pbandk.types/ValueType.binarySize|binarySize(1:0){}[0]
    abstract fun decodeFromBinary(pbandk.binary/BinaryFieldValueDecoder): #A // pbandk.types/ValueType.decodeFromBinary|decodeFromBinary(pbandk.binary.BinaryFieldValueDecoder){}[0]
    abstract fun decodeFromJson(pbandk.json/JsonFieldValueDecoder): #A // pbandk.types/ValueType.decodeFromJson|decodeFromJson(pbandk.json.JsonFieldValueDecoder){}[0]
    abstract fun decodeFromJsonMapKey(pbandk.json/JsonFieldValueDecoder.String): #A // pbandk.types/ValueType.decodeFromJsonMapKey|decodeFromJsonMapKey(pbandk.json.JsonFieldValueDecoder.String){}[0]
    abstract fun encodeToBinary(#A, pbandk.binary/BinaryFieldValueEncoder) // pbandk.types/ValueType.encodeToBinary|encodeToBinary(1:0;pbandk.binary.BinaryFieldValueEncoder){}[0]
    abstract fun encodeToJson(#A, pbandk.json/JsonFieldValueEncoder) // pbandk.types/ValueType.encodeToJson|encodeToJson(1:0;pbandk.json.JsonFieldValueEncoder){}[0]
    abstract fun encodeToJsonMapKey(#A): kotlin/String // pbandk.types/ValueType.encodeToJsonMapKey|encodeToJsonMapKey(1:0){}[0]
    abstract fun isDefaultValue(#A): kotlin/Boolean // pbandk.types/ValueType.isDefaultValue|isDefaultValue(1:0){}[0]
    abstract fun mergeValues(#A, #A): #A // pbandk.types/ValueType.mergeValues|mergeValues(1:0;1:0){}[0]
}

abstract interface <#A: pbandk/Message> pbandk/ExtendableMessage : pbandk/Message { // pbandk/ExtendableMessage|null[0]
    abstract val extensionFields // pbandk/ExtendableMessage.extensionFields|{}extensionFields[0]
        abstract fun <get-extensionFields>(): pbandk/FieldSet<#A> // pbandk/ExtendableMessage.extensionFields.<get-extensionFields>|<get-extensionFields>(){}[0]
}

abstract interface <#A: pbandk/Message> pbandk/MutableExtendableMessage : pbandk/ExtendableMessage<#A>, pbandk/MutableMessage<#A> { // pbandk/MutableExtendableMessage|null[0]
    abstract val extensionFields // pbandk/MutableExtendableMessage.extensionFields|{}extensionFields[0]
        abstract fun <get-extensionFields>(): pbandk/MutableFieldSet<#A> // pbandk/MutableExtendableMessage.extensionFields.<get-extensionFields>|<get-extensionFields>(){}[0]
}

abstract interface <#A: pbandk/Message> pbandk/MutableMessage : pbandk/Message { // pbandk/MutableMessage|null[0]
    abstract val unknownFields // pbandk/MutableMessage.unknownFields|{}unknownFields[0]
        abstract fun <get-unknownFields>(): kotlin.collections/MutableMap<kotlin/Int, pbandk/UnknownField> // pbandk/MutableMessage.unknownFields.<get-unknownFields>|<get-unknownFields>(){}[0]
}

abstract interface pbandk/Message { // pbandk/Message|null[0]
    abstract val descriptor // pbandk/Message.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<out pbandk/Message> // pbandk/Message.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val protoSize // pbandk/Message.protoSize|{}protoSize[0]
        abstract fun <get-protoSize>(): kotlin/Int // pbandk/Message.protoSize.<get-protoSize>|<get-protoSize>(){}[0]
    abstract val unknownFields // pbandk/Message.unknownFields|{}unknownFields[0]
        abstract fun <get-unknownFields>(): kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> // pbandk/Message.unknownFields.<get-unknownFields>|<get-unknownFields>(){}[0]

    abstract fun <#A1: kotlin/Any?> getFieldValue(pbandk/FieldDescriptor<*, #A1>): #A1 // pbandk/Message.getFieldValue|getFieldValue(pbandk.FieldDescriptor<*,0:0>){0ยง<kotlin.Any?>}[0]
    abstract fun plus(pbandk/Message?): pbandk/Message // pbandk/Message.plus|plus(pbandk.Message?){}[0]

    abstract interface <#A1: kotlin/Any> OneOf { // pbandk/Message.OneOf|null[0]
        abstract val value // pbandk/Message.OneOf.value|{}value[0]
            abstract fun <get-value>(): #A1 // pbandk/Message.OneOf.value.<get-value>|<get-value>(){}[0]
    }

    abstract interface Enum { // pbandk/Message.Enum|null[0]
        abstract val descriptor // pbandk/Message.Enum.descriptor|{}descriptor[0]
            abstract fun <get-descriptor>(): pbandk/EnumDescriptor<out pbandk/Message.Enum> // pbandk/Message.Enum.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        abstract val name // pbandk/Message.Enum.name|{}name[0]
            abstract fun <get-name>(): kotlin/String? // pbandk/Message.Enum.name.<get-name>|<get-name>(){}[0]
        abstract val value // pbandk/Message.Enum.value|{}value[0]
            abstract fun <get-value>(): kotlin/Int? // pbandk/Message.Enum.value.<get-value>|<get-value>(){}[0]

        abstract interface <#A2: pbandk/Message.Enum> Companion { // pbandk/Message.Enum.Companion|null[0]
            abstract val descriptor // pbandk/Message.Enum.Companion.descriptor|{}descriptor[0]
                abstract fun <get-descriptor>(): pbandk/EnumDescriptor<#A2> // pbandk/Message.Enum.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            abstract fun fromName(kotlin/String): #A2 // pbandk/Message.Enum.Companion.fromName|fromName(kotlin.String){}[0]
            abstract fun fromValue(kotlin/Int): #A2 // pbandk/Message.Enum.Companion.fromValue|fromValue(kotlin.Int){}[0]
        }
    }

    abstract class <#A1: pbandk/Message> Companion { // pbandk/Message.Companion|null[0]
        constructor <init>() // pbandk/Message.Companion.<init>|<init>(){}[0]

        abstract val defaultInstance // pbandk/Message.Companion.defaultInstance|{}defaultInstance[0]
            abstract fun <get-defaultInstance>(): #A1 // pbandk/Message.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        abstract val descriptor // pbandk/Message.Companion.descriptor|{}descriptor[0]
            abstract fun <get-descriptor>(): pbandk/MessageDescriptor<#A1> // pbandk/Message.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        final val messageValueType // pbandk/Message.Companion.messageValueType|{}messageValueType[0]
            final fun <get-messageValueType>(): pbandk.types/ValueType<#A1> // pbandk/Message.Companion.messageValueType.<get-messageValueType>|<get-messageValueType>(){}[0]
    }
}

abstract interface pbandk/MessageDecoder { // pbandk/MessageDecoder|null[0]
    abstract fun <#A1: pbandk/Message> readMessage(pbandk/Message.Companion<#A1>): #A1 // pbandk/MessageDecoder.readMessage|readMessage(pbandk.Message.Companion<0:0>){0ยง<pbandk.Message>}[0]
}

abstract interface pbandk/MessageEncoder { // pbandk/MessageEncoder|null[0]
    abstract fun <#A1: pbandk/Message> writeMessage(#A1) // pbandk/MessageEncoder.writeMessage|writeMessage(0:0){0ยง<pbandk.Message>}[0]
}

abstract interface pbandk/TypeRegistry { // pbandk/TypeRegistry|null[0]
    abstract fun contains(kotlin/String): kotlin/Boolean // pbandk/TypeRegistry.contains|contains(kotlin.String){}[0]
    abstract fun get(kotlin/String): pbandk/MessageDescriptor<*>? // pbandk/TypeRegistry.get|get(kotlin.String){}[0]

    abstract interface Builder : pbandk/TypeRegistry { // pbandk/TypeRegistry.Builder|null[0]
        abstract fun add(pbandk/MessageDescriptor<*>) // pbandk/TypeRegistry.Builder.add|add(pbandk.MessageDescriptor<*>){}[0]
    }

    final object Companion { // pbandk/TypeRegistry.Companion|null[0]
        final val EMPTY // pbandk/TypeRegistry.Companion.EMPTY|{}EMPTY[0]
            final fun <get-EMPTY>(): pbandk/TypeRegistry // pbandk/TypeRegistry.Companion.EMPTY.<get-EMPTY>|<get-EMPTY>(){}[0]
    }
}

sealed interface pbandk.binary/WireValue { // pbandk.binary/WireValue|null[0]
    abstract val size // pbandk.binary/WireValue.size|{}size[0]
        abstract fun <get-size>(): kotlin/Int // pbandk.binary/WireValue.size.<get-size>|<get-size>(){}[0]
    abstract val wireType // pbandk.binary/WireValue.wireType|{}wireType[0]
        abstract fun <get-wireType>(): pbandk.binary/WireType // pbandk.binary/WireValue.wireType.<get-wireType>|<get-wireType>(){}[0]

    final value class Group : pbandk.binary/WireValue { // pbandk.binary/WireValue.Group|null[0]
        final val size // pbandk.binary/WireValue.Group.size|{}size[0]
            final fun <get-size>(): kotlin/Int // pbandk.binary/WireValue.Group.size.<get-size>|<get-size>(){}[0]
        final val wireType // pbandk.binary/WireValue.Group.wireType|{}wireType[0]
            final fun <get-wireType>(): pbandk.binary/WireType // pbandk.binary/WireValue.Group.wireType.<get-wireType>|<get-wireType>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // pbandk.binary/WireValue.Group.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // pbandk.binary/WireValue.Group.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // pbandk.binary/WireValue.Group.toString|toString(){}[0]
    }

    final value class I32 : pbandk.binary/WireValue { // pbandk.binary/WireValue.I32|null[0]
        final val size // pbandk.binary/WireValue.I32.size|{}size[0]
            final fun <get-size>(): kotlin/Int // pbandk.binary/WireValue.I32.size.<get-size>|<get-size>(){}[0]
        final val wireType // pbandk.binary/WireValue.I32.wireType|{}wireType[0]
            final fun <get-wireType>(): pbandk.binary/WireType // pbandk.binary/WireValue.I32.wireType.<get-wireType>|<get-wireType>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // pbandk.binary/WireValue.I32.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // pbandk.binary/WireValue.I32.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // pbandk.binary/WireValue.I32.toString|toString(){}[0]

        final object Companion // pbandk.binary/WireValue.I32.Companion|null[0]
    }

    final value class I64 : pbandk.binary/WireValue { // pbandk.binary/WireValue.I64|null[0]
        final val size // pbandk.binary/WireValue.I64.size|{}size[0]
            final fun <get-size>(): kotlin/Int // pbandk.binary/WireValue.I64.size.<get-size>|<get-size>(){}[0]
        final val wireType // pbandk.binary/WireValue.I64.wireType|{}wireType[0]
            final fun <get-wireType>(): pbandk.binary/WireType // pbandk.binary/WireValue.I64.wireType.<get-wireType>|<get-wireType>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // pbandk.binary/WireValue.I64.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // pbandk.binary/WireValue.I64.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // pbandk.binary/WireValue.I64.toString|toString(){}[0]

        final object Companion // pbandk.binary/WireValue.I64.Companion|null[0]
    }

    final value class Len : pbandk.binary/WireValue { // pbandk.binary/WireValue.Len|null[0]
        final val size // pbandk.binary/WireValue.Len.size|{}size[0]
            final fun <get-size>(): kotlin/Int // pbandk.binary/WireValue.Len.size.<get-size>|<get-size>(){}[0]
        final val wireType // pbandk.binary/WireValue.Len.wireType|{}wireType[0]
            final fun <get-wireType>(): pbandk.binary/WireType // pbandk.binary/WireValue.Len.wireType.<get-wireType>|<get-wireType>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // pbandk.binary/WireValue.Len.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // pbandk.binary/WireValue.Len.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // pbandk.binary/WireValue.Len.toString|toString(){}[0]

        final object Companion // pbandk.binary/WireValue.Len.Companion|null[0]
    }

    final value class Varint : pbandk.binary/WireValue { // pbandk.binary/WireValue.Varint|null[0]
        final val size // pbandk.binary/WireValue.Varint.size|{}size[0]
            final fun <get-size>(): kotlin/Int // pbandk.binary/WireValue.Varint.size.<get-size>|<get-size>(){}[0]
        final val wireType // pbandk.binary/WireValue.Varint.wireType|{}wireType[0]
            final fun <get-wireType>(): pbandk.binary/WireType // pbandk.binary/WireValue.Varint.wireType.<get-wireType>|<get-wireType>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // pbandk.binary/WireValue.Varint.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // pbandk.binary/WireValue.Varint.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // pbandk.binary/WireValue.Varint.toString|toString(){}[0]

        final object Companion // pbandk.binary/WireValue.Varint.Companion|null[0]
    }

    final object Companion { // pbandk.binary/WireValue.Companion|null[0]
        final fun endGroup(): pbandk.binary/WireValue.EndGroup // pbandk.binary/WireValue.Companion.endGroup|endGroup(){}[0]
        final fun group(kotlin.collections/List<pbandk/UnknownField>): pbandk.binary/WireValue.Group // pbandk.binary/WireValue.Companion.group|group(kotlin.collections.List<pbandk.UnknownField>){}[0]
        final fun i32(kotlin/UInt): pbandk.binary/WireValue.I32 // pbandk.binary/WireValue.Companion.i32|i32(kotlin.UInt){}[0]
        final fun i64(kotlin/ULong): pbandk.binary/WireValue.I64 // pbandk.binary/WireValue.Companion.i64|i64(kotlin.ULong){}[0]
        final fun len(kotlin/ByteArray): pbandk.binary/WireValue.Len // pbandk.binary/WireValue.Companion.len|len(kotlin.ByteArray){}[0]
        final fun varint(kotlin/ULong): pbandk.binary/WireValue.Varint // pbandk.binary/WireValue.Companion.varint|varint(kotlin.ULong){}[0]
    }

    final object EndGroup : pbandk.binary/WireValue { // pbandk.binary/WireValue.EndGroup|null[0]
        final val size // pbandk.binary/WireValue.EndGroup.size|{}size[0]
            final fun <get-size>(): kotlin/Int // pbandk.binary/WireValue.EndGroup.size.<get-size>|<get-size>(){}[0]
        final val wireType // pbandk.binary/WireValue.EndGroup.wireType|{}wireType[0]
            final fun <get-wireType>(): pbandk.binary/WireType // pbandk.binary/WireValue.EndGroup.wireType.<get-wireType>|<get-wireType>(){}[0]
    }
}

sealed interface pbandk.wkt/Any : pbandk/Message { // pbandk.wkt/Any|null[0]
    abstract val descriptor // pbandk.wkt/Any.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Any> // pbandk.wkt/Any.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val typeUrl // pbandk.wkt/Any.typeUrl|{}typeUrl[0]
        abstract fun <get-typeUrl>(): kotlin/String // pbandk.wkt/Any.typeUrl.<get-typeUrl>|<get-typeUrl>(){}[0]
    abstract val value // pbandk.wkt/Any.value|{}value[0]
        abstract fun <get-value>(): pbandk/ByteArr // pbandk.wkt/Any.value.<get-value>|<get-value>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableAny, kotlin/Unit>): pbandk.wkt/Any // pbandk.wkt/Any.copy|copy(kotlin.Function1<pbandk.wkt.MutableAny,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/String = ..., pbandk/ByteArr = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Any // pbandk.wkt/Any.copy|copy(kotlin.String;pbandk.ByteArr;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/Any // pbandk.wkt/Any.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/Any> { // pbandk.wkt/Any.Companion|null[0]
        final val defaultInstance // pbandk.wkt/Any.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/Any // pbandk.wkt/Any.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/Any.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Any> // pbandk.wkt/Any.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/Any.FieldDescriptors|null[0]
        final val typeUrl // pbandk.wkt/Any.FieldDescriptors.typeUrl|{}typeUrl[0]
            final fun <get-typeUrl>(): pbandk/FieldDescriptor<pbandk.wkt/Any, kotlin/String> // pbandk.wkt/Any.FieldDescriptors.typeUrl.<get-typeUrl>|<get-typeUrl>(){}[0]
        final val value // pbandk.wkt/Any.FieldDescriptors.value|{}value[0]
            final fun <get-value>(): pbandk/FieldDescriptor<pbandk.wkt/Any, pbandk/ByteArr> // pbandk.wkt/Any.FieldDescriptors.value.<get-value>|<get-value>(){}[0]
    }
}

sealed interface pbandk.wkt/Api : pbandk/Message { // pbandk.wkt/Api|null[0]
    abstract val descriptor // pbandk.wkt/Api.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Api> // pbandk.wkt/Api.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val methods // pbandk.wkt/Api.methods|{}methods[0]
        abstract fun <get-methods>(): kotlin.collections/List<pbandk.wkt/Method> // pbandk.wkt/Api.methods.<get-methods>|<get-methods>(){}[0]
    abstract val mixins // pbandk.wkt/Api.mixins|{}mixins[0]
        abstract fun <get-mixins>(): kotlin.collections/List<pbandk.wkt/Mixin> // pbandk.wkt/Api.mixins.<get-mixins>|<get-mixins>(){}[0]
    abstract val name // pbandk.wkt/Api.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // pbandk.wkt/Api.name.<get-name>|<get-name>(){}[0]
    abstract val options // pbandk.wkt/Api.options|{}options[0]
        abstract fun <get-options>(): kotlin.collections/List<pbandk.wkt/Option> // pbandk.wkt/Api.options.<get-options>|<get-options>(){}[0]
    abstract val sourceContext // pbandk.wkt/Api.sourceContext|{}sourceContext[0]
        abstract fun <get-sourceContext>(): pbandk.wkt/SourceContext? // pbandk.wkt/Api.sourceContext.<get-sourceContext>|<get-sourceContext>(){}[0]
    abstract val syntax // pbandk.wkt/Api.syntax|{}syntax[0]
        abstract fun <get-syntax>(): pbandk.wkt/Syntax // pbandk.wkt/Api.syntax.<get-syntax>|<get-syntax>(){}[0]
    abstract val version // pbandk.wkt/Api.version|{}version[0]
        abstract fun <get-version>(): kotlin/String // pbandk.wkt/Api.version.<get-version>|<get-version>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableApi, kotlin/Unit>): pbandk.wkt/Api // pbandk.wkt/Api.copy|copy(kotlin.Function1<pbandk.wkt.MutableApi,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/String = ..., kotlin.collections/List<pbandk.wkt/Method> = ..., kotlin.collections/List<pbandk.wkt/Option> = ..., kotlin/String = ..., pbandk.wkt/SourceContext? = ..., kotlin.collections/List<pbandk.wkt/Mixin> = ..., pbandk.wkt/Syntax = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Api // pbandk.wkt/Api.copy|copy(kotlin.String;kotlin.collections.List<pbandk.wkt.Method>;kotlin.collections.List<pbandk.wkt.Option>;kotlin.String;pbandk.wkt.SourceContext?;kotlin.collections.List<pbandk.wkt.Mixin>;pbandk.wkt.Syntax;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/Api // pbandk.wkt/Api.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/Api> { // pbandk.wkt/Api.Companion|null[0]
        final val defaultInstance // pbandk.wkt/Api.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/Api // pbandk.wkt/Api.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/Api.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Api> // pbandk.wkt/Api.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/Api.FieldDescriptors|null[0]
        final val methods // pbandk.wkt/Api.FieldDescriptors.methods|{}methods[0]
            final fun <get-methods>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/Api, kotlin.collections/List<pbandk.wkt/Method>, kotlin.collections/MutableList<pbandk.wkt/Method>> // pbandk.wkt/Api.FieldDescriptors.methods.<get-methods>|<get-methods>(){}[0]
        final val mixins // pbandk.wkt/Api.FieldDescriptors.mixins|{}mixins[0]
            final fun <get-mixins>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/Api, kotlin.collections/List<pbandk.wkt/Mixin>, kotlin.collections/MutableList<pbandk.wkt/Mixin>> // pbandk.wkt/Api.FieldDescriptors.mixins.<get-mixins>|<get-mixins>(){}[0]
        final val name // pbandk.wkt/Api.FieldDescriptors.name|{}name[0]
            final fun <get-name>(): pbandk/FieldDescriptor<pbandk.wkt/Api, kotlin/String> // pbandk.wkt/Api.FieldDescriptors.name.<get-name>|<get-name>(){}[0]
        final val options // pbandk.wkt/Api.FieldDescriptors.options|{}options[0]
            final fun <get-options>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/Api, kotlin.collections/List<pbandk.wkt/Option>, kotlin.collections/MutableList<pbandk.wkt/Option>> // pbandk.wkt/Api.FieldDescriptors.options.<get-options>|<get-options>(){}[0]
        final val sourceContext // pbandk.wkt/Api.FieldDescriptors.sourceContext|{}sourceContext[0]
            final fun <get-sourceContext>(): pbandk/FieldDescriptor<pbandk.wkt/Api, pbandk.wkt/SourceContext?> // pbandk.wkt/Api.FieldDescriptors.sourceContext.<get-sourceContext>|<get-sourceContext>(){}[0]
        final val syntax // pbandk.wkt/Api.FieldDescriptors.syntax|{}syntax[0]
            final fun <get-syntax>(): pbandk/FieldDescriptor<pbandk.wkt/Api, pbandk.wkt/Syntax> // pbandk.wkt/Api.FieldDescriptors.syntax.<get-syntax>|<get-syntax>(){}[0]
        final val version // pbandk.wkt/Api.FieldDescriptors.version|{}version[0]
            final fun <get-version>(): pbandk/FieldDescriptor<pbandk.wkt/Api, kotlin/String> // pbandk.wkt/Api.FieldDescriptors.version.<get-version>|<get-version>(){}[0]
    }
}

sealed interface pbandk.wkt/BoolValue : pbandk/Message { // pbandk.wkt/BoolValue|null[0]
    abstract val descriptor // pbandk.wkt/BoolValue.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/BoolValue> // pbandk.wkt/BoolValue.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val value // pbandk.wkt/BoolValue.value|{}value[0]
        abstract fun <get-value>(): kotlin/Boolean // pbandk.wkt/BoolValue.value.<get-value>|<get-value>(){}[0]

    abstract fun copy(kotlin/Boolean = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/BoolValue // pbandk.wkt/BoolValue.copy|copy(kotlin.Boolean;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableBoolValue, kotlin/Unit>): pbandk.wkt/BoolValue // pbandk.wkt/BoolValue.copy|copy(kotlin.Function1<pbandk.wkt.MutableBoolValue,kotlin.Unit>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/BoolValue // pbandk.wkt/BoolValue.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/BoolValue> { // pbandk.wkt/BoolValue.Companion|null[0]
        final val defaultInstance // pbandk.wkt/BoolValue.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/BoolValue // pbandk.wkt/BoolValue.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/BoolValue.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/BoolValue> // pbandk.wkt/BoolValue.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/BoolValue.FieldDescriptors|null[0]
        final val value // pbandk.wkt/BoolValue.FieldDescriptors.value|{}value[0]
            final fun <get-value>(): pbandk/FieldDescriptor<pbandk.wkt/BoolValue, kotlin/Boolean> // pbandk.wkt/BoolValue.FieldDescriptors.value.<get-value>|<get-value>(){}[0]
    }
}

sealed interface pbandk.wkt/BytesValue : pbandk/Message { // pbandk.wkt/BytesValue|null[0]
    abstract val descriptor // pbandk.wkt/BytesValue.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/BytesValue> // pbandk.wkt/BytesValue.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val value // pbandk.wkt/BytesValue.value|{}value[0]
        abstract fun <get-value>(): pbandk/ByteArr // pbandk.wkt/BytesValue.value.<get-value>|<get-value>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableBytesValue, kotlin/Unit>): pbandk.wkt/BytesValue // pbandk.wkt/BytesValue.copy|copy(kotlin.Function1<pbandk.wkt.MutableBytesValue,kotlin.Unit>){}[0]
    abstract fun copy(pbandk/ByteArr = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/BytesValue // pbandk.wkt/BytesValue.copy|copy(pbandk.ByteArr;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/BytesValue // pbandk.wkt/BytesValue.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/BytesValue> { // pbandk.wkt/BytesValue.Companion|null[0]
        final val defaultInstance // pbandk.wkt/BytesValue.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/BytesValue // pbandk.wkt/BytesValue.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/BytesValue.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/BytesValue> // pbandk.wkt/BytesValue.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/BytesValue.FieldDescriptors|null[0]
        final val value // pbandk.wkt/BytesValue.FieldDescriptors.value|{}value[0]
            final fun <get-value>(): pbandk/FieldDescriptor<pbandk.wkt/BytesValue, pbandk/ByteArr> // pbandk.wkt/BytesValue.FieldDescriptors.value.<get-value>|<get-value>(){}[0]
    }
}

sealed interface pbandk.wkt/DescriptorProto : pbandk/Message { // pbandk.wkt/DescriptorProto|null[0]
    abstract val descriptor // pbandk.wkt/DescriptorProto.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/DescriptorProto> // pbandk.wkt/DescriptorProto.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val enumType // pbandk.wkt/DescriptorProto.enumType|{}enumType[0]
        abstract fun <get-enumType>(): kotlin.collections/List<pbandk.wkt/EnumDescriptorProto> // pbandk.wkt/DescriptorProto.enumType.<get-enumType>|<get-enumType>(){}[0]
    abstract val extension // pbandk.wkt/DescriptorProto.extension|{}extension[0]
        abstract fun <get-extension>(): kotlin.collections/List<pbandk.wkt/FieldDescriptorProto> // pbandk.wkt/DescriptorProto.extension.<get-extension>|<get-extension>(){}[0]
    abstract val extensionRange // pbandk.wkt/DescriptorProto.extensionRange|{}extensionRange[0]
        abstract fun <get-extensionRange>(): kotlin.collections/List<pbandk.wkt/DescriptorProto.ExtensionRange> // pbandk.wkt/DescriptorProto.extensionRange.<get-extensionRange>|<get-extensionRange>(){}[0]
    abstract val field // pbandk.wkt/DescriptorProto.field|{}field[0]
        abstract fun <get-field>(): kotlin.collections/List<pbandk.wkt/FieldDescriptorProto> // pbandk.wkt/DescriptorProto.field.<get-field>|<get-field>(){}[0]
    abstract val name // pbandk.wkt/DescriptorProto.name|{}name[0]
        abstract fun <get-name>(): kotlin/String? // pbandk.wkt/DescriptorProto.name.<get-name>|<get-name>(){}[0]
    abstract val nestedType // pbandk.wkt/DescriptorProto.nestedType|{}nestedType[0]
        abstract fun <get-nestedType>(): kotlin.collections/List<pbandk.wkt/DescriptorProto> // pbandk.wkt/DescriptorProto.nestedType.<get-nestedType>|<get-nestedType>(){}[0]
    abstract val oneofDecl // pbandk.wkt/DescriptorProto.oneofDecl|{}oneofDecl[0]
        abstract fun <get-oneofDecl>(): kotlin.collections/List<pbandk.wkt/OneofDescriptorProto> // pbandk.wkt/DescriptorProto.oneofDecl.<get-oneofDecl>|<get-oneofDecl>(){}[0]
    abstract val options // pbandk.wkt/DescriptorProto.options|{}options[0]
        abstract fun <get-options>(): pbandk.wkt/MessageOptions? // pbandk.wkt/DescriptorProto.options.<get-options>|<get-options>(){}[0]
    abstract val reservedName // pbandk.wkt/DescriptorProto.reservedName|{}reservedName[0]
        abstract fun <get-reservedName>(): kotlin.collections/List<kotlin/String> // pbandk.wkt/DescriptorProto.reservedName.<get-reservedName>|<get-reservedName>(){}[0]
    abstract val reservedRange // pbandk.wkt/DescriptorProto.reservedRange|{}reservedRange[0]
        abstract fun <get-reservedRange>(): kotlin.collections/List<pbandk.wkt/DescriptorProto.ReservedRange> // pbandk.wkt/DescriptorProto.reservedRange.<get-reservedRange>|<get-reservedRange>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableDescriptorProto, kotlin/Unit>): pbandk.wkt/DescriptorProto // pbandk.wkt/DescriptorProto.copy|copy(kotlin.Function1<pbandk.wkt.MutableDescriptorProto,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/String? = ..., kotlin.collections/List<pbandk.wkt/FieldDescriptorProto> = ..., kotlin.collections/List<pbandk.wkt/FieldDescriptorProto> = ..., kotlin.collections/List<pbandk.wkt/DescriptorProto> = ..., kotlin.collections/List<pbandk.wkt/EnumDescriptorProto> = ..., kotlin.collections/List<pbandk.wkt/DescriptorProto.ExtensionRange> = ..., kotlin.collections/List<pbandk.wkt/OneofDescriptorProto> = ..., pbandk.wkt/MessageOptions? = ..., kotlin.collections/List<pbandk.wkt/DescriptorProto.ReservedRange> = ..., kotlin.collections/List<kotlin/String> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/DescriptorProto // pbandk.wkt/DescriptorProto.copy|copy(kotlin.String?;kotlin.collections.List<pbandk.wkt.FieldDescriptorProto>;kotlin.collections.List<pbandk.wkt.FieldDescriptorProto>;kotlin.collections.List<pbandk.wkt.DescriptorProto>;kotlin.collections.List<pbandk.wkt.EnumDescriptorProto>;kotlin.collections.List<pbandk.wkt.DescriptorProto.ExtensionRange>;kotlin.collections.List<pbandk.wkt.OneofDescriptorProto>;pbandk.wkt.MessageOptions?;kotlin.collections.List<pbandk.wkt.DescriptorProto.ReservedRange>;kotlin.collections.List<kotlin.String>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/DescriptorProto // pbandk.wkt/DescriptorProto.plus|plus(pbandk.Message?){}[0]

    sealed interface ExtensionRange : pbandk/Message { // pbandk.wkt/DescriptorProto.ExtensionRange|null[0]
        abstract val descriptor // pbandk.wkt/DescriptorProto.ExtensionRange.descriptor|{}descriptor[0]
            abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/DescriptorProto.ExtensionRange> // pbandk.wkt/DescriptorProto.ExtensionRange.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        abstract val end // pbandk.wkt/DescriptorProto.ExtensionRange.end|{}end[0]
            abstract fun <get-end>(): kotlin/Int? // pbandk.wkt/DescriptorProto.ExtensionRange.end.<get-end>|<get-end>(){}[0]
        abstract val options // pbandk.wkt/DescriptorProto.ExtensionRange.options|{}options[0]
            abstract fun <get-options>(): pbandk.wkt/ExtensionRangeOptions? // pbandk.wkt/DescriptorProto.ExtensionRange.options.<get-options>|<get-options>(){}[0]
        abstract val start // pbandk.wkt/DescriptorProto.ExtensionRange.start|{}start[0]
            abstract fun <get-start>(): kotlin/Int? // pbandk.wkt/DescriptorProto.ExtensionRange.start.<get-start>|<get-start>(){}[0]

        abstract fun copy(kotlin/Function1<pbandk.wkt/DescriptorProto.MutableExtensionRange, kotlin/Unit>): pbandk.wkt/DescriptorProto.ExtensionRange // pbandk.wkt/DescriptorProto.ExtensionRange.copy|copy(kotlin.Function1<pbandk.wkt.DescriptorProto.MutableExtensionRange,kotlin.Unit>){}[0]
        abstract fun copy(kotlin/Int? = ..., kotlin/Int? = ..., pbandk.wkt/ExtensionRangeOptions? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/DescriptorProto.ExtensionRange // pbandk.wkt/DescriptorProto.ExtensionRange.copy|copy(kotlin.Int?;kotlin.Int?;pbandk.wkt.ExtensionRangeOptions?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
        abstract fun plus(pbandk/Message?): pbandk.wkt/DescriptorProto.ExtensionRange // pbandk.wkt/DescriptorProto.ExtensionRange.plus|plus(pbandk.Message?){}[0]

        final object Companion : pbandk/Message.Companion<pbandk.wkt/DescriptorProto.ExtensionRange> { // pbandk.wkt/DescriptorProto.ExtensionRange.Companion|null[0]
            final val defaultInstance // pbandk.wkt/DescriptorProto.ExtensionRange.Companion.defaultInstance|{}defaultInstance[0]
                final fun <get-defaultInstance>(): pbandk.wkt/DescriptorProto.ExtensionRange // pbandk.wkt/DescriptorProto.ExtensionRange.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
            final val descriptor // pbandk.wkt/DescriptorProto.ExtensionRange.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/DescriptorProto.ExtensionRange> // pbandk.wkt/DescriptorProto.ExtensionRange.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        }

        final object FieldDescriptors { // pbandk.wkt/DescriptorProto.ExtensionRange.FieldDescriptors|null[0]
            final val end // pbandk.wkt/DescriptorProto.ExtensionRange.FieldDescriptors.end|{}end[0]
                final fun <get-end>(): pbandk/FieldDescriptor<pbandk.wkt/DescriptorProto.ExtensionRange, kotlin/Int?> // pbandk.wkt/DescriptorProto.ExtensionRange.FieldDescriptors.end.<get-end>|<get-end>(){}[0]
            final val options // pbandk.wkt/DescriptorProto.ExtensionRange.FieldDescriptors.options|{}options[0]
                final fun <get-options>(): pbandk/FieldDescriptor<pbandk.wkt/DescriptorProto.ExtensionRange, pbandk.wkt/ExtensionRangeOptions?> // pbandk.wkt/DescriptorProto.ExtensionRange.FieldDescriptors.options.<get-options>|<get-options>(){}[0]
            final val start // pbandk.wkt/DescriptorProto.ExtensionRange.FieldDescriptors.start|{}start[0]
                final fun <get-start>(): pbandk/FieldDescriptor<pbandk.wkt/DescriptorProto.ExtensionRange, kotlin/Int?> // pbandk.wkt/DescriptorProto.ExtensionRange.FieldDescriptors.start.<get-start>|<get-start>(){}[0]
        }
    }

    sealed interface MutableExtensionRange : pbandk.wkt/DescriptorProto.ExtensionRange, pbandk/MutableMessage<pbandk.wkt/DescriptorProto.ExtensionRange> { // pbandk.wkt/DescriptorProto.MutableExtensionRange|null[0]
        abstract var end // pbandk.wkt/DescriptorProto.MutableExtensionRange.end|{}end[0]
            abstract fun <get-end>(): kotlin/Int? // pbandk.wkt/DescriptorProto.MutableExtensionRange.end.<get-end>|<get-end>(){}[0]
            abstract fun <set-end>(kotlin/Int?) // pbandk.wkt/DescriptorProto.MutableExtensionRange.end.<set-end>|<set-end>(kotlin.Int?){}[0]
        abstract var options // pbandk.wkt/DescriptorProto.MutableExtensionRange.options|{}options[0]
            abstract fun <get-options>(): pbandk.wkt/ExtensionRangeOptions? // pbandk.wkt/DescriptorProto.MutableExtensionRange.options.<get-options>|<get-options>(){}[0]
            abstract fun <set-options>(pbandk.wkt/ExtensionRangeOptions?) // pbandk.wkt/DescriptorProto.MutableExtensionRange.options.<set-options>|<set-options>(pbandk.wkt.ExtensionRangeOptions?){}[0]
        abstract var start // pbandk.wkt/DescriptorProto.MutableExtensionRange.start|{}start[0]
            abstract fun <get-start>(): kotlin/Int? // pbandk.wkt/DescriptorProto.MutableExtensionRange.start.<get-start>|<get-start>(){}[0]
            abstract fun <set-start>(kotlin/Int?) // pbandk.wkt/DescriptorProto.MutableExtensionRange.start.<set-start>|<set-start>(kotlin.Int?){}[0]
    }

    sealed interface MutableReservedRange : pbandk.wkt/DescriptorProto.ReservedRange, pbandk/MutableMessage<pbandk.wkt/DescriptorProto.ReservedRange> { // pbandk.wkt/DescriptorProto.MutableReservedRange|null[0]
        abstract var end // pbandk.wkt/DescriptorProto.MutableReservedRange.end|{}end[0]
            abstract fun <get-end>(): kotlin/Int? // pbandk.wkt/DescriptorProto.MutableReservedRange.end.<get-end>|<get-end>(){}[0]
            abstract fun <set-end>(kotlin/Int?) // pbandk.wkt/DescriptorProto.MutableReservedRange.end.<set-end>|<set-end>(kotlin.Int?){}[0]
        abstract var start // pbandk.wkt/DescriptorProto.MutableReservedRange.start|{}start[0]
            abstract fun <get-start>(): kotlin/Int? // pbandk.wkt/DescriptorProto.MutableReservedRange.start.<get-start>|<get-start>(){}[0]
            abstract fun <set-start>(kotlin/Int?) // pbandk.wkt/DescriptorProto.MutableReservedRange.start.<set-start>|<set-start>(kotlin.Int?){}[0]
    }

    sealed interface ReservedRange : pbandk/Message { // pbandk.wkt/DescriptorProto.ReservedRange|null[0]
        abstract val descriptor // pbandk.wkt/DescriptorProto.ReservedRange.descriptor|{}descriptor[0]
            abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/DescriptorProto.ReservedRange> // pbandk.wkt/DescriptorProto.ReservedRange.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        abstract val end // pbandk.wkt/DescriptorProto.ReservedRange.end|{}end[0]
            abstract fun <get-end>(): kotlin/Int? // pbandk.wkt/DescriptorProto.ReservedRange.end.<get-end>|<get-end>(){}[0]
        abstract val start // pbandk.wkt/DescriptorProto.ReservedRange.start|{}start[0]
            abstract fun <get-start>(): kotlin/Int? // pbandk.wkt/DescriptorProto.ReservedRange.start.<get-start>|<get-start>(){}[0]

        abstract fun copy(kotlin/Function1<pbandk.wkt/DescriptorProto.MutableReservedRange, kotlin/Unit>): pbandk.wkt/DescriptorProto.ReservedRange // pbandk.wkt/DescriptorProto.ReservedRange.copy|copy(kotlin.Function1<pbandk.wkt.DescriptorProto.MutableReservedRange,kotlin.Unit>){}[0]
        abstract fun copy(kotlin/Int? = ..., kotlin/Int? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/DescriptorProto.ReservedRange // pbandk.wkt/DescriptorProto.ReservedRange.copy|copy(kotlin.Int?;kotlin.Int?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
        abstract fun plus(pbandk/Message?): pbandk.wkt/DescriptorProto.ReservedRange // pbandk.wkt/DescriptorProto.ReservedRange.plus|plus(pbandk.Message?){}[0]

        final object Companion : pbandk/Message.Companion<pbandk.wkt/DescriptorProto.ReservedRange> { // pbandk.wkt/DescriptorProto.ReservedRange.Companion|null[0]
            final val defaultInstance // pbandk.wkt/DescriptorProto.ReservedRange.Companion.defaultInstance|{}defaultInstance[0]
                final fun <get-defaultInstance>(): pbandk.wkt/DescriptorProto.ReservedRange // pbandk.wkt/DescriptorProto.ReservedRange.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
            final val descriptor // pbandk.wkt/DescriptorProto.ReservedRange.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/DescriptorProto.ReservedRange> // pbandk.wkt/DescriptorProto.ReservedRange.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        }

        final object FieldDescriptors { // pbandk.wkt/DescriptorProto.ReservedRange.FieldDescriptors|null[0]
            final val end // pbandk.wkt/DescriptorProto.ReservedRange.FieldDescriptors.end|{}end[0]
                final fun <get-end>(): pbandk/FieldDescriptor<pbandk.wkt/DescriptorProto.ReservedRange, kotlin/Int?> // pbandk.wkt/DescriptorProto.ReservedRange.FieldDescriptors.end.<get-end>|<get-end>(){}[0]
            final val start // pbandk.wkt/DescriptorProto.ReservedRange.FieldDescriptors.start|{}start[0]
                final fun <get-start>(): pbandk/FieldDescriptor<pbandk.wkt/DescriptorProto.ReservedRange, kotlin/Int?> // pbandk.wkt/DescriptorProto.ReservedRange.FieldDescriptors.start.<get-start>|<get-start>(){}[0]
        }
    }

    final object Companion : pbandk/Message.Companion<pbandk.wkt/DescriptorProto> { // pbandk.wkt/DescriptorProto.Companion|null[0]
        final val defaultInstance // pbandk.wkt/DescriptorProto.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/DescriptorProto // pbandk.wkt/DescriptorProto.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/DescriptorProto.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/DescriptorProto> // pbandk.wkt/DescriptorProto.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun ExtensionRange(kotlin/Int? = ..., kotlin/Int? = ..., pbandk.wkt/ExtensionRangeOptions? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/DescriptorProto.ExtensionRange // pbandk.wkt/DescriptorProto.Companion.ExtensionRange|ExtensionRange(kotlin.Int?;kotlin.Int?;pbandk.wkt.ExtensionRangeOptions?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
        final fun ReservedRange(kotlin/Int? = ..., kotlin/Int? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/DescriptorProto.ReservedRange // pbandk.wkt/DescriptorProto.Companion.ReservedRange|ReservedRange(kotlin.Int?;kotlin.Int?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/DescriptorProto.FieldDescriptors|null[0]
        final val enumType // pbandk.wkt/DescriptorProto.FieldDescriptors.enumType|{}enumType[0]
            final fun <get-enumType>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/DescriptorProto, kotlin.collections/List<pbandk.wkt/EnumDescriptorProto>, kotlin.collections/MutableList<pbandk.wkt/EnumDescriptorProto>> // pbandk.wkt/DescriptorProto.FieldDescriptors.enumType.<get-enumType>|<get-enumType>(){}[0]
        final val extension // pbandk.wkt/DescriptorProto.FieldDescriptors.extension|{}extension[0]
            final fun <get-extension>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/DescriptorProto, kotlin.collections/List<pbandk.wkt/FieldDescriptorProto>, kotlin.collections/MutableList<pbandk.wkt/FieldDescriptorProto>> // pbandk.wkt/DescriptorProto.FieldDescriptors.extension.<get-extension>|<get-extension>(){}[0]
        final val extensionRange // pbandk.wkt/DescriptorProto.FieldDescriptors.extensionRange|{}extensionRange[0]
            final fun <get-extensionRange>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/DescriptorProto, kotlin.collections/List<pbandk.wkt/DescriptorProto.ExtensionRange>, kotlin.collections/MutableList<pbandk.wkt/DescriptorProto.ExtensionRange>> // pbandk.wkt/DescriptorProto.FieldDescriptors.extensionRange.<get-extensionRange>|<get-extensionRange>(){}[0]
        final val field // pbandk.wkt/DescriptorProto.FieldDescriptors.field|{}field[0]
            final fun <get-field>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/DescriptorProto, kotlin.collections/List<pbandk.wkt/FieldDescriptorProto>, kotlin.collections/MutableList<pbandk.wkt/FieldDescriptorProto>> // pbandk.wkt/DescriptorProto.FieldDescriptors.field.<get-field>|<get-field>(){}[0]
        final val name // pbandk.wkt/DescriptorProto.FieldDescriptors.name|{}name[0]
            final fun <get-name>(): pbandk/FieldDescriptor<pbandk.wkt/DescriptorProto, kotlin/String?> // pbandk.wkt/DescriptorProto.FieldDescriptors.name.<get-name>|<get-name>(){}[0]
        final val nestedType // pbandk.wkt/DescriptorProto.FieldDescriptors.nestedType|{}nestedType[0]
            final fun <get-nestedType>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/DescriptorProto, kotlin.collections/List<pbandk.wkt/DescriptorProto>, kotlin.collections/MutableList<pbandk.wkt/DescriptorProto>> // pbandk.wkt/DescriptorProto.FieldDescriptors.nestedType.<get-nestedType>|<get-nestedType>(){}[0]
        final val oneofDecl // pbandk.wkt/DescriptorProto.FieldDescriptors.oneofDecl|{}oneofDecl[0]
            final fun <get-oneofDecl>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/DescriptorProto, kotlin.collections/List<pbandk.wkt/OneofDescriptorProto>, kotlin.collections/MutableList<pbandk.wkt/OneofDescriptorProto>> // pbandk.wkt/DescriptorProto.FieldDescriptors.oneofDecl.<get-oneofDecl>|<get-oneofDecl>(){}[0]
        final val options // pbandk.wkt/DescriptorProto.FieldDescriptors.options|{}options[0]
            final fun <get-options>(): pbandk/FieldDescriptor<pbandk.wkt/DescriptorProto, pbandk.wkt/MessageOptions?> // pbandk.wkt/DescriptorProto.FieldDescriptors.options.<get-options>|<get-options>(){}[0]
        final val reservedName // pbandk.wkt/DescriptorProto.FieldDescriptors.reservedName|{}reservedName[0]
            final fun <get-reservedName>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/DescriptorProto, kotlin.collections/List<kotlin/String>, kotlin.collections/MutableList<kotlin/String>> // pbandk.wkt/DescriptorProto.FieldDescriptors.reservedName.<get-reservedName>|<get-reservedName>(){}[0]
        final val reservedRange // pbandk.wkt/DescriptorProto.FieldDescriptors.reservedRange|{}reservedRange[0]
            final fun <get-reservedRange>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/DescriptorProto, kotlin.collections/List<pbandk.wkt/DescriptorProto.ReservedRange>, kotlin.collections/MutableList<pbandk.wkt/DescriptorProto.ReservedRange>> // pbandk.wkt/DescriptorProto.FieldDescriptors.reservedRange.<get-reservedRange>|<get-reservedRange>(){}[0]
    }
}

sealed interface pbandk.wkt/DoubleValue : pbandk/Message { // pbandk.wkt/DoubleValue|null[0]
    abstract val descriptor // pbandk.wkt/DoubleValue.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/DoubleValue> // pbandk.wkt/DoubleValue.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val value // pbandk.wkt/DoubleValue.value|{}value[0]
        abstract fun <get-value>(): kotlin/Double // pbandk.wkt/DoubleValue.value.<get-value>|<get-value>(){}[0]

    abstract fun copy(kotlin/Double = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/DoubleValue // pbandk.wkt/DoubleValue.copy|copy(kotlin.Double;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableDoubleValue, kotlin/Unit>): pbandk.wkt/DoubleValue // pbandk.wkt/DoubleValue.copy|copy(kotlin.Function1<pbandk.wkt.MutableDoubleValue,kotlin.Unit>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/DoubleValue // pbandk.wkt/DoubleValue.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/DoubleValue> { // pbandk.wkt/DoubleValue.Companion|null[0]
        final val defaultInstance // pbandk.wkt/DoubleValue.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/DoubleValue // pbandk.wkt/DoubleValue.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/DoubleValue.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/DoubleValue> // pbandk.wkt/DoubleValue.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/DoubleValue.FieldDescriptors|null[0]
        final val value // pbandk.wkt/DoubleValue.FieldDescriptors.value|{}value[0]
            final fun <get-value>(): pbandk/FieldDescriptor<pbandk.wkt/DoubleValue, kotlin/Double> // pbandk.wkt/DoubleValue.FieldDescriptors.value.<get-value>|<get-value>(){}[0]
    }
}

sealed interface pbandk.wkt/Duration : pbandk/Message { // pbandk.wkt/Duration|null[0]
    abstract val descriptor // pbandk.wkt/Duration.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Duration> // pbandk.wkt/Duration.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val nanos // pbandk.wkt/Duration.nanos|{}nanos[0]
        abstract fun <get-nanos>(): kotlin/Int // pbandk.wkt/Duration.nanos.<get-nanos>|<get-nanos>(){}[0]
    abstract val seconds // pbandk.wkt/Duration.seconds|{}seconds[0]
        abstract fun <get-seconds>(): kotlin/Long // pbandk.wkt/Duration.seconds.<get-seconds>|<get-seconds>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableDuration, kotlin/Unit>): pbandk.wkt/Duration // pbandk.wkt/Duration.copy|copy(kotlin.Function1<pbandk.wkt.MutableDuration,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/Long = ..., kotlin/Int = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Duration // pbandk.wkt/Duration.copy|copy(kotlin.Long;kotlin.Int;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/Duration // pbandk.wkt/Duration.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/Duration> { // pbandk.wkt/Duration.Companion|null[0]
        final val defaultInstance // pbandk.wkt/Duration.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/Duration // pbandk.wkt/Duration.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/Duration.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Duration> // pbandk.wkt/Duration.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/Duration.FieldDescriptors|null[0]
        final val nanos // pbandk.wkt/Duration.FieldDescriptors.nanos|{}nanos[0]
            final fun <get-nanos>(): pbandk/FieldDescriptor<pbandk.wkt/Duration, kotlin/Int> // pbandk.wkt/Duration.FieldDescriptors.nanos.<get-nanos>|<get-nanos>(){}[0]
        final val seconds // pbandk.wkt/Duration.FieldDescriptors.seconds|{}seconds[0]
            final fun <get-seconds>(): pbandk/FieldDescriptor<pbandk.wkt/Duration, kotlin/Long> // pbandk.wkt/Duration.FieldDescriptors.seconds.<get-seconds>|<get-seconds>(){}[0]
    }
}

sealed interface pbandk.wkt/Edition : pbandk/Message.Enum { // pbandk.wkt/Edition|null[0]
    open val descriptor // pbandk.wkt/Edition.descriptor|{}descriptor[0]
        open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/Edition> // pbandk.wkt/Edition.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/Edition>, pbandk.wkt/Edition { // pbandk.wkt/Edition.UNRECOGNIZED|null[0]
        constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/Edition.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
    }

    final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/Edition> { // pbandk.wkt/Edition.Companion|null[0]
        final val descriptor // pbandk.wkt/Edition.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/Edition> // pbandk.wkt/Edition.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        final val values // pbandk.wkt/Edition.Companion.values|{}values[0]
            final fun <get-values>(): kotlin.collections/List<pbandk.wkt/Edition> // pbandk.wkt/Edition.Companion.values.<get-values>|<get-values>(){}[0]

        final fun fromName(kotlin/String): pbandk.wkt/Edition // pbandk.wkt/Edition.Companion.fromName|fromName(kotlin.String){}[0]
        final fun fromValue(kotlin/Int): pbandk.wkt/Edition // pbandk.wkt/Edition.Companion.fromValue|fromValue(kotlin.Int){}[0]
    }

    final object EDITION_1_TEST_ONLY : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Edition>, pbandk.wkt/Edition // pbandk.wkt/Edition.EDITION_1_TEST_ONLY|null[0]

    final object EDITION_2023 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Edition>, pbandk.wkt/Edition // pbandk.wkt/Edition.EDITION_2023|null[0]

    final object EDITION_2024 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Edition>, pbandk.wkt/Edition // pbandk.wkt/Edition.EDITION_2024|null[0]

    final object EDITION_2_TEST_ONLY : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Edition>, pbandk.wkt/Edition // pbandk.wkt/Edition.EDITION_2_TEST_ONLY|null[0]

    final object EDITION_99997_TEST_ONLY : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Edition>, pbandk.wkt/Edition // pbandk.wkt/Edition.EDITION_99997_TEST_ONLY|null[0]

    final object EDITION_99998_TEST_ONLY : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Edition>, pbandk.wkt/Edition // pbandk.wkt/Edition.EDITION_99998_TEST_ONLY|null[0]

    final object EDITION_99999_TEST_ONLY : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Edition>, pbandk.wkt/Edition // pbandk.wkt/Edition.EDITION_99999_TEST_ONLY|null[0]

    final object LEGACY : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Edition>, pbandk.wkt/Edition // pbandk.wkt/Edition.LEGACY|null[0]

    final object MAX : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Edition>, pbandk.wkt/Edition // pbandk.wkt/Edition.MAX|null[0]

    final object PROTO2 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Edition>, pbandk.wkt/Edition // pbandk.wkt/Edition.PROTO2|null[0]

    final object PROTO3 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Edition>, pbandk.wkt/Edition // pbandk.wkt/Edition.PROTO3|null[0]

    final object UNKNOWN : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Edition>, pbandk.wkt/Edition // pbandk.wkt/Edition.UNKNOWN|null[0]
}

sealed interface pbandk.wkt/Empty : pbandk/Message { // pbandk.wkt/Empty|null[0]
    abstract val descriptor // pbandk.wkt/Empty.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Empty> // pbandk.wkt/Empty.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    abstract fun copy(kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Empty // pbandk.wkt/Empty.copy|copy(kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableEmpty, kotlin/Unit>): pbandk.wkt/Empty // pbandk.wkt/Empty.copy|copy(kotlin.Function1<pbandk.wkt.MutableEmpty,kotlin.Unit>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/Empty // pbandk.wkt/Empty.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/Empty> { // pbandk.wkt/Empty.Companion|null[0]
        final val defaultInstance // pbandk.wkt/Empty.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/Empty // pbandk.wkt/Empty.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/Empty.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Empty> // pbandk.wkt/Empty.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors // pbandk.wkt/Empty.FieldDescriptors|null[0]
}

sealed interface pbandk.wkt/Enum : pbandk/Message { // pbandk.wkt/Enum|null[0]
    abstract val descriptor // pbandk.wkt/Enum.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Enum> // pbandk.wkt/Enum.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val edition // pbandk.wkt/Enum.edition|{}edition[0]
        abstract fun <get-edition>(): kotlin/String // pbandk.wkt/Enum.edition.<get-edition>|<get-edition>(){}[0]
    abstract val enumvalue // pbandk.wkt/Enum.enumvalue|{}enumvalue[0]
        abstract fun <get-enumvalue>(): kotlin.collections/List<pbandk.wkt/EnumValue> // pbandk.wkt/Enum.enumvalue.<get-enumvalue>|<get-enumvalue>(){}[0]
    abstract val name // pbandk.wkt/Enum.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // pbandk.wkt/Enum.name.<get-name>|<get-name>(){}[0]
    abstract val options // pbandk.wkt/Enum.options|{}options[0]
        abstract fun <get-options>(): kotlin.collections/List<pbandk.wkt/Option> // pbandk.wkt/Enum.options.<get-options>|<get-options>(){}[0]
    abstract val sourceContext // pbandk.wkt/Enum.sourceContext|{}sourceContext[0]
        abstract fun <get-sourceContext>(): pbandk.wkt/SourceContext? // pbandk.wkt/Enum.sourceContext.<get-sourceContext>|<get-sourceContext>(){}[0]
    abstract val syntax // pbandk.wkt/Enum.syntax|{}syntax[0]
        abstract fun <get-syntax>(): pbandk.wkt/Syntax // pbandk.wkt/Enum.syntax.<get-syntax>|<get-syntax>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableEnum, kotlin/Unit>): pbandk.wkt/Enum // pbandk.wkt/Enum.copy|copy(kotlin.Function1<pbandk.wkt.MutableEnum,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/String = ..., kotlin.collections/List<pbandk.wkt/EnumValue> = ..., kotlin.collections/List<pbandk.wkt/Option> = ..., pbandk.wkt/SourceContext? = ..., pbandk.wkt/Syntax = ..., kotlin/String = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Enum // pbandk.wkt/Enum.copy|copy(kotlin.String;kotlin.collections.List<pbandk.wkt.EnumValue>;kotlin.collections.List<pbandk.wkt.Option>;pbandk.wkt.SourceContext?;pbandk.wkt.Syntax;kotlin.String;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/Enum // pbandk.wkt/Enum.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/Enum> { // pbandk.wkt/Enum.Companion|null[0]
        final val defaultInstance // pbandk.wkt/Enum.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/Enum // pbandk.wkt/Enum.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/Enum.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Enum> // pbandk.wkt/Enum.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/Enum.FieldDescriptors|null[0]
        final val edition // pbandk.wkt/Enum.FieldDescriptors.edition|{}edition[0]
            final fun <get-edition>(): pbandk/FieldDescriptor<pbandk.wkt/Enum, kotlin/String> // pbandk.wkt/Enum.FieldDescriptors.edition.<get-edition>|<get-edition>(){}[0]
        final val enumvalue // pbandk.wkt/Enum.FieldDescriptors.enumvalue|{}enumvalue[0]
            final fun <get-enumvalue>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/Enum, kotlin.collections/List<pbandk.wkt/EnumValue>, kotlin.collections/MutableList<pbandk.wkt/EnumValue>> // pbandk.wkt/Enum.FieldDescriptors.enumvalue.<get-enumvalue>|<get-enumvalue>(){}[0]
        final val name // pbandk.wkt/Enum.FieldDescriptors.name|{}name[0]
            final fun <get-name>(): pbandk/FieldDescriptor<pbandk.wkt/Enum, kotlin/String> // pbandk.wkt/Enum.FieldDescriptors.name.<get-name>|<get-name>(){}[0]
        final val options // pbandk.wkt/Enum.FieldDescriptors.options|{}options[0]
            final fun <get-options>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/Enum, kotlin.collections/List<pbandk.wkt/Option>, kotlin.collections/MutableList<pbandk.wkt/Option>> // pbandk.wkt/Enum.FieldDescriptors.options.<get-options>|<get-options>(){}[0]
        final val sourceContext // pbandk.wkt/Enum.FieldDescriptors.sourceContext|{}sourceContext[0]
            final fun <get-sourceContext>(): pbandk/FieldDescriptor<pbandk.wkt/Enum, pbandk.wkt/SourceContext?> // pbandk.wkt/Enum.FieldDescriptors.sourceContext.<get-sourceContext>|<get-sourceContext>(){}[0]
        final val syntax // pbandk.wkt/Enum.FieldDescriptors.syntax|{}syntax[0]
            final fun <get-syntax>(): pbandk/FieldDescriptor<pbandk.wkt/Enum, pbandk.wkt/Syntax> // pbandk.wkt/Enum.FieldDescriptors.syntax.<get-syntax>|<get-syntax>(){}[0]
    }
}

sealed interface pbandk.wkt/EnumDescriptorProto : pbandk/Message { // pbandk.wkt/EnumDescriptorProto|null[0]
    abstract val descriptor // pbandk.wkt/EnumDescriptorProto.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/EnumDescriptorProto> // pbandk.wkt/EnumDescriptorProto.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val name // pbandk.wkt/EnumDescriptorProto.name|{}name[0]
        abstract fun <get-name>(): kotlin/String? // pbandk.wkt/EnumDescriptorProto.name.<get-name>|<get-name>(){}[0]
    abstract val options // pbandk.wkt/EnumDescriptorProto.options|{}options[0]
        abstract fun <get-options>(): pbandk.wkt/EnumOptions? // pbandk.wkt/EnumDescriptorProto.options.<get-options>|<get-options>(){}[0]
    abstract val reservedName // pbandk.wkt/EnumDescriptorProto.reservedName|{}reservedName[0]
        abstract fun <get-reservedName>(): kotlin.collections/List<kotlin/String> // pbandk.wkt/EnumDescriptorProto.reservedName.<get-reservedName>|<get-reservedName>(){}[0]
    abstract val reservedRange // pbandk.wkt/EnumDescriptorProto.reservedRange|{}reservedRange[0]
        abstract fun <get-reservedRange>(): kotlin.collections/List<pbandk.wkt/EnumDescriptorProto.EnumReservedRange> // pbandk.wkt/EnumDescriptorProto.reservedRange.<get-reservedRange>|<get-reservedRange>(){}[0]
    abstract val value // pbandk.wkt/EnumDescriptorProto.value|{}value[0]
        abstract fun <get-value>(): kotlin.collections/List<pbandk.wkt/EnumValueDescriptorProto> // pbandk.wkt/EnumDescriptorProto.value.<get-value>|<get-value>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableEnumDescriptorProto, kotlin/Unit>): pbandk.wkt/EnumDescriptorProto // pbandk.wkt/EnumDescriptorProto.copy|copy(kotlin.Function1<pbandk.wkt.MutableEnumDescriptorProto,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/String? = ..., kotlin.collections/List<pbandk.wkt/EnumValueDescriptorProto> = ..., pbandk.wkt/EnumOptions? = ..., kotlin.collections/List<pbandk.wkt/EnumDescriptorProto.EnumReservedRange> = ..., kotlin.collections/List<kotlin/String> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/EnumDescriptorProto // pbandk.wkt/EnumDescriptorProto.copy|copy(kotlin.String?;kotlin.collections.List<pbandk.wkt.EnumValueDescriptorProto>;pbandk.wkt.EnumOptions?;kotlin.collections.List<pbandk.wkt.EnumDescriptorProto.EnumReservedRange>;kotlin.collections.List<kotlin.String>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/EnumDescriptorProto // pbandk.wkt/EnumDescriptorProto.plus|plus(pbandk.Message?){}[0]

    sealed interface EnumReservedRange : pbandk/Message { // pbandk.wkt/EnumDescriptorProto.EnumReservedRange|null[0]
        abstract val descriptor // pbandk.wkt/EnumDescriptorProto.EnumReservedRange.descriptor|{}descriptor[0]
            abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/EnumDescriptorProto.EnumReservedRange> // pbandk.wkt/EnumDescriptorProto.EnumReservedRange.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        abstract val end // pbandk.wkt/EnumDescriptorProto.EnumReservedRange.end|{}end[0]
            abstract fun <get-end>(): kotlin/Int? // pbandk.wkt/EnumDescriptorProto.EnumReservedRange.end.<get-end>|<get-end>(){}[0]
        abstract val start // pbandk.wkt/EnumDescriptorProto.EnumReservedRange.start|{}start[0]
            abstract fun <get-start>(): kotlin/Int? // pbandk.wkt/EnumDescriptorProto.EnumReservedRange.start.<get-start>|<get-start>(){}[0]

        abstract fun copy(kotlin/Function1<pbandk.wkt/EnumDescriptorProto.MutableEnumReservedRange, kotlin/Unit>): pbandk.wkt/EnumDescriptorProto.EnumReservedRange // pbandk.wkt/EnumDescriptorProto.EnumReservedRange.copy|copy(kotlin.Function1<pbandk.wkt.EnumDescriptorProto.MutableEnumReservedRange,kotlin.Unit>){}[0]
        abstract fun copy(kotlin/Int? = ..., kotlin/Int? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/EnumDescriptorProto.EnumReservedRange // pbandk.wkt/EnumDescriptorProto.EnumReservedRange.copy|copy(kotlin.Int?;kotlin.Int?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
        abstract fun plus(pbandk/Message?): pbandk.wkt/EnumDescriptorProto.EnumReservedRange // pbandk.wkt/EnumDescriptorProto.EnumReservedRange.plus|plus(pbandk.Message?){}[0]

        final object Companion : pbandk/Message.Companion<pbandk.wkt/EnumDescriptorProto.EnumReservedRange> { // pbandk.wkt/EnumDescriptorProto.EnumReservedRange.Companion|null[0]
            final val defaultInstance // pbandk.wkt/EnumDescriptorProto.EnumReservedRange.Companion.defaultInstance|{}defaultInstance[0]
                final fun <get-defaultInstance>(): pbandk.wkt/EnumDescriptorProto.EnumReservedRange // pbandk.wkt/EnumDescriptorProto.EnumReservedRange.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
            final val descriptor // pbandk.wkt/EnumDescriptorProto.EnumReservedRange.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/EnumDescriptorProto.EnumReservedRange> // pbandk.wkt/EnumDescriptorProto.EnumReservedRange.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        }

        final object FieldDescriptors { // pbandk.wkt/EnumDescriptorProto.EnumReservedRange.FieldDescriptors|null[0]
            final val end // pbandk.wkt/EnumDescriptorProto.EnumReservedRange.FieldDescriptors.end|{}end[0]
                final fun <get-end>(): pbandk/FieldDescriptor<pbandk.wkt/EnumDescriptorProto.EnumReservedRange, kotlin/Int?> // pbandk.wkt/EnumDescriptorProto.EnumReservedRange.FieldDescriptors.end.<get-end>|<get-end>(){}[0]
            final val start // pbandk.wkt/EnumDescriptorProto.EnumReservedRange.FieldDescriptors.start|{}start[0]
                final fun <get-start>(): pbandk/FieldDescriptor<pbandk.wkt/EnumDescriptorProto.EnumReservedRange, kotlin/Int?> // pbandk.wkt/EnumDescriptorProto.EnumReservedRange.FieldDescriptors.start.<get-start>|<get-start>(){}[0]
        }
    }

    sealed interface MutableEnumReservedRange : pbandk.wkt/EnumDescriptorProto.EnumReservedRange, pbandk/MutableMessage<pbandk.wkt/EnumDescriptorProto.EnumReservedRange> { // pbandk.wkt/EnumDescriptorProto.MutableEnumReservedRange|null[0]
        abstract var end // pbandk.wkt/EnumDescriptorProto.MutableEnumReservedRange.end|{}end[0]
            abstract fun <get-end>(): kotlin/Int? // pbandk.wkt/EnumDescriptorProto.MutableEnumReservedRange.end.<get-end>|<get-end>(){}[0]
            abstract fun <set-end>(kotlin/Int?) // pbandk.wkt/EnumDescriptorProto.MutableEnumReservedRange.end.<set-end>|<set-end>(kotlin.Int?){}[0]
        abstract var start // pbandk.wkt/EnumDescriptorProto.MutableEnumReservedRange.start|{}start[0]
            abstract fun <get-start>(): kotlin/Int? // pbandk.wkt/EnumDescriptorProto.MutableEnumReservedRange.start.<get-start>|<get-start>(){}[0]
            abstract fun <set-start>(kotlin/Int?) // pbandk.wkt/EnumDescriptorProto.MutableEnumReservedRange.start.<set-start>|<set-start>(kotlin.Int?){}[0]
    }

    final object Companion : pbandk/Message.Companion<pbandk.wkt/EnumDescriptorProto> { // pbandk.wkt/EnumDescriptorProto.Companion|null[0]
        final val defaultInstance // pbandk.wkt/EnumDescriptorProto.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/EnumDescriptorProto // pbandk.wkt/EnumDescriptorProto.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/EnumDescriptorProto.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/EnumDescriptorProto> // pbandk.wkt/EnumDescriptorProto.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun EnumReservedRange(kotlin/Int? = ..., kotlin/Int? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/EnumDescriptorProto.EnumReservedRange // pbandk.wkt/EnumDescriptorProto.Companion.EnumReservedRange|EnumReservedRange(kotlin.Int?;kotlin.Int?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/EnumDescriptorProto.FieldDescriptors|null[0]
        final val name // pbandk.wkt/EnumDescriptorProto.FieldDescriptors.name|{}name[0]
            final fun <get-name>(): pbandk/FieldDescriptor<pbandk.wkt/EnumDescriptorProto, kotlin/String?> // pbandk.wkt/EnumDescriptorProto.FieldDescriptors.name.<get-name>|<get-name>(){}[0]
        final val options // pbandk.wkt/EnumDescriptorProto.FieldDescriptors.options|{}options[0]
            final fun <get-options>(): pbandk/FieldDescriptor<pbandk.wkt/EnumDescriptorProto, pbandk.wkt/EnumOptions?> // pbandk.wkt/EnumDescriptorProto.FieldDescriptors.options.<get-options>|<get-options>(){}[0]
        final val reservedName // pbandk.wkt/EnumDescriptorProto.FieldDescriptors.reservedName|{}reservedName[0]
            final fun <get-reservedName>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/EnumDescriptorProto, kotlin.collections/List<kotlin/String>, kotlin.collections/MutableList<kotlin/String>> // pbandk.wkt/EnumDescriptorProto.FieldDescriptors.reservedName.<get-reservedName>|<get-reservedName>(){}[0]
        final val reservedRange // pbandk.wkt/EnumDescriptorProto.FieldDescriptors.reservedRange|{}reservedRange[0]
            final fun <get-reservedRange>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/EnumDescriptorProto, kotlin.collections/List<pbandk.wkt/EnumDescriptorProto.EnumReservedRange>, kotlin.collections/MutableList<pbandk.wkt/EnumDescriptorProto.EnumReservedRange>> // pbandk.wkt/EnumDescriptorProto.FieldDescriptors.reservedRange.<get-reservedRange>|<get-reservedRange>(){}[0]
        final val value // pbandk.wkt/EnumDescriptorProto.FieldDescriptors.value|{}value[0]
            final fun <get-value>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/EnumDescriptorProto, kotlin.collections/List<pbandk.wkt/EnumValueDescriptorProto>, kotlin.collections/MutableList<pbandk.wkt/EnumValueDescriptorProto>> // pbandk.wkt/EnumDescriptorProto.FieldDescriptors.value.<get-value>|<get-value>(){}[0]
    }
}

sealed interface pbandk.wkt/EnumOptions : pbandk/ExtendableMessage<pbandk.wkt/EnumOptions> { // pbandk.wkt/EnumOptions|null[0]
    abstract val allowAlias // pbandk.wkt/EnumOptions.allowAlias|{}allowAlias[0]
        abstract fun <get-allowAlias>(): kotlin/Boolean? // pbandk.wkt/EnumOptions.allowAlias.<get-allowAlias>|<get-allowAlias>(){}[0]
    abstract val deprecated // pbandk.wkt/EnumOptions.deprecated|{}deprecated[0]
        abstract fun <get-deprecated>(): kotlin/Boolean? // pbandk.wkt/EnumOptions.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
    abstract val deprecatedLegacyJsonFieldConflicts // pbandk.wkt/EnumOptions.deprecatedLegacyJsonFieldConflicts|{}deprecatedLegacyJsonFieldConflicts[0]
        abstract fun <get-deprecatedLegacyJsonFieldConflicts>(): kotlin/Boolean? // pbandk.wkt/EnumOptions.deprecatedLegacyJsonFieldConflicts.<get-deprecatedLegacyJsonFieldConflicts>|<get-deprecatedLegacyJsonFieldConflicts>(){}[0]
    abstract val descriptor // pbandk.wkt/EnumOptions.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/EnumOptions> // pbandk.wkt/EnumOptions.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val features // pbandk.wkt/EnumOptions.features|{}features[0]
        abstract fun <get-features>(): pbandk.wkt/FeatureSet? // pbandk.wkt/EnumOptions.features.<get-features>|<get-features>(){}[0]
    abstract val uninterpretedOption // pbandk.wkt/EnumOptions.uninterpretedOption|{}uninterpretedOption[0]
        abstract fun <get-uninterpretedOption>(): kotlin.collections/List<pbandk.wkt/UninterpretedOption> // pbandk.wkt/EnumOptions.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]

    abstract fun copy(kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., pbandk.wkt/FeatureSet? = ..., kotlin.collections/List<pbandk.wkt/UninterpretedOption> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/EnumOptions // pbandk.wkt/EnumOptions.copy|copy(kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;pbandk.wkt.FeatureSet?;kotlin.collections.List<pbandk.wkt.UninterpretedOption>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableEnumOptions, kotlin/Unit>): pbandk.wkt/EnumOptions // pbandk.wkt/EnumOptions.copy|copy(kotlin.Function1<pbandk.wkt.MutableEnumOptions,kotlin.Unit>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/EnumOptions // pbandk.wkt/EnumOptions.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/EnumOptions> { // pbandk.wkt/EnumOptions.Companion|null[0]
        final val defaultInstance // pbandk.wkt/EnumOptions.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/EnumOptions // pbandk.wkt/EnumOptions.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/EnumOptions.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/EnumOptions> // pbandk.wkt/EnumOptions.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/EnumOptions.FieldDescriptors|null[0]
        final val allowAlias // pbandk.wkt/EnumOptions.FieldDescriptors.allowAlias|{}allowAlias[0]
            final fun <get-allowAlias>(): pbandk/FieldDescriptor<pbandk.wkt/EnumOptions, kotlin/Boolean?> // pbandk.wkt/EnumOptions.FieldDescriptors.allowAlias.<get-allowAlias>|<get-allowAlias>(){}[0]
        final val deprecated // pbandk.wkt/EnumOptions.FieldDescriptors.deprecated|{}deprecated[0]
            final fun <get-deprecated>(): pbandk/FieldDescriptor<pbandk.wkt/EnumOptions, kotlin/Boolean?> // pbandk.wkt/EnumOptions.FieldDescriptors.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
        final val deprecatedLegacyJsonFieldConflicts // pbandk.wkt/EnumOptions.FieldDescriptors.deprecatedLegacyJsonFieldConflicts|{}deprecatedLegacyJsonFieldConflicts[0]
            final fun <get-deprecatedLegacyJsonFieldConflicts>(): pbandk/FieldDescriptor<pbandk.wkt/EnumOptions, kotlin/Boolean?> // pbandk.wkt/EnumOptions.FieldDescriptors.deprecatedLegacyJsonFieldConflicts.<get-deprecatedLegacyJsonFieldConflicts>|<get-deprecatedLegacyJsonFieldConflicts>(){}[0]
        final val features // pbandk.wkt/EnumOptions.FieldDescriptors.features|{}features[0]
            final fun <get-features>(): pbandk/FieldDescriptor<pbandk.wkt/EnumOptions, pbandk.wkt/FeatureSet?> // pbandk.wkt/EnumOptions.FieldDescriptors.features.<get-features>|<get-features>(){}[0]
        final val uninterpretedOption // pbandk.wkt/EnumOptions.FieldDescriptors.uninterpretedOption|{}uninterpretedOption[0]
            final fun <get-uninterpretedOption>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/EnumOptions, kotlin.collections/List<pbandk.wkt/UninterpretedOption>, kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption>> // pbandk.wkt/EnumOptions.FieldDescriptors.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]
    }
}

sealed interface pbandk.wkt/EnumValue : pbandk/Message { // pbandk.wkt/EnumValue|null[0]
    abstract val descriptor // pbandk.wkt/EnumValue.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/EnumValue> // pbandk.wkt/EnumValue.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val name // pbandk.wkt/EnumValue.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // pbandk.wkt/EnumValue.name.<get-name>|<get-name>(){}[0]
    abstract val number // pbandk.wkt/EnumValue.number|{}number[0]
        abstract fun <get-number>(): kotlin/Int // pbandk.wkt/EnumValue.number.<get-number>|<get-number>(){}[0]
    abstract val options // pbandk.wkt/EnumValue.options|{}options[0]
        abstract fun <get-options>(): kotlin.collections/List<pbandk.wkt/Option> // pbandk.wkt/EnumValue.options.<get-options>|<get-options>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableEnumValue, kotlin/Unit>): pbandk.wkt/EnumValue // pbandk.wkt/EnumValue.copy|copy(kotlin.Function1<pbandk.wkt.MutableEnumValue,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/String = ..., kotlin/Int = ..., kotlin.collections/List<pbandk.wkt/Option> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/EnumValue // pbandk.wkt/EnumValue.copy|copy(kotlin.String;kotlin.Int;kotlin.collections.List<pbandk.wkt.Option>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/EnumValue // pbandk.wkt/EnumValue.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/EnumValue> { // pbandk.wkt/EnumValue.Companion|null[0]
        final val defaultInstance // pbandk.wkt/EnumValue.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/EnumValue // pbandk.wkt/EnumValue.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/EnumValue.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/EnumValue> // pbandk.wkt/EnumValue.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/EnumValue.FieldDescriptors|null[0]
        final val name // pbandk.wkt/EnumValue.FieldDescriptors.name|{}name[0]
            final fun <get-name>(): pbandk/FieldDescriptor<pbandk.wkt/EnumValue, kotlin/String> // pbandk.wkt/EnumValue.FieldDescriptors.name.<get-name>|<get-name>(){}[0]
        final val number // pbandk.wkt/EnumValue.FieldDescriptors.number|{}number[0]
            final fun <get-number>(): pbandk/FieldDescriptor<pbandk.wkt/EnumValue, kotlin/Int> // pbandk.wkt/EnumValue.FieldDescriptors.number.<get-number>|<get-number>(){}[0]
        final val options // pbandk.wkt/EnumValue.FieldDescriptors.options|{}options[0]
            final fun <get-options>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/EnumValue, kotlin.collections/List<pbandk.wkt/Option>, kotlin.collections/MutableList<pbandk.wkt/Option>> // pbandk.wkt/EnumValue.FieldDescriptors.options.<get-options>|<get-options>(){}[0]
    }
}

sealed interface pbandk.wkt/EnumValueDescriptorProto : pbandk/Message { // pbandk.wkt/EnumValueDescriptorProto|null[0]
    abstract val descriptor // pbandk.wkt/EnumValueDescriptorProto.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/EnumValueDescriptorProto> // pbandk.wkt/EnumValueDescriptorProto.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val name // pbandk.wkt/EnumValueDescriptorProto.name|{}name[0]
        abstract fun <get-name>(): kotlin/String? // pbandk.wkt/EnumValueDescriptorProto.name.<get-name>|<get-name>(){}[0]
    abstract val number // pbandk.wkt/EnumValueDescriptorProto.number|{}number[0]
        abstract fun <get-number>(): kotlin/Int? // pbandk.wkt/EnumValueDescriptorProto.number.<get-number>|<get-number>(){}[0]
    abstract val options // pbandk.wkt/EnumValueDescriptorProto.options|{}options[0]
        abstract fun <get-options>(): pbandk.wkt/EnumValueOptions? // pbandk.wkt/EnumValueDescriptorProto.options.<get-options>|<get-options>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableEnumValueDescriptorProto, kotlin/Unit>): pbandk.wkt/EnumValueDescriptorProto // pbandk.wkt/EnumValueDescriptorProto.copy|copy(kotlin.Function1<pbandk.wkt.MutableEnumValueDescriptorProto,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/String? = ..., kotlin/Int? = ..., pbandk.wkt/EnumValueOptions? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/EnumValueDescriptorProto // pbandk.wkt/EnumValueDescriptorProto.copy|copy(kotlin.String?;kotlin.Int?;pbandk.wkt.EnumValueOptions?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/EnumValueDescriptorProto // pbandk.wkt/EnumValueDescriptorProto.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/EnumValueDescriptorProto> { // pbandk.wkt/EnumValueDescriptorProto.Companion|null[0]
        final val defaultInstance // pbandk.wkt/EnumValueDescriptorProto.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/EnumValueDescriptorProto // pbandk.wkt/EnumValueDescriptorProto.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/EnumValueDescriptorProto.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/EnumValueDescriptorProto> // pbandk.wkt/EnumValueDescriptorProto.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/EnumValueDescriptorProto.FieldDescriptors|null[0]
        final val name // pbandk.wkt/EnumValueDescriptorProto.FieldDescriptors.name|{}name[0]
            final fun <get-name>(): pbandk/FieldDescriptor<pbandk.wkt/EnumValueDescriptorProto, kotlin/String?> // pbandk.wkt/EnumValueDescriptorProto.FieldDescriptors.name.<get-name>|<get-name>(){}[0]
        final val number // pbandk.wkt/EnumValueDescriptorProto.FieldDescriptors.number|{}number[0]
            final fun <get-number>(): pbandk/FieldDescriptor<pbandk.wkt/EnumValueDescriptorProto, kotlin/Int?> // pbandk.wkt/EnumValueDescriptorProto.FieldDescriptors.number.<get-number>|<get-number>(){}[0]
        final val options // pbandk.wkt/EnumValueDescriptorProto.FieldDescriptors.options|{}options[0]
            final fun <get-options>(): pbandk/FieldDescriptor<pbandk.wkt/EnumValueDescriptorProto, pbandk.wkt/EnumValueOptions?> // pbandk.wkt/EnumValueDescriptorProto.FieldDescriptors.options.<get-options>|<get-options>(){}[0]
    }
}

sealed interface pbandk.wkt/EnumValueOptions : pbandk/ExtendableMessage<pbandk.wkt/EnumValueOptions> { // pbandk.wkt/EnumValueOptions|null[0]
    abstract val debugRedact // pbandk.wkt/EnumValueOptions.debugRedact|{}debugRedact[0]
        abstract fun <get-debugRedact>(): kotlin/Boolean? // pbandk.wkt/EnumValueOptions.debugRedact.<get-debugRedact>|<get-debugRedact>(){}[0]
    abstract val deprecated // pbandk.wkt/EnumValueOptions.deprecated|{}deprecated[0]
        abstract fun <get-deprecated>(): kotlin/Boolean? // pbandk.wkt/EnumValueOptions.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
    abstract val descriptor // pbandk.wkt/EnumValueOptions.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/EnumValueOptions> // pbandk.wkt/EnumValueOptions.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val featureSupport // pbandk.wkt/EnumValueOptions.featureSupport|{}featureSupport[0]
        abstract fun <get-featureSupport>(): pbandk.wkt/FieldOptions.FeatureSupport? // pbandk.wkt/EnumValueOptions.featureSupport.<get-featureSupport>|<get-featureSupport>(){}[0]
    abstract val features // pbandk.wkt/EnumValueOptions.features|{}features[0]
        abstract fun <get-features>(): pbandk.wkt/FeatureSet? // pbandk.wkt/EnumValueOptions.features.<get-features>|<get-features>(){}[0]
    abstract val uninterpretedOption // pbandk.wkt/EnumValueOptions.uninterpretedOption|{}uninterpretedOption[0]
        abstract fun <get-uninterpretedOption>(): kotlin.collections/List<pbandk.wkt/UninterpretedOption> // pbandk.wkt/EnumValueOptions.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]

    abstract fun copy(kotlin/Boolean? = ..., pbandk.wkt/FeatureSet? = ..., kotlin/Boolean? = ..., pbandk.wkt/FieldOptions.FeatureSupport? = ..., kotlin.collections/List<pbandk.wkt/UninterpretedOption> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/EnumValueOptions // pbandk.wkt/EnumValueOptions.copy|copy(kotlin.Boolean?;pbandk.wkt.FeatureSet?;kotlin.Boolean?;pbandk.wkt.FieldOptions.FeatureSupport?;kotlin.collections.List<pbandk.wkt.UninterpretedOption>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableEnumValueOptions, kotlin/Unit>): pbandk.wkt/EnumValueOptions // pbandk.wkt/EnumValueOptions.copy|copy(kotlin.Function1<pbandk.wkt.MutableEnumValueOptions,kotlin.Unit>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/EnumValueOptions // pbandk.wkt/EnumValueOptions.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/EnumValueOptions> { // pbandk.wkt/EnumValueOptions.Companion|null[0]
        final val defaultInstance // pbandk.wkt/EnumValueOptions.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/EnumValueOptions // pbandk.wkt/EnumValueOptions.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/EnumValueOptions.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/EnumValueOptions> // pbandk.wkt/EnumValueOptions.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/EnumValueOptions.FieldDescriptors|null[0]
        final val debugRedact // pbandk.wkt/EnumValueOptions.FieldDescriptors.debugRedact|{}debugRedact[0]
            final fun <get-debugRedact>(): pbandk/FieldDescriptor<pbandk.wkt/EnumValueOptions, kotlin/Boolean?> // pbandk.wkt/EnumValueOptions.FieldDescriptors.debugRedact.<get-debugRedact>|<get-debugRedact>(){}[0]
        final val deprecated // pbandk.wkt/EnumValueOptions.FieldDescriptors.deprecated|{}deprecated[0]
            final fun <get-deprecated>(): pbandk/FieldDescriptor<pbandk.wkt/EnumValueOptions, kotlin/Boolean?> // pbandk.wkt/EnumValueOptions.FieldDescriptors.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
        final val featureSupport // pbandk.wkt/EnumValueOptions.FieldDescriptors.featureSupport|{}featureSupport[0]
            final fun <get-featureSupport>(): pbandk/FieldDescriptor<pbandk.wkt/EnumValueOptions, pbandk.wkt/FieldOptions.FeatureSupport?> // pbandk.wkt/EnumValueOptions.FieldDescriptors.featureSupport.<get-featureSupport>|<get-featureSupport>(){}[0]
        final val features // pbandk.wkt/EnumValueOptions.FieldDescriptors.features|{}features[0]
            final fun <get-features>(): pbandk/FieldDescriptor<pbandk.wkt/EnumValueOptions, pbandk.wkt/FeatureSet?> // pbandk.wkt/EnumValueOptions.FieldDescriptors.features.<get-features>|<get-features>(){}[0]
        final val uninterpretedOption // pbandk.wkt/EnumValueOptions.FieldDescriptors.uninterpretedOption|{}uninterpretedOption[0]
            final fun <get-uninterpretedOption>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/EnumValueOptions, kotlin.collections/List<pbandk.wkt/UninterpretedOption>, kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption>> // pbandk.wkt/EnumValueOptions.FieldDescriptors.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]
    }
}

sealed interface pbandk.wkt/ExtensionRangeOptions : pbandk/ExtendableMessage<pbandk.wkt/ExtensionRangeOptions> { // pbandk.wkt/ExtensionRangeOptions|null[0]
    abstract val declaration // pbandk.wkt/ExtensionRangeOptions.declaration|{}declaration[0]
        abstract fun <get-declaration>(): kotlin.collections/List<pbandk.wkt/ExtensionRangeOptions.Declaration> // pbandk.wkt/ExtensionRangeOptions.declaration.<get-declaration>|<get-declaration>(){}[0]
    abstract val descriptor // pbandk.wkt/ExtensionRangeOptions.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/ExtensionRangeOptions> // pbandk.wkt/ExtensionRangeOptions.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val features // pbandk.wkt/ExtensionRangeOptions.features|{}features[0]
        abstract fun <get-features>(): pbandk.wkt/FeatureSet? // pbandk.wkt/ExtensionRangeOptions.features.<get-features>|<get-features>(){}[0]
    abstract val uninterpretedOption // pbandk.wkt/ExtensionRangeOptions.uninterpretedOption|{}uninterpretedOption[0]
        abstract fun <get-uninterpretedOption>(): kotlin.collections/List<pbandk.wkt/UninterpretedOption> // pbandk.wkt/ExtensionRangeOptions.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]
    abstract val verification // pbandk.wkt/ExtensionRangeOptions.verification|{}verification[0]
        abstract fun <get-verification>(): pbandk.wkt/ExtensionRangeOptions.VerificationState? // pbandk.wkt/ExtensionRangeOptions.verification.<get-verification>|<get-verification>(){}[0]

    abstract fun copy(kotlin.collections/List<pbandk.wkt/UninterpretedOption> = ..., kotlin.collections/List<pbandk.wkt/ExtensionRangeOptions.Declaration> = ..., pbandk.wkt/FeatureSet? = ..., pbandk.wkt/ExtensionRangeOptions.VerificationState? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/ExtensionRangeOptions // pbandk.wkt/ExtensionRangeOptions.copy|copy(kotlin.collections.List<pbandk.wkt.UninterpretedOption>;kotlin.collections.List<pbandk.wkt.ExtensionRangeOptions.Declaration>;pbandk.wkt.FeatureSet?;pbandk.wkt.ExtensionRangeOptions.VerificationState?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableExtensionRangeOptions, kotlin/Unit>): pbandk.wkt/ExtensionRangeOptions // pbandk.wkt/ExtensionRangeOptions.copy|copy(kotlin.Function1<pbandk.wkt.MutableExtensionRangeOptions,kotlin.Unit>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/ExtensionRangeOptions // pbandk.wkt/ExtensionRangeOptions.plus|plus(pbandk.Message?){}[0]

    sealed interface Declaration : pbandk/Message { // pbandk.wkt/ExtensionRangeOptions.Declaration|null[0]
        abstract val descriptor // pbandk.wkt/ExtensionRangeOptions.Declaration.descriptor|{}descriptor[0]
            abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/ExtensionRangeOptions.Declaration> // pbandk.wkt/ExtensionRangeOptions.Declaration.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        abstract val fullName // pbandk.wkt/ExtensionRangeOptions.Declaration.fullName|{}fullName[0]
            abstract fun <get-fullName>(): kotlin/String? // pbandk.wkt/ExtensionRangeOptions.Declaration.fullName.<get-fullName>|<get-fullName>(){}[0]
        abstract val number // pbandk.wkt/ExtensionRangeOptions.Declaration.number|{}number[0]
            abstract fun <get-number>(): kotlin/Int? // pbandk.wkt/ExtensionRangeOptions.Declaration.number.<get-number>|<get-number>(){}[0]
        abstract val repeated // pbandk.wkt/ExtensionRangeOptions.Declaration.repeated|{}repeated[0]
            abstract fun <get-repeated>(): kotlin/Boolean? // pbandk.wkt/ExtensionRangeOptions.Declaration.repeated.<get-repeated>|<get-repeated>(){}[0]
        abstract val reserved // pbandk.wkt/ExtensionRangeOptions.Declaration.reserved|{}reserved[0]
            abstract fun <get-reserved>(): kotlin/Boolean? // pbandk.wkt/ExtensionRangeOptions.Declaration.reserved.<get-reserved>|<get-reserved>(){}[0]
        abstract val type // pbandk.wkt/ExtensionRangeOptions.Declaration.type|{}type[0]
            abstract fun <get-type>(): kotlin/String? // pbandk.wkt/ExtensionRangeOptions.Declaration.type.<get-type>|<get-type>(){}[0]

        abstract fun copy(kotlin/Function1<pbandk.wkt/ExtensionRangeOptions.MutableDeclaration, kotlin/Unit>): pbandk.wkt/ExtensionRangeOptions.Declaration // pbandk.wkt/ExtensionRangeOptions.Declaration.copy|copy(kotlin.Function1<pbandk.wkt.ExtensionRangeOptions.MutableDeclaration,kotlin.Unit>){}[0]
        abstract fun copy(kotlin/Int? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/ExtensionRangeOptions.Declaration // pbandk.wkt/ExtensionRangeOptions.Declaration.copy|copy(kotlin.Int?;kotlin.String?;kotlin.String?;kotlin.Boolean?;kotlin.Boolean?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
        abstract fun plus(pbandk/Message?): pbandk.wkt/ExtensionRangeOptions.Declaration // pbandk.wkt/ExtensionRangeOptions.Declaration.plus|plus(pbandk.Message?){}[0]

        final object Companion : pbandk/Message.Companion<pbandk.wkt/ExtensionRangeOptions.Declaration> { // pbandk.wkt/ExtensionRangeOptions.Declaration.Companion|null[0]
            final val defaultInstance // pbandk.wkt/ExtensionRangeOptions.Declaration.Companion.defaultInstance|{}defaultInstance[0]
                final fun <get-defaultInstance>(): pbandk.wkt/ExtensionRangeOptions.Declaration // pbandk.wkt/ExtensionRangeOptions.Declaration.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
            final val descriptor // pbandk.wkt/ExtensionRangeOptions.Declaration.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/ExtensionRangeOptions.Declaration> // pbandk.wkt/ExtensionRangeOptions.Declaration.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        }

        final object FieldDescriptors { // pbandk.wkt/ExtensionRangeOptions.Declaration.FieldDescriptors|null[0]
            final val fullName // pbandk.wkt/ExtensionRangeOptions.Declaration.FieldDescriptors.fullName|{}fullName[0]
                final fun <get-fullName>(): pbandk/FieldDescriptor<pbandk.wkt/ExtensionRangeOptions.Declaration, kotlin/String?> // pbandk.wkt/ExtensionRangeOptions.Declaration.FieldDescriptors.fullName.<get-fullName>|<get-fullName>(){}[0]
            final val number // pbandk.wkt/ExtensionRangeOptions.Declaration.FieldDescriptors.number|{}number[0]
                final fun <get-number>(): pbandk/FieldDescriptor<pbandk.wkt/ExtensionRangeOptions.Declaration, kotlin/Int?> // pbandk.wkt/ExtensionRangeOptions.Declaration.FieldDescriptors.number.<get-number>|<get-number>(){}[0]
            final val repeated // pbandk.wkt/ExtensionRangeOptions.Declaration.FieldDescriptors.repeated|{}repeated[0]
                final fun <get-repeated>(): pbandk/FieldDescriptor<pbandk.wkt/ExtensionRangeOptions.Declaration, kotlin/Boolean?> // pbandk.wkt/ExtensionRangeOptions.Declaration.FieldDescriptors.repeated.<get-repeated>|<get-repeated>(){}[0]
            final val reserved // pbandk.wkt/ExtensionRangeOptions.Declaration.FieldDescriptors.reserved|{}reserved[0]
                final fun <get-reserved>(): pbandk/FieldDescriptor<pbandk.wkt/ExtensionRangeOptions.Declaration, kotlin/Boolean?> // pbandk.wkt/ExtensionRangeOptions.Declaration.FieldDescriptors.reserved.<get-reserved>|<get-reserved>(){}[0]
            final val type // pbandk.wkt/ExtensionRangeOptions.Declaration.FieldDescriptors.type|{}type[0]
                final fun <get-type>(): pbandk/FieldDescriptor<pbandk.wkt/ExtensionRangeOptions.Declaration, kotlin/String?> // pbandk.wkt/ExtensionRangeOptions.Declaration.FieldDescriptors.type.<get-type>|<get-type>(){}[0]
        }
    }

    sealed interface MutableDeclaration : pbandk.wkt/ExtensionRangeOptions.Declaration, pbandk/MutableMessage<pbandk.wkt/ExtensionRangeOptions.Declaration> { // pbandk.wkt/ExtensionRangeOptions.MutableDeclaration|null[0]
        abstract var fullName // pbandk.wkt/ExtensionRangeOptions.MutableDeclaration.fullName|{}fullName[0]
            abstract fun <get-fullName>(): kotlin/String? // pbandk.wkt/ExtensionRangeOptions.MutableDeclaration.fullName.<get-fullName>|<get-fullName>(){}[0]
            abstract fun <set-fullName>(kotlin/String?) // pbandk.wkt/ExtensionRangeOptions.MutableDeclaration.fullName.<set-fullName>|<set-fullName>(kotlin.String?){}[0]
        abstract var number // pbandk.wkt/ExtensionRangeOptions.MutableDeclaration.number|{}number[0]
            abstract fun <get-number>(): kotlin/Int? // pbandk.wkt/ExtensionRangeOptions.MutableDeclaration.number.<get-number>|<get-number>(){}[0]
            abstract fun <set-number>(kotlin/Int?) // pbandk.wkt/ExtensionRangeOptions.MutableDeclaration.number.<set-number>|<set-number>(kotlin.Int?){}[0]
        abstract var repeated // pbandk.wkt/ExtensionRangeOptions.MutableDeclaration.repeated|{}repeated[0]
            abstract fun <get-repeated>(): kotlin/Boolean? // pbandk.wkt/ExtensionRangeOptions.MutableDeclaration.repeated.<get-repeated>|<get-repeated>(){}[0]
            abstract fun <set-repeated>(kotlin/Boolean?) // pbandk.wkt/ExtensionRangeOptions.MutableDeclaration.repeated.<set-repeated>|<set-repeated>(kotlin.Boolean?){}[0]
        abstract var reserved // pbandk.wkt/ExtensionRangeOptions.MutableDeclaration.reserved|{}reserved[0]
            abstract fun <get-reserved>(): kotlin/Boolean? // pbandk.wkt/ExtensionRangeOptions.MutableDeclaration.reserved.<get-reserved>|<get-reserved>(){}[0]
            abstract fun <set-reserved>(kotlin/Boolean?) // pbandk.wkt/ExtensionRangeOptions.MutableDeclaration.reserved.<set-reserved>|<set-reserved>(kotlin.Boolean?){}[0]
        abstract var type // pbandk.wkt/ExtensionRangeOptions.MutableDeclaration.type|{}type[0]
            abstract fun <get-type>(): kotlin/String? // pbandk.wkt/ExtensionRangeOptions.MutableDeclaration.type.<get-type>|<get-type>(){}[0]
            abstract fun <set-type>(kotlin/String?) // pbandk.wkt/ExtensionRangeOptions.MutableDeclaration.type.<set-type>|<set-type>(kotlin.String?){}[0]
    }

    sealed interface VerificationState : pbandk/Message.Enum { // pbandk.wkt/ExtensionRangeOptions.VerificationState|null[0]
        open val descriptor // pbandk.wkt/ExtensionRangeOptions.VerificationState.descriptor|{}descriptor[0]
            open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/ExtensionRangeOptions.VerificationState> // pbandk.wkt/ExtensionRangeOptions.VerificationState.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/ExtensionRangeOptions.VerificationState>, pbandk.wkt/ExtensionRangeOptions.VerificationState { // pbandk.wkt/ExtensionRangeOptions.VerificationState.UNRECOGNIZED|null[0]
            constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/ExtensionRangeOptions.VerificationState.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
        }

        final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/ExtensionRangeOptions.VerificationState> { // pbandk.wkt/ExtensionRangeOptions.VerificationState.Companion|null[0]
            final val descriptor // pbandk.wkt/ExtensionRangeOptions.VerificationState.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/ExtensionRangeOptions.VerificationState> // pbandk.wkt/ExtensionRangeOptions.VerificationState.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
            final val values // pbandk.wkt/ExtensionRangeOptions.VerificationState.Companion.values|{}values[0]
                final fun <get-values>(): kotlin.collections/List<pbandk.wkt/ExtensionRangeOptions.VerificationState> // pbandk.wkt/ExtensionRangeOptions.VerificationState.Companion.values.<get-values>|<get-values>(){}[0]

            final fun fromName(kotlin/String): pbandk.wkt/ExtensionRangeOptions.VerificationState // pbandk.wkt/ExtensionRangeOptions.VerificationState.Companion.fromName|fromName(kotlin.String){}[0]
            final fun fromValue(kotlin/Int): pbandk.wkt/ExtensionRangeOptions.VerificationState // pbandk.wkt/ExtensionRangeOptions.VerificationState.Companion.fromValue|fromValue(kotlin.Int){}[0]
        }

        final object DECLARATION : pbandk.gen/GeneratedEnumValue<pbandk.wkt/ExtensionRangeOptions.VerificationState>, pbandk.wkt/ExtensionRangeOptions.VerificationState // pbandk.wkt/ExtensionRangeOptions.VerificationState.DECLARATION|null[0]

        final object UNVERIFIED : pbandk.gen/GeneratedEnumValue<pbandk.wkt/ExtensionRangeOptions.VerificationState>, pbandk.wkt/ExtensionRangeOptions.VerificationState // pbandk.wkt/ExtensionRangeOptions.VerificationState.UNVERIFIED|null[0]
    }

    final object Companion : pbandk/Message.Companion<pbandk.wkt/ExtensionRangeOptions> { // pbandk.wkt/ExtensionRangeOptions.Companion|null[0]
        final val defaultInstance // pbandk.wkt/ExtensionRangeOptions.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/ExtensionRangeOptions // pbandk.wkt/ExtensionRangeOptions.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/ExtensionRangeOptions.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/ExtensionRangeOptions> // pbandk.wkt/ExtensionRangeOptions.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun Declaration(kotlin/Int? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/ExtensionRangeOptions.Declaration // pbandk.wkt/ExtensionRangeOptions.Companion.Declaration|Declaration(kotlin.Int?;kotlin.String?;kotlin.String?;kotlin.Boolean?;kotlin.Boolean?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/ExtensionRangeOptions.FieldDescriptors|null[0]
        final val declaration // pbandk.wkt/ExtensionRangeOptions.FieldDescriptors.declaration|{}declaration[0]
            final fun <get-declaration>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/ExtensionRangeOptions, kotlin.collections/List<pbandk.wkt/ExtensionRangeOptions.Declaration>, kotlin.collections/MutableList<pbandk.wkt/ExtensionRangeOptions.Declaration>> // pbandk.wkt/ExtensionRangeOptions.FieldDescriptors.declaration.<get-declaration>|<get-declaration>(){}[0]
        final val features // pbandk.wkt/ExtensionRangeOptions.FieldDescriptors.features|{}features[0]
            final fun <get-features>(): pbandk/FieldDescriptor<pbandk.wkt/ExtensionRangeOptions, pbandk.wkt/FeatureSet?> // pbandk.wkt/ExtensionRangeOptions.FieldDescriptors.features.<get-features>|<get-features>(){}[0]
        final val uninterpretedOption // pbandk.wkt/ExtensionRangeOptions.FieldDescriptors.uninterpretedOption|{}uninterpretedOption[0]
            final fun <get-uninterpretedOption>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/ExtensionRangeOptions, kotlin.collections/List<pbandk.wkt/UninterpretedOption>, kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption>> // pbandk.wkt/ExtensionRangeOptions.FieldDescriptors.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]
        final val verification // pbandk.wkt/ExtensionRangeOptions.FieldDescriptors.verification|{}verification[0]
            final fun <get-verification>(): pbandk/FieldDescriptor<pbandk.wkt/ExtensionRangeOptions, pbandk.wkt/ExtensionRangeOptions.VerificationState?> // pbandk.wkt/ExtensionRangeOptions.FieldDescriptors.verification.<get-verification>|<get-verification>(){}[0]
    }
}

sealed interface pbandk.wkt/FeatureSet : pbandk/ExtendableMessage<pbandk.wkt/FeatureSet> { // pbandk.wkt/FeatureSet|null[0]
    abstract val descriptor // pbandk.wkt/FeatureSet.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FeatureSet> // pbandk.wkt/FeatureSet.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val enumType // pbandk.wkt/FeatureSet.enumType|{}enumType[0]
        abstract fun <get-enumType>(): pbandk.wkt/FeatureSet.EnumType? // pbandk.wkt/FeatureSet.enumType.<get-enumType>|<get-enumType>(){}[0]
    abstract val fieldPresence // pbandk.wkt/FeatureSet.fieldPresence|{}fieldPresence[0]
        abstract fun <get-fieldPresence>(): pbandk.wkt/FeatureSet.FieldPresence? // pbandk.wkt/FeatureSet.fieldPresence.<get-fieldPresence>|<get-fieldPresence>(){}[0]
    abstract val jsonFormat // pbandk.wkt/FeatureSet.jsonFormat|{}jsonFormat[0]
        abstract fun <get-jsonFormat>(): pbandk.wkt/FeatureSet.JsonFormat? // pbandk.wkt/FeatureSet.jsonFormat.<get-jsonFormat>|<get-jsonFormat>(){}[0]
    abstract val messageEncoding // pbandk.wkt/FeatureSet.messageEncoding|{}messageEncoding[0]
        abstract fun <get-messageEncoding>(): pbandk.wkt/FeatureSet.MessageEncoding? // pbandk.wkt/FeatureSet.messageEncoding.<get-messageEncoding>|<get-messageEncoding>(){}[0]
    abstract val repeatedFieldEncoding // pbandk.wkt/FeatureSet.repeatedFieldEncoding|{}repeatedFieldEncoding[0]
        abstract fun <get-repeatedFieldEncoding>(): pbandk.wkt/FeatureSet.RepeatedFieldEncoding? // pbandk.wkt/FeatureSet.repeatedFieldEncoding.<get-repeatedFieldEncoding>|<get-repeatedFieldEncoding>(){}[0]
    abstract val utf8Validation // pbandk.wkt/FeatureSet.utf8Validation|{}utf8Validation[0]
        abstract fun <get-utf8Validation>(): pbandk.wkt/FeatureSet.Utf8Validation? // pbandk.wkt/FeatureSet.utf8Validation.<get-utf8Validation>|<get-utf8Validation>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableFeatureSet, kotlin/Unit>): pbandk.wkt/FeatureSet // pbandk.wkt/FeatureSet.copy|copy(kotlin.Function1<pbandk.wkt.MutableFeatureSet,kotlin.Unit>){}[0]
    abstract fun copy(pbandk.wkt/FeatureSet.FieldPresence? = ..., pbandk.wkt/FeatureSet.EnumType? = ..., pbandk.wkt/FeatureSet.RepeatedFieldEncoding? = ..., pbandk.wkt/FeatureSet.Utf8Validation? = ..., pbandk.wkt/FeatureSet.MessageEncoding? = ..., pbandk.wkt/FeatureSet.JsonFormat? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FeatureSet // pbandk.wkt/FeatureSet.copy|copy(pbandk.wkt.FeatureSet.FieldPresence?;pbandk.wkt.FeatureSet.EnumType?;pbandk.wkt.FeatureSet.RepeatedFieldEncoding?;pbandk.wkt.FeatureSet.Utf8Validation?;pbandk.wkt.FeatureSet.MessageEncoding?;pbandk.wkt.FeatureSet.JsonFormat?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/FeatureSet // pbandk.wkt/FeatureSet.plus|plus(pbandk.Message?){}[0]

    sealed interface EnumType : pbandk/Message.Enum { // pbandk.wkt/FeatureSet.EnumType|null[0]
        open val descriptor // pbandk.wkt/FeatureSet.EnumType.descriptor|{}descriptor[0]
            open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FeatureSet.EnumType> // pbandk.wkt/FeatureSet.EnumType.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/FeatureSet.EnumType>, pbandk.wkt/FeatureSet.EnumType { // pbandk.wkt/FeatureSet.EnumType.UNRECOGNIZED|null[0]
            constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/FeatureSet.EnumType.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
        }

        final object CLOSED : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FeatureSet.EnumType>, pbandk.wkt/FeatureSet.EnumType // pbandk.wkt/FeatureSet.EnumType.CLOSED|null[0]

        final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/FeatureSet.EnumType> { // pbandk.wkt/FeatureSet.EnumType.Companion|null[0]
            final val descriptor // pbandk.wkt/FeatureSet.EnumType.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FeatureSet.EnumType> // pbandk.wkt/FeatureSet.EnumType.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
            final val values // pbandk.wkt/FeatureSet.EnumType.Companion.values|{}values[0]
                final fun <get-values>(): kotlin.collections/List<pbandk.wkt/FeatureSet.EnumType> // pbandk.wkt/FeatureSet.EnumType.Companion.values.<get-values>|<get-values>(){}[0]

            final fun fromName(kotlin/String): pbandk.wkt/FeatureSet.EnumType // pbandk.wkt/FeatureSet.EnumType.Companion.fromName|fromName(kotlin.String){}[0]
            final fun fromValue(kotlin/Int): pbandk.wkt/FeatureSet.EnumType // pbandk.wkt/FeatureSet.EnumType.Companion.fromValue|fromValue(kotlin.Int){}[0]
        }

        final object OPEN : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FeatureSet.EnumType>, pbandk.wkt/FeatureSet.EnumType // pbandk.wkt/FeatureSet.EnumType.OPEN|null[0]

        final object UNKNOWN : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FeatureSet.EnumType>, pbandk.wkt/FeatureSet.EnumType // pbandk.wkt/FeatureSet.EnumType.UNKNOWN|null[0]
    }

    sealed interface FieldPresence : pbandk/Message.Enum { // pbandk.wkt/FeatureSet.FieldPresence|null[0]
        open val descriptor // pbandk.wkt/FeatureSet.FieldPresence.descriptor|{}descriptor[0]
            open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FeatureSet.FieldPresence> // pbandk.wkt/FeatureSet.FieldPresence.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/FeatureSet.FieldPresence>, pbandk.wkt/FeatureSet.FieldPresence { // pbandk.wkt/FeatureSet.FieldPresence.UNRECOGNIZED|null[0]
            constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/FeatureSet.FieldPresence.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
        }

        final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/FeatureSet.FieldPresence> { // pbandk.wkt/FeatureSet.FieldPresence.Companion|null[0]
            final val descriptor // pbandk.wkt/FeatureSet.FieldPresence.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FeatureSet.FieldPresence> // pbandk.wkt/FeatureSet.FieldPresence.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
            final val values // pbandk.wkt/FeatureSet.FieldPresence.Companion.values|{}values[0]
                final fun <get-values>(): kotlin.collections/List<pbandk.wkt/FeatureSet.FieldPresence> // pbandk.wkt/FeatureSet.FieldPresence.Companion.values.<get-values>|<get-values>(){}[0]

            final fun fromName(kotlin/String): pbandk.wkt/FeatureSet.FieldPresence // pbandk.wkt/FeatureSet.FieldPresence.Companion.fromName|fromName(kotlin.String){}[0]
            final fun fromValue(kotlin/Int): pbandk.wkt/FeatureSet.FieldPresence // pbandk.wkt/FeatureSet.FieldPresence.Companion.fromValue|fromValue(kotlin.Int){}[0]
        }

        final object EXPLICIT : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FeatureSet.FieldPresence>, pbandk.wkt/FeatureSet.FieldPresence // pbandk.wkt/FeatureSet.FieldPresence.EXPLICIT|null[0]

        final object IMPLICIT : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FeatureSet.FieldPresence>, pbandk.wkt/FeatureSet.FieldPresence // pbandk.wkt/FeatureSet.FieldPresence.IMPLICIT|null[0]

        final object LEGACY_REQUIRED : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FeatureSet.FieldPresence>, pbandk.wkt/FeatureSet.FieldPresence // pbandk.wkt/FeatureSet.FieldPresence.LEGACY_REQUIRED|null[0]

        final object UNKNOWN : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FeatureSet.FieldPresence>, pbandk.wkt/FeatureSet.FieldPresence // pbandk.wkt/FeatureSet.FieldPresence.UNKNOWN|null[0]
    }

    sealed interface JsonFormat : pbandk/Message.Enum { // pbandk.wkt/FeatureSet.JsonFormat|null[0]
        open val descriptor // pbandk.wkt/FeatureSet.JsonFormat.descriptor|{}descriptor[0]
            open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FeatureSet.JsonFormat> // pbandk.wkt/FeatureSet.JsonFormat.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/FeatureSet.JsonFormat>, pbandk.wkt/FeatureSet.JsonFormat { // pbandk.wkt/FeatureSet.JsonFormat.UNRECOGNIZED|null[0]
            constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/FeatureSet.JsonFormat.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
        }

        final object ALLOW : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FeatureSet.JsonFormat>, pbandk.wkt/FeatureSet.JsonFormat // pbandk.wkt/FeatureSet.JsonFormat.ALLOW|null[0]

        final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/FeatureSet.JsonFormat> { // pbandk.wkt/FeatureSet.JsonFormat.Companion|null[0]
            final val descriptor // pbandk.wkt/FeatureSet.JsonFormat.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FeatureSet.JsonFormat> // pbandk.wkt/FeatureSet.JsonFormat.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
            final val values // pbandk.wkt/FeatureSet.JsonFormat.Companion.values|{}values[0]
                final fun <get-values>(): kotlin.collections/List<pbandk.wkt/FeatureSet.JsonFormat> // pbandk.wkt/FeatureSet.JsonFormat.Companion.values.<get-values>|<get-values>(){}[0]

            final fun fromName(kotlin/String): pbandk.wkt/FeatureSet.JsonFormat // pbandk.wkt/FeatureSet.JsonFormat.Companion.fromName|fromName(kotlin.String){}[0]
            final fun fromValue(kotlin/Int): pbandk.wkt/FeatureSet.JsonFormat // pbandk.wkt/FeatureSet.JsonFormat.Companion.fromValue|fromValue(kotlin.Int){}[0]
        }

        final object LEGACY_BEST_EFFORT : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FeatureSet.JsonFormat>, pbandk.wkt/FeatureSet.JsonFormat // pbandk.wkt/FeatureSet.JsonFormat.LEGACY_BEST_EFFORT|null[0]

        final object UNKNOWN : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FeatureSet.JsonFormat>, pbandk.wkt/FeatureSet.JsonFormat // pbandk.wkt/FeatureSet.JsonFormat.UNKNOWN|null[0]
    }

    sealed interface MessageEncoding : pbandk/Message.Enum { // pbandk.wkt/FeatureSet.MessageEncoding|null[0]
        open val descriptor // pbandk.wkt/FeatureSet.MessageEncoding.descriptor|{}descriptor[0]
            open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FeatureSet.MessageEncoding> // pbandk.wkt/FeatureSet.MessageEncoding.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/FeatureSet.MessageEncoding>, pbandk.wkt/FeatureSet.MessageEncoding { // pbandk.wkt/FeatureSet.MessageEncoding.UNRECOGNIZED|null[0]
            constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/FeatureSet.MessageEncoding.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
        }

        final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/FeatureSet.MessageEncoding> { // pbandk.wkt/FeatureSet.MessageEncoding.Companion|null[0]
            final val descriptor // pbandk.wkt/FeatureSet.MessageEncoding.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FeatureSet.MessageEncoding> // pbandk.wkt/FeatureSet.MessageEncoding.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
            final val values // pbandk.wkt/FeatureSet.MessageEncoding.Companion.values|{}values[0]
                final fun <get-values>(): kotlin.collections/List<pbandk.wkt/FeatureSet.MessageEncoding> // pbandk.wkt/FeatureSet.MessageEncoding.Companion.values.<get-values>|<get-values>(){}[0]

            final fun fromName(kotlin/String): pbandk.wkt/FeatureSet.MessageEncoding // pbandk.wkt/FeatureSet.MessageEncoding.Companion.fromName|fromName(kotlin.String){}[0]
            final fun fromValue(kotlin/Int): pbandk.wkt/FeatureSet.MessageEncoding // pbandk.wkt/FeatureSet.MessageEncoding.Companion.fromValue|fromValue(kotlin.Int){}[0]
        }

        final object DELIMITED : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FeatureSet.MessageEncoding>, pbandk.wkt/FeatureSet.MessageEncoding // pbandk.wkt/FeatureSet.MessageEncoding.DELIMITED|null[0]

        final object LENGTH_PREFIXED : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FeatureSet.MessageEncoding>, pbandk.wkt/FeatureSet.MessageEncoding // pbandk.wkt/FeatureSet.MessageEncoding.LENGTH_PREFIXED|null[0]

        final object UNKNOWN : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FeatureSet.MessageEncoding>, pbandk.wkt/FeatureSet.MessageEncoding // pbandk.wkt/FeatureSet.MessageEncoding.UNKNOWN|null[0]
    }

    sealed interface RepeatedFieldEncoding : pbandk/Message.Enum { // pbandk.wkt/FeatureSet.RepeatedFieldEncoding|null[0]
        open val descriptor // pbandk.wkt/FeatureSet.RepeatedFieldEncoding.descriptor|{}descriptor[0]
            open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FeatureSet.RepeatedFieldEncoding> // pbandk.wkt/FeatureSet.RepeatedFieldEncoding.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/FeatureSet.RepeatedFieldEncoding>, pbandk.wkt/FeatureSet.RepeatedFieldEncoding { // pbandk.wkt/FeatureSet.RepeatedFieldEncoding.UNRECOGNIZED|null[0]
            constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/FeatureSet.RepeatedFieldEncoding.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
        }

        final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/FeatureSet.RepeatedFieldEncoding> { // pbandk.wkt/FeatureSet.RepeatedFieldEncoding.Companion|null[0]
            final val descriptor // pbandk.wkt/FeatureSet.RepeatedFieldEncoding.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FeatureSet.RepeatedFieldEncoding> // pbandk.wkt/FeatureSet.RepeatedFieldEncoding.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
            final val values // pbandk.wkt/FeatureSet.RepeatedFieldEncoding.Companion.values|{}values[0]
                final fun <get-values>(): kotlin.collections/List<pbandk.wkt/FeatureSet.RepeatedFieldEncoding> // pbandk.wkt/FeatureSet.RepeatedFieldEncoding.Companion.values.<get-values>|<get-values>(){}[0]

            final fun fromName(kotlin/String): pbandk.wkt/FeatureSet.RepeatedFieldEncoding // pbandk.wkt/FeatureSet.RepeatedFieldEncoding.Companion.fromName|fromName(kotlin.String){}[0]
            final fun fromValue(kotlin/Int): pbandk.wkt/FeatureSet.RepeatedFieldEncoding // pbandk.wkt/FeatureSet.RepeatedFieldEncoding.Companion.fromValue|fromValue(kotlin.Int){}[0]
        }

        final object EXPANDED : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FeatureSet.RepeatedFieldEncoding>, pbandk.wkt/FeatureSet.RepeatedFieldEncoding // pbandk.wkt/FeatureSet.RepeatedFieldEncoding.EXPANDED|null[0]

        final object PACKED : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FeatureSet.RepeatedFieldEncoding>, pbandk.wkt/FeatureSet.RepeatedFieldEncoding // pbandk.wkt/FeatureSet.RepeatedFieldEncoding.PACKED|null[0]

        final object UNKNOWN : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FeatureSet.RepeatedFieldEncoding>, pbandk.wkt/FeatureSet.RepeatedFieldEncoding // pbandk.wkt/FeatureSet.RepeatedFieldEncoding.UNKNOWN|null[0]
    }

    sealed interface Utf8Validation : pbandk/Message.Enum { // pbandk.wkt/FeatureSet.Utf8Validation|null[0]
        open val descriptor // pbandk.wkt/FeatureSet.Utf8Validation.descriptor|{}descriptor[0]
            open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FeatureSet.Utf8Validation> // pbandk.wkt/FeatureSet.Utf8Validation.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/FeatureSet.Utf8Validation>, pbandk.wkt/FeatureSet.Utf8Validation { // pbandk.wkt/FeatureSet.Utf8Validation.UNRECOGNIZED|null[0]
            constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/FeatureSet.Utf8Validation.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
        }

        final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/FeatureSet.Utf8Validation> { // pbandk.wkt/FeatureSet.Utf8Validation.Companion|null[0]
            final val descriptor // pbandk.wkt/FeatureSet.Utf8Validation.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FeatureSet.Utf8Validation> // pbandk.wkt/FeatureSet.Utf8Validation.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
            final val values // pbandk.wkt/FeatureSet.Utf8Validation.Companion.values|{}values[0]
                final fun <get-values>(): kotlin.collections/List<pbandk.wkt/FeatureSet.Utf8Validation> // pbandk.wkt/FeatureSet.Utf8Validation.Companion.values.<get-values>|<get-values>(){}[0]

            final fun fromName(kotlin/String): pbandk.wkt/FeatureSet.Utf8Validation // pbandk.wkt/FeatureSet.Utf8Validation.Companion.fromName|fromName(kotlin.String){}[0]
            final fun fromValue(kotlin/Int): pbandk.wkt/FeatureSet.Utf8Validation // pbandk.wkt/FeatureSet.Utf8Validation.Companion.fromValue|fromValue(kotlin.Int){}[0]
        }

        final object NONE : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FeatureSet.Utf8Validation>, pbandk.wkt/FeatureSet.Utf8Validation // pbandk.wkt/FeatureSet.Utf8Validation.NONE|null[0]

        final object UTF8_VALIDATION_UNKNOWN : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FeatureSet.Utf8Validation>, pbandk.wkt/FeatureSet.Utf8Validation // pbandk.wkt/FeatureSet.Utf8Validation.UTF8_VALIDATION_UNKNOWN|null[0]

        final object VERIFY : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FeatureSet.Utf8Validation>, pbandk.wkt/FeatureSet.Utf8Validation // pbandk.wkt/FeatureSet.Utf8Validation.VERIFY|null[0]
    }

    final object Companion : pbandk/Message.Companion<pbandk.wkt/FeatureSet> { // pbandk.wkt/FeatureSet.Companion|null[0]
        final val defaultInstance // pbandk.wkt/FeatureSet.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/FeatureSet // pbandk.wkt/FeatureSet.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/FeatureSet.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FeatureSet> // pbandk.wkt/FeatureSet.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/FeatureSet.FieldDescriptors|null[0]
        final val enumType // pbandk.wkt/FeatureSet.FieldDescriptors.enumType|{}enumType[0]
            final fun <get-enumType>(): pbandk/FieldDescriptor<pbandk.wkt/FeatureSet, pbandk.wkt/FeatureSet.EnumType?> // pbandk.wkt/FeatureSet.FieldDescriptors.enumType.<get-enumType>|<get-enumType>(){}[0]
        final val fieldPresence // pbandk.wkt/FeatureSet.FieldDescriptors.fieldPresence|{}fieldPresence[0]
            final fun <get-fieldPresence>(): pbandk/FieldDescriptor<pbandk.wkt/FeatureSet, pbandk.wkt/FeatureSet.FieldPresence?> // pbandk.wkt/FeatureSet.FieldDescriptors.fieldPresence.<get-fieldPresence>|<get-fieldPresence>(){}[0]
        final val jsonFormat // pbandk.wkt/FeatureSet.FieldDescriptors.jsonFormat|{}jsonFormat[0]
            final fun <get-jsonFormat>(): pbandk/FieldDescriptor<pbandk.wkt/FeatureSet, pbandk.wkt/FeatureSet.JsonFormat?> // pbandk.wkt/FeatureSet.FieldDescriptors.jsonFormat.<get-jsonFormat>|<get-jsonFormat>(){}[0]
        final val messageEncoding // pbandk.wkt/FeatureSet.FieldDescriptors.messageEncoding|{}messageEncoding[0]
            final fun <get-messageEncoding>(): pbandk/FieldDescriptor<pbandk.wkt/FeatureSet, pbandk.wkt/FeatureSet.MessageEncoding?> // pbandk.wkt/FeatureSet.FieldDescriptors.messageEncoding.<get-messageEncoding>|<get-messageEncoding>(){}[0]
        final val repeatedFieldEncoding // pbandk.wkt/FeatureSet.FieldDescriptors.repeatedFieldEncoding|{}repeatedFieldEncoding[0]
            final fun <get-repeatedFieldEncoding>(): pbandk/FieldDescriptor<pbandk.wkt/FeatureSet, pbandk.wkt/FeatureSet.RepeatedFieldEncoding?> // pbandk.wkt/FeatureSet.FieldDescriptors.repeatedFieldEncoding.<get-repeatedFieldEncoding>|<get-repeatedFieldEncoding>(){}[0]
        final val utf8Validation // pbandk.wkt/FeatureSet.FieldDescriptors.utf8Validation|{}utf8Validation[0]
            final fun <get-utf8Validation>(): pbandk/FieldDescriptor<pbandk.wkt/FeatureSet, pbandk.wkt/FeatureSet.Utf8Validation?> // pbandk.wkt/FeatureSet.FieldDescriptors.utf8Validation.<get-utf8Validation>|<get-utf8Validation>(){}[0]
    }
}

sealed interface pbandk.wkt/FeatureSetDefaults : pbandk/Message { // pbandk.wkt/FeatureSetDefaults|null[0]
    abstract val defaults // pbandk.wkt/FeatureSetDefaults.defaults|{}defaults[0]
        abstract fun <get-defaults>(): kotlin.collections/List<pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault> // pbandk.wkt/FeatureSetDefaults.defaults.<get-defaults>|<get-defaults>(){}[0]
    abstract val descriptor // pbandk.wkt/FeatureSetDefaults.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FeatureSetDefaults> // pbandk.wkt/FeatureSetDefaults.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val maximumEdition // pbandk.wkt/FeatureSetDefaults.maximumEdition|{}maximumEdition[0]
        abstract fun <get-maximumEdition>(): pbandk.wkt/Edition? // pbandk.wkt/FeatureSetDefaults.maximumEdition.<get-maximumEdition>|<get-maximumEdition>(){}[0]
    abstract val minimumEdition // pbandk.wkt/FeatureSetDefaults.minimumEdition|{}minimumEdition[0]
        abstract fun <get-minimumEdition>(): pbandk.wkt/Edition? // pbandk.wkt/FeatureSetDefaults.minimumEdition.<get-minimumEdition>|<get-minimumEdition>(){}[0]

    abstract fun copy(kotlin.collections/List<pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault> = ..., pbandk.wkt/Edition? = ..., pbandk.wkt/Edition? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FeatureSetDefaults // pbandk.wkt/FeatureSetDefaults.copy|copy(kotlin.collections.List<pbandk.wkt.FeatureSetDefaults.FeatureSetEditionDefault>;pbandk.wkt.Edition?;pbandk.wkt.Edition?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableFeatureSetDefaults, kotlin/Unit>): pbandk.wkt/FeatureSetDefaults // pbandk.wkt/FeatureSetDefaults.copy|copy(kotlin.Function1<pbandk.wkt.MutableFeatureSetDefaults,kotlin.Unit>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/FeatureSetDefaults // pbandk.wkt/FeatureSetDefaults.plus|plus(pbandk.Message?){}[0]

    sealed interface FeatureSetEditionDefault : pbandk/Message { // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault|null[0]
        abstract val descriptor // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.descriptor|{}descriptor[0]
            abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault> // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        abstract val edition // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.edition|{}edition[0]
            abstract fun <get-edition>(): pbandk.wkt/Edition? // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.edition.<get-edition>|<get-edition>(){}[0]
        abstract val fixedFeatures // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.fixedFeatures|{}fixedFeatures[0]
            abstract fun <get-fixedFeatures>(): pbandk.wkt/FeatureSet? // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.fixedFeatures.<get-fixedFeatures>|<get-fixedFeatures>(){}[0]
        abstract val overridableFeatures // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.overridableFeatures|{}overridableFeatures[0]
            abstract fun <get-overridableFeatures>(): pbandk.wkt/FeatureSet? // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.overridableFeatures.<get-overridableFeatures>|<get-overridableFeatures>(){}[0]

        abstract fun copy(kotlin/Function1<pbandk.wkt/FeatureSetDefaults.MutableFeatureSetEditionDefault, kotlin/Unit>): pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.copy|copy(kotlin.Function1<pbandk.wkt.FeatureSetDefaults.MutableFeatureSetEditionDefault,kotlin.Unit>){}[0]
        abstract fun copy(pbandk.wkt/Edition? = ..., pbandk.wkt/FeatureSet? = ..., pbandk.wkt/FeatureSet? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.copy|copy(pbandk.wkt.Edition?;pbandk.wkt.FeatureSet?;pbandk.wkt.FeatureSet?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
        abstract fun plus(pbandk/Message?): pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.plus|plus(pbandk.Message?){}[0]

        final object Companion : pbandk/Message.Companion<pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault> { // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.Companion|null[0]
            final val defaultInstance // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.Companion.defaultInstance|{}defaultInstance[0]
                final fun <get-defaultInstance>(): pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
            final val descriptor // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault> // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        }

        final object FieldDescriptors { // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.FieldDescriptors|null[0]
            final val edition // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.FieldDescriptors.edition|{}edition[0]
                final fun <get-edition>(): pbandk/FieldDescriptor<pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault, pbandk.wkt/Edition?> // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.FieldDescriptors.edition.<get-edition>|<get-edition>(){}[0]
            final val fixedFeatures // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.FieldDescriptors.fixedFeatures|{}fixedFeatures[0]
                final fun <get-fixedFeatures>(): pbandk/FieldDescriptor<pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault, pbandk.wkt/FeatureSet?> // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.FieldDescriptors.fixedFeatures.<get-fixedFeatures>|<get-fixedFeatures>(){}[0]
            final val overridableFeatures // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.FieldDescriptors.overridableFeatures|{}overridableFeatures[0]
                final fun <get-overridableFeatures>(): pbandk/FieldDescriptor<pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault, pbandk.wkt/FeatureSet?> // pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault.FieldDescriptors.overridableFeatures.<get-overridableFeatures>|<get-overridableFeatures>(){}[0]
        }
    }

    sealed interface MutableFeatureSetEditionDefault : pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault, pbandk/MutableMessage<pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault> { // pbandk.wkt/FeatureSetDefaults.MutableFeatureSetEditionDefault|null[0]
        abstract var edition // pbandk.wkt/FeatureSetDefaults.MutableFeatureSetEditionDefault.edition|{}edition[0]
            abstract fun <get-edition>(): pbandk.wkt/Edition? // pbandk.wkt/FeatureSetDefaults.MutableFeatureSetEditionDefault.edition.<get-edition>|<get-edition>(){}[0]
            abstract fun <set-edition>(pbandk.wkt/Edition?) // pbandk.wkt/FeatureSetDefaults.MutableFeatureSetEditionDefault.edition.<set-edition>|<set-edition>(pbandk.wkt.Edition?){}[0]
        abstract var fixedFeatures // pbandk.wkt/FeatureSetDefaults.MutableFeatureSetEditionDefault.fixedFeatures|{}fixedFeatures[0]
            abstract fun <get-fixedFeatures>(): pbandk.wkt/FeatureSet? // pbandk.wkt/FeatureSetDefaults.MutableFeatureSetEditionDefault.fixedFeatures.<get-fixedFeatures>|<get-fixedFeatures>(){}[0]
            abstract fun <set-fixedFeatures>(pbandk.wkt/FeatureSet?) // pbandk.wkt/FeatureSetDefaults.MutableFeatureSetEditionDefault.fixedFeatures.<set-fixedFeatures>|<set-fixedFeatures>(pbandk.wkt.FeatureSet?){}[0]
        abstract var overridableFeatures // pbandk.wkt/FeatureSetDefaults.MutableFeatureSetEditionDefault.overridableFeatures|{}overridableFeatures[0]
            abstract fun <get-overridableFeatures>(): pbandk.wkt/FeatureSet? // pbandk.wkt/FeatureSetDefaults.MutableFeatureSetEditionDefault.overridableFeatures.<get-overridableFeatures>|<get-overridableFeatures>(){}[0]
            abstract fun <set-overridableFeatures>(pbandk.wkt/FeatureSet?) // pbandk.wkt/FeatureSetDefaults.MutableFeatureSetEditionDefault.overridableFeatures.<set-overridableFeatures>|<set-overridableFeatures>(pbandk.wkt.FeatureSet?){}[0]
    }

    final object Companion : pbandk/Message.Companion<pbandk.wkt/FeatureSetDefaults> { // pbandk.wkt/FeatureSetDefaults.Companion|null[0]
        final val defaultInstance // pbandk.wkt/FeatureSetDefaults.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/FeatureSetDefaults // pbandk.wkt/FeatureSetDefaults.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/FeatureSetDefaults.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FeatureSetDefaults> // pbandk.wkt/FeatureSetDefaults.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun FeatureSetEditionDefault(pbandk.wkt/Edition? = ..., pbandk.wkt/FeatureSet? = ..., pbandk.wkt/FeatureSet? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault // pbandk.wkt/FeatureSetDefaults.Companion.FeatureSetEditionDefault|FeatureSetEditionDefault(pbandk.wkt.Edition?;pbandk.wkt.FeatureSet?;pbandk.wkt.FeatureSet?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/FeatureSetDefaults.FieldDescriptors|null[0]
        final val defaults // pbandk.wkt/FeatureSetDefaults.FieldDescriptors.defaults|{}defaults[0]
            final fun <get-defaults>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/FeatureSetDefaults, kotlin.collections/List<pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault>, kotlin.collections/MutableList<pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault>> // pbandk.wkt/FeatureSetDefaults.FieldDescriptors.defaults.<get-defaults>|<get-defaults>(){}[0]
        final val maximumEdition // pbandk.wkt/FeatureSetDefaults.FieldDescriptors.maximumEdition|{}maximumEdition[0]
            final fun <get-maximumEdition>(): pbandk/FieldDescriptor<pbandk.wkt/FeatureSetDefaults, pbandk.wkt/Edition?> // pbandk.wkt/FeatureSetDefaults.FieldDescriptors.maximumEdition.<get-maximumEdition>|<get-maximumEdition>(){}[0]
        final val minimumEdition // pbandk.wkt/FeatureSetDefaults.FieldDescriptors.minimumEdition|{}minimumEdition[0]
            final fun <get-minimumEdition>(): pbandk/FieldDescriptor<pbandk.wkt/FeatureSetDefaults, pbandk.wkt/Edition?> // pbandk.wkt/FeatureSetDefaults.FieldDescriptors.minimumEdition.<get-minimumEdition>|<get-minimumEdition>(){}[0]
    }
}

sealed interface pbandk.wkt/Field : pbandk/Message { // pbandk.wkt/Field|null[0]
    abstract val cardinality // pbandk.wkt/Field.cardinality|{}cardinality[0]
        abstract fun <get-cardinality>(): pbandk.wkt/Field.Cardinality // pbandk.wkt/Field.cardinality.<get-cardinality>|<get-cardinality>(){}[0]
    abstract val defaultValue // pbandk.wkt/Field.defaultValue|{}defaultValue[0]
        abstract fun <get-defaultValue>(): kotlin/String // pbandk.wkt/Field.defaultValue.<get-defaultValue>|<get-defaultValue>(){}[0]
    abstract val descriptor // pbandk.wkt/Field.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Field> // pbandk.wkt/Field.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val jsonName // pbandk.wkt/Field.jsonName|{}jsonName[0]
        abstract fun <get-jsonName>(): kotlin/String // pbandk.wkt/Field.jsonName.<get-jsonName>|<get-jsonName>(){}[0]
    abstract val kind // pbandk.wkt/Field.kind|{}kind[0]
        abstract fun <get-kind>(): pbandk.wkt/Field.Kind // pbandk.wkt/Field.kind.<get-kind>|<get-kind>(){}[0]
    abstract val name // pbandk.wkt/Field.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // pbandk.wkt/Field.name.<get-name>|<get-name>(){}[0]
    abstract val number // pbandk.wkt/Field.number|{}number[0]
        abstract fun <get-number>(): kotlin/Int // pbandk.wkt/Field.number.<get-number>|<get-number>(){}[0]
    abstract val oneofIndex // pbandk.wkt/Field.oneofIndex|{}oneofIndex[0]
        abstract fun <get-oneofIndex>(): kotlin/Int // pbandk.wkt/Field.oneofIndex.<get-oneofIndex>|<get-oneofIndex>(){}[0]
    abstract val options // pbandk.wkt/Field.options|{}options[0]
        abstract fun <get-options>(): kotlin.collections/List<pbandk.wkt/Option> // pbandk.wkt/Field.options.<get-options>|<get-options>(){}[0]
    abstract val packed // pbandk.wkt/Field.packed|{}packed[0]
        abstract fun <get-packed>(): kotlin/Boolean // pbandk.wkt/Field.packed.<get-packed>|<get-packed>(){}[0]
    abstract val typeUrl // pbandk.wkt/Field.typeUrl|{}typeUrl[0]
        abstract fun <get-typeUrl>(): kotlin/String // pbandk.wkt/Field.typeUrl.<get-typeUrl>|<get-typeUrl>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableField, kotlin/Unit>): pbandk.wkt/Field // pbandk.wkt/Field.copy|copy(kotlin.Function1<pbandk.wkt.MutableField,kotlin.Unit>){}[0]
    abstract fun copy(pbandk.wkt/Field.Kind = ..., pbandk.wkt/Field.Cardinality = ..., kotlin/Int = ..., kotlin/String = ..., kotlin/String = ..., kotlin/Int = ..., kotlin/Boolean = ..., kotlin.collections/List<pbandk.wkt/Option> = ..., kotlin/String = ..., kotlin/String = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Field // pbandk.wkt/Field.copy|copy(pbandk.wkt.Field.Kind;pbandk.wkt.Field.Cardinality;kotlin.Int;kotlin.String;kotlin.String;kotlin.Int;kotlin.Boolean;kotlin.collections.List<pbandk.wkt.Option>;kotlin.String;kotlin.String;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/Field // pbandk.wkt/Field.plus|plus(pbandk.Message?){}[0]

    sealed interface Cardinality : pbandk/Message.Enum { // pbandk.wkt/Field.Cardinality|null[0]
        open val descriptor // pbandk.wkt/Field.Cardinality.descriptor|{}descriptor[0]
            open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/Field.Cardinality> // pbandk.wkt/Field.Cardinality.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/Field.Cardinality>, pbandk.wkt/Field.Cardinality { // pbandk.wkt/Field.Cardinality.UNRECOGNIZED|null[0]
            constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/Field.Cardinality.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
        }

        final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/Field.Cardinality> { // pbandk.wkt/Field.Cardinality.Companion|null[0]
            final val descriptor // pbandk.wkt/Field.Cardinality.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/Field.Cardinality> // pbandk.wkt/Field.Cardinality.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
            final val values // pbandk.wkt/Field.Cardinality.Companion.values|{}values[0]
                final fun <get-values>(): kotlin.collections/List<pbandk.wkt/Field.Cardinality> // pbandk.wkt/Field.Cardinality.Companion.values.<get-values>|<get-values>(){}[0]

            final fun fromName(kotlin/String): pbandk.wkt/Field.Cardinality // pbandk.wkt/Field.Cardinality.Companion.fromName|fromName(kotlin.String){}[0]
            final fun fromValue(kotlin/Int): pbandk.wkt/Field.Cardinality // pbandk.wkt/Field.Cardinality.Companion.fromValue|fromValue(kotlin.Int){}[0]
        }

        final object OPTIONAL : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Cardinality>, pbandk.wkt/Field.Cardinality // pbandk.wkt/Field.Cardinality.OPTIONAL|null[0]

        final object REPEATED : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Cardinality>, pbandk.wkt/Field.Cardinality // pbandk.wkt/Field.Cardinality.REPEATED|null[0]

        final object REQUIRED : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Cardinality>, pbandk.wkt/Field.Cardinality // pbandk.wkt/Field.Cardinality.REQUIRED|null[0]

        final object UNKNOWN : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Cardinality>, pbandk.wkt/Field.Cardinality // pbandk.wkt/Field.Cardinality.UNKNOWN|null[0]
    }

    sealed interface Kind : pbandk/Message.Enum { // pbandk.wkt/Field.Kind|null[0]
        open val descriptor // pbandk.wkt/Field.Kind.descriptor|{}descriptor[0]
            open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/Field.Kind> // pbandk.wkt/Field.Kind.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind { // pbandk.wkt/Field.Kind.UNRECOGNIZED|null[0]
            constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/Field.Kind.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
        }

        final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/Field.Kind> { // pbandk.wkt/Field.Kind.Companion|null[0]
            final val descriptor // pbandk.wkt/Field.Kind.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/Field.Kind> // pbandk.wkt/Field.Kind.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
            final val values // pbandk.wkt/Field.Kind.Companion.values|{}values[0]
                final fun <get-values>(): kotlin.collections/List<pbandk.wkt/Field.Kind> // pbandk.wkt/Field.Kind.Companion.values.<get-values>|<get-values>(){}[0]

            final fun fromName(kotlin/String): pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.Companion.fromName|fromName(kotlin.String){}[0]
            final fun fromValue(kotlin/Int): pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.Companion.fromValue|fromValue(kotlin.Int){}[0]
        }

        final object TYPE_BOOL : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.TYPE_BOOL|null[0]

        final object TYPE_BYTES : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.TYPE_BYTES|null[0]

        final object TYPE_DOUBLE : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.TYPE_DOUBLE|null[0]

        final object TYPE_ENUM : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.TYPE_ENUM|null[0]

        final object TYPE_FIXED32 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.TYPE_FIXED32|null[0]

        final object TYPE_FIXED64 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.TYPE_FIXED64|null[0]

        final object TYPE_FLOAT : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.TYPE_FLOAT|null[0]

        final object TYPE_GROUP : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.TYPE_GROUP|null[0]

        final object TYPE_INT32 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.TYPE_INT32|null[0]

        final object TYPE_INT64 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.TYPE_INT64|null[0]

        final object TYPE_MESSAGE : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.TYPE_MESSAGE|null[0]

        final object TYPE_SFIXED32 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.TYPE_SFIXED32|null[0]

        final object TYPE_SFIXED64 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.TYPE_SFIXED64|null[0]

        final object TYPE_SINT32 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.TYPE_SINT32|null[0]

        final object TYPE_SINT64 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.TYPE_SINT64|null[0]

        final object TYPE_STRING : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.TYPE_STRING|null[0]

        final object TYPE_UINT32 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.TYPE_UINT32|null[0]

        final object TYPE_UINT64 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.TYPE_UINT64|null[0]

        final object TYPE_UNKNOWN : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Field.Kind>, pbandk.wkt/Field.Kind // pbandk.wkt/Field.Kind.TYPE_UNKNOWN|null[0]
    }

    final object Companion : pbandk/Message.Companion<pbandk.wkt/Field> { // pbandk.wkt/Field.Companion|null[0]
        final val defaultInstance // pbandk.wkt/Field.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/Field // pbandk.wkt/Field.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/Field.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Field> // pbandk.wkt/Field.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/Field.FieldDescriptors|null[0]
        final val cardinality // pbandk.wkt/Field.FieldDescriptors.cardinality|{}cardinality[0]
            final fun <get-cardinality>(): pbandk/FieldDescriptor<pbandk.wkt/Field, pbandk.wkt/Field.Cardinality> // pbandk.wkt/Field.FieldDescriptors.cardinality.<get-cardinality>|<get-cardinality>(){}[0]
        final val defaultValue // pbandk.wkt/Field.FieldDescriptors.defaultValue|{}defaultValue[0]
            final fun <get-defaultValue>(): pbandk/FieldDescriptor<pbandk.wkt/Field, kotlin/String> // pbandk.wkt/Field.FieldDescriptors.defaultValue.<get-defaultValue>|<get-defaultValue>(){}[0]
        final val jsonName // pbandk.wkt/Field.FieldDescriptors.jsonName|{}jsonName[0]
            final fun <get-jsonName>(): pbandk/FieldDescriptor<pbandk.wkt/Field, kotlin/String> // pbandk.wkt/Field.FieldDescriptors.jsonName.<get-jsonName>|<get-jsonName>(){}[0]
        final val kind // pbandk.wkt/Field.FieldDescriptors.kind|{}kind[0]
            final fun <get-kind>(): pbandk/FieldDescriptor<pbandk.wkt/Field, pbandk.wkt/Field.Kind> // pbandk.wkt/Field.FieldDescriptors.kind.<get-kind>|<get-kind>(){}[0]
        final val name // pbandk.wkt/Field.FieldDescriptors.name|{}name[0]
            final fun <get-name>(): pbandk/FieldDescriptor<pbandk.wkt/Field, kotlin/String> // pbandk.wkt/Field.FieldDescriptors.name.<get-name>|<get-name>(){}[0]
        final val number // pbandk.wkt/Field.FieldDescriptors.number|{}number[0]
            final fun <get-number>(): pbandk/FieldDescriptor<pbandk.wkt/Field, kotlin/Int> // pbandk.wkt/Field.FieldDescriptors.number.<get-number>|<get-number>(){}[0]
        final val oneofIndex // pbandk.wkt/Field.FieldDescriptors.oneofIndex|{}oneofIndex[0]
            final fun <get-oneofIndex>(): pbandk/FieldDescriptor<pbandk.wkt/Field, kotlin/Int> // pbandk.wkt/Field.FieldDescriptors.oneofIndex.<get-oneofIndex>|<get-oneofIndex>(){}[0]
        final val options // pbandk.wkt/Field.FieldDescriptors.options|{}options[0]
            final fun <get-options>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/Field, kotlin.collections/List<pbandk.wkt/Option>, kotlin.collections/MutableList<pbandk.wkt/Option>> // pbandk.wkt/Field.FieldDescriptors.options.<get-options>|<get-options>(){}[0]
        final val packed // pbandk.wkt/Field.FieldDescriptors.packed|{}packed[0]
            final fun <get-packed>(): pbandk/FieldDescriptor<pbandk.wkt/Field, kotlin/Boolean> // pbandk.wkt/Field.FieldDescriptors.packed.<get-packed>|<get-packed>(){}[0]
        final val typeUrl // pbandk.wkt/Field.FieldDescriptors.typeUrl|{}typeUrl[0]
            final fun <get-typeUrl>(): pbandk/FieldDescriptor<pbandk.wkt/Field, kotlin/String> // pbandk.wkt/Field.FieldDescriptors.typeUrl.<get-typeUrl>|<get-typeUrl>(){}[0]
    }
}

sealed interface pbandk.wkt/FieldDescriptorProto : pbandk/Message { // pbandk.wkt/FieldDescriptorProto|null[0]
    abstract val defaultValue // pbandk.wkt/FieldDescriptorProto.defaultValue|{}defaultValue[0]
        abstract fun <get-defaultValue>(): kotlin/String? // pbandk.wkt/FieldDescriptorProto.defaultValue.<get-defaultValue>|<get-defaultValue>(){}[0]
    abstract val descriptor // pbandk.wkt/FieldDescriptorProto.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FieldDescriptorProto> // pbandk.wkt/FieldDescriptorProto.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val extendee // pbandk.wkt/FieldDescriptorProto.extendee|{}extendee[0]
        abstract fun <get-extendee>(): kotlin/String? // pbandk.wkt/FieldDescriptorProto.extendee.<get-extendee>|<get-extendee>(){}[0]
    abstract val jsonName // pbandk.wkt/FieldDescriptorProto.jsonName|{}jsonName[0]
        abstract fun <get-jsonName>(): kotlin/String? // pbandk.wkt/FieldDescriptorProto.jsonName.<get-jsonName>|<get-jsonName>(){}[0]
    abstract val label // pbandk.wkt/FieldDescriptorProto.label|{}label[0]
        abstract fun <get-label>(): pbandk.wkt/FieldDescriptorProto.Label? // pbandk.wkt/FieldDescriptorProto.label.<get-label>|<get-label>(){}[0]
    abstract val name // pbandk.wkt/FieldDescriptorProto.name|{}name[0]
        abstract fun <get-name>(): kotlin/String? // pbandk.wkt/FieldDescriptorProto.name.<get-name>|<get-name>(){}[0]
    abstract val number // pbandk.wkt/FieldDescriptorProto.number|{}number[0]
        abstract fun <get-number>(): kotlin/Int? // pbandk.wkt/FieldDescriptorProto.number.<get-number>|<get-number>(){}[0]
    abstract val oneofIndex // pbandk.wkt/FieldDescriptorProto.oneofIndex|{}oneofIndex[0]
        abstract fun <get-oneofIndex>(): kotlin/Int? // pbandk.wkt/FieldDescriptorProto.oneofIndex.<get-oneofIndex>|<get-oneofIndex>(){}[0]
    abstract val options // pbandk.wkt/FieldDescriptorProto.options|{}options[0]
        abstract fun <get-options>(): pbandk.wkt/FieldOptions? // pbandk.wkt/FieldDescriptorProto.options.<get-options>|<get-options>(){}[0]
    abstract val proto3Optional // pbandk.wkt/FieldDescriptorProto.proto3Optional|{}proto3Optional[0]
        abstract fun <get-proto3Optional>(): kotlin/Boolean? // pbandk.wkt/FieldDescriptorProto.proto3Optional.<get-proto3Optional>|<get-proto3Optional>(){}[0]
    abstract val type // pbandk.wkt/FieldDescriptorProto.type|{}type[0]
        abstract fun <get-type>(): pbandk.wkt/FieldDescriptorProto.Type? // pbandk.wkt/FieldDescriptorProto.type.<get-type>|<get-type>(){}[0]
    abstract val typeName // pbandk.wkt/FieldDescriptorProto.typeName|{}typeName[0]
        abstract fun <get-typeName>(): kotlin/String? // pbandk.wkt/FieldDescriptorProto.typeName.<get-typeName>|<get-typeName>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableFieldDescriptorProto, kotlin/Unit>): pbandk.wkt/FieldDescriptorProto // pbandk.wkt/FieldDescriptorProto.copy|copy(kotlin.Function1<pbandk.wkt.MutableFieldDescriptorProto,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/String? = ..., kotlin/Int? = ..., pbandk.wkt/FieldDescriptorProto.Label? = ..., pbandk.wkt/FieldDescriptorProto.Type? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/String? = ..., pbandk.wkt/FieldOptions? = ..., kotlin/Boolean? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FieldDescriptorProto // pbandk.wkt/FieldDescriptorProto.copy|copy(kotlin.String?;kotlin.Int?;pbandk.wkt.FieldDescriptorProto.Label?;pbandk.wkt.FieldDescriptorProto.Type?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Int?;kotlin.String?;pbandk.wkt.FieldOptions?;kotlin.Boolean?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/FieldDescriptorProto // pbandk.wkt/FieldDescriptorProto.plus|plus(pbandk.Message?){}[0]

    sealed interface Label : pbandk/Message.Enum { // pbandk.wkt/FieldDescriptorProto.Label|null[0]
        open val descriptor // pbandk.wkt/FieldDescriptorProto.Label.descriptor|{}descriptor[0]
            open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FieldDescriptorProto.Label> // pbandk.wkt/FieldDescriptorProto.Label.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/FieldDescriptorProto.Label>, pbandk.wkt/FieldDescriptorProto.Label { // pbandk.wkt/FieldDescriptorProto.Label.UNRECOGNIZED|null[0]
            constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/FieldDescriptorProto.Label.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
        }

        final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/FieldDescriptorProto.Label> { // pbandk.wkt/FieldDescriptorProto.Label.Companion|null[0]
            final val descriptor // pbandk.wkt/FieldDescriptorProto.Label.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FieldDescriptorProto.Label> // pbandk.wkt/FieldDescriptorProto.Label.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
            final val values // pbandk.wkt/FieldDescriptorProto.Label.Companion.values|{}values[0]
                final fun <get-values>(): kotlin.collections/List<pbandk.wkt/FieldDescriptorProto.Label> // pbandk.wkt/FieldDescriptorProto.Label.Companion.values.<get-values>|<get-values>(){}[0]

            final fun fromName(kotlin/String): pbandk.wkt/FieldDescriptorProto.Label // pbandk.wkt/FieldDescriptorProto.Label.Companion.fromName|fromName(kotlin.String){}[0]
            final fun fromValue(kotlin/Int): pbandk.wkt/FieldDescriptorProto.Label // pbandk.wkt/FieldDescriptorProto.Label.Companion.fromValue|fromValue(kotlin.Int){}[0]
        }

        final object OPTIONAL : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Label>, pbandk.wkt/FieldDescriptorProto.Label // pbandk.wkt/FieldDescriptorProto.Label.OPTIONAL|null[0]

        final object REPEATED : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Label>, pbandk.wkt/FieldDescriptorProto.Label // pbandk.wkt/FieldDescriptorProto.Label.REPEATED|null[0]

        final object REQUIRED : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Label>, pbandk.wkt/FieldDescriptorProto.Label // pbandk.wkt/FieldDescriptorProto.Label.REQUIRED|null[0]
    }

    sealed interface Type : pbandk/Message.Enum { // pbandk.wkt/FieldDescriptorProto.Type|null[0]
        open val descriptor // pbandk.wkt/FieldDescriptorProto.Type.descriptor|{}descriptor[0]
            open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FieldDescriptorProto.Type> // pbandk.wkt/FieldDescriptorProto.Type.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/FieldDescriptorProto.Type>, pbandk.wkt/FieldDescriptorProto.Type { // pbandk.wkt/FieldDescriptorProto.Type.UNRECOGNIZED|null[0]
            constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/FieldDescriptorProto.Type.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
        }

        final object BOOL : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Type>, pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.BOOL|null[0]

        final object BYTES : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Type>, pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.BYTES|null[0]

        final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/FieldDescriptorProto.Type> { // pbandk.wkt/FieldDescriptorProto.Type.Companion|null[0]
            final val descriptor // pbandk.wkt/FieldDescriptorProto.Type.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FieldDescriptorProto.Type> // pbandk.wkt/FieldDescriptorProto.Type.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
            final val values // pbandk.wkt/FieldDescriptorProto.Type.Companion.values|{}values[0]
                final fun <get-values>(): kotlin.collections/List<pbandk.wkt/FieldDescriptorProto.Type> // pbandk.wkt/FieldDescriptorProto.Type.Companion.values.<get-values>|<get-values>(){}[0]

            final fun fromName(kotlin/String): pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.Companion.fromName|fromName(kotlin.String){}[0]
            final fun fromValue(kotlin/Int): pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.Companion.fromValue|fromValue(kotlin.Int){}[0]
        }

        final object DOUBLE : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Type>, pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.DOUBLE|null[0]

        final object ENUM : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Type>, pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.ENUM|null[0]

        final object FIXED32 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Type>, pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.FIXED32|null[0]

        final object FIXED64 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Type>, pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.FIXED64|null[0]

        final object FLOAT : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Type>, pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.FLOAT|null[0]

        final object GROUP : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Type>, pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.GROUP|null[0]

        final object INT32 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Type>, pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.INT32|null[0]

        final object INT64 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Type>, pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.INT64|null[0]

        final object MESSAGE : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Type>, pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.MESSAGE|null[0]

        final object SFIXED32 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Type>, pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.SFIXED32|null[0]

        final object SFIXED64 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Type>, pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.SFIXED64|null[0]

        final object SINT32 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Type>, pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.SINT32|null[0]

        final object SINT64 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Type>, pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.SINT64|null[0]

        final object STRING : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Type>, pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.STRING|null[0]

        final object UINT32 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Type>, pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.UINT32|null[0]

        final object UINT64 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldDescriptorProto.Type>, pbandk.wkt/FieldDescriptorProto.Type // pbandk.wkt/FieldDescriptorProto.Type.UINT64|null[0]
    }

    final object Companion : pbandk/Message.Companion<pbandk.wkt/FieldDescriptorProto> { // pbandk.wkt/FieldDescriptorProto.Companion|null[0]
        final val defaultInstance // pbandk.wkt/FieldDescriptorProto.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/FieldDescriptorProto // pbandk.wkt/FieldDescriptorProto.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/FieldDescriptorProto.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FieldDescriptorProto> // pbandk.wkt/FieldDescriptorProto.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/FieldDescriptorProto.FieldDescriptors|null[0]
        final val defaultValue // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.defaultValue|{}defaultValue[0]
            final fun <get-defaultValue>(): pbandk/FieldDescriptor<pbandk.wkt/FieldDescriptorProto, kotlin/String?> // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.defaultValue.<get-defaultValue>|<get-defaultValue>(){}[0]
        final val extendee // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.extendee|{}extendee[0]
            final fun <get-extendee>(): pbandk/FieldDescriptor<pbandk.wkt/FieldDescriptorProto, kotlin/String?> // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.extendee.<get-extendee>|<get-extendee>(){}[0]
        final val jsonName // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.jsonName|{}jsonName[0]
            final fun <get-jsonName>(): pbandk/FieldDescriptor<pbandk.wkt/FieldDescriptorProto, kotlin/String?> // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.jsonName.<get-jsonName>|<get-jsonName>(){}[0]
        final val label // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.label|{}label[0]
            final fun <get-label>(): pbandk/FieldDescriptor<pbandk.wkt/FieldDescriptorProto, pbandk.wkt/FieldDescriptorProto.Label?> // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.label.<get-label>|<get-label>(){}[0]
        final val name // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.name|{}name[0]
            final fun <get-name>(): pbandk/FieldDescriptor<pbandk.wkt/FieldDescriptorProto, kotlin/String?> // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.name.<get-name>|<get-name>(){}[0]
        final val number // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.number|{}number[0]
            final fun <get-number>(): pbandk/FieldDescriptor<pbandk.wkt/FieldDescriptorProto, kotlin/Int?> // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.number.<get-number>|<get-number>(){}[0]
        final val oneofIndex // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.oneofIndex|{}oneofIndex[0]
            final fun <get-oneofIndex>(): pbandk/FieldDescriptor<pbandk.wkt/FieldDescriptorProto, kotlin/Int?> // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.oneofIndex.<get-oneofIndex>|<get-oneofIndex>(){}[0]
        final val options // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.options|{}options[0]
            final fun <get-options>(): pbandk/FieldDescriptor<pbandk.wkt/FieldDescriptorProto, pbandk.wkt/FieldOptions?> // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.options.<get-options>|<get-options>(){}[0]
        final val proto3Optional // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.proto3Optional|{}proto3Optional[0]
            final fun <get-proto3Optional>(): pbandk/FieldDescriptor<pbandk.wkt/FieldDescriptorProto, kotlin/Boolean?> // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.proto3Optional.<get-proto3Optional>|<get-proto3Optional>(){}[0]
        final val type // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.type|{}type[0]
            final fun <get-type>(): pbandk/FieldDescriptor<pbandk.wkt/FieldDescriptorProto, pbandk.wkt/FieldDescriptorProto.Type?> // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.type.<get-type>|<get-type>(){}[0]
        final val typeName // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.typeName|{}typeName[0]
            final fun <get-typeName>(): pbandk/FieldDescriptor<pbandk.wkt/FieldDescriptorProto, kotlin/String?> // pbandk.wkt/FieldDescriptorProto.FieldDescriptors.typeName.<get-typeName>|<get-typeName>(){}[0]
    }
}

sealed interface pbandk.wkt/FieldMask : pbandk/Message { // pbandk.wkt/FieldMask|null[0]
    abstract val descriptor // pbandk.wkt/FieldMask.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FieldMask> // pbandk.wkt/FieldMask.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val paths // pbandk.wkt/FieldMask.paths|{}paths[0]
        abstract fun <get-paths>(): kotlin.collections/List<kotlin/String> // pbandk.wkt/FieldMask.paths.<get-paths>|<get-paths>(){}[0]

    abstract fun copy(kotlin.collections/List<kotlin/String> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FieldMask // pbandk.wkt/FieldMask.copy|copy(kotlin.collections.List<kotlin.String>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableFieldMask, kotlin/Unit>): pbandk.wkt/FieldMask // pbandk.wkt/FieldMask.copy|copy(kotlin.Function1<pbandk.wkt.MutableFieldMask,kotlin.Unit>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/FieldMask // pbandk.wkt/FieldMask.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/FieldMask> { // pbandk.wkt/FieldMask.Companion|null[0]
        final val defaultInstance // pbandk.wkt/FieldMask.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/FieldMask // pbandk.wkt/FieldMask.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/FieldMask.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FieldMask> // pbandk.wkt/FieldMask.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/FieldMask.FieldDescriptors|null[0]
        final val paths // pbandk.wkt/FieldMask.FieldDescriptors.paths|{}paths[0]
            final fun <get-paths>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/FieldMask, kotlin.collections/List<kotlin/String>, kotlin.collections/MutableList<kotlin/String>> // pbandk.wkt/FieldMask.FieldDescriptors.paths.<get-paths>|<get-paths>(){}[0]
    }
}

sealed interface pbandk.wkt/FieldOptions : pbandk/ExtendableMessage<pbandk.wkt/FieldOptions> { // pbandk.wkt/FieldOptions|null[0]
    abstract val ctype // pbandk.wkt/FieldOptions.ctype|{}ctype[0]
        abstract fun <get-ctype>(): pbandk.wkt/FieldOptions.CType? // pbandk.wkt/FieldOptions.ctype.<get-ctype>|<get-ctype>(){}[0]
    abstract val debugRedact // pbandk.wkt/FieldOptions.debugRedact|{}debugRedact[0]
        abstract fun <get-debugRedact>(): kotlin/Boolean? // pbandk.wkt/FieldOptions.debugRedact.<get-debugRedact>|<get-debugRedact>(){}[0]
    abstract val deprecated // pbandk.wkt/FieldOptions.deprecated|{}deprecated[0]
        abstract fun <get-deprecated>(): kotlin/Boolean? // pbandk.wkt/FieldOptions.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
    abstract val descriptor // pbandk.wkt/FieldOptions.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FieldOptions> // pbandk.wkt/FieldOptions.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val editionDefaults // pbandk.wkt/FieldOptions.editionDefaults|{}editionDefaults[0]
        abstract fun <get-editionDefaults>(): kotlin.collections/List<pbandk.wkt/FieldOptions.EditionDefault> // pbandk.wkt/FieldOptions.editionDefaults.<get-editionDefaults>|<get-editionDefaults>(){}[0]
    abstract val featureSupport // pbandk.wkt/FieldOptions.featureSupport|{}featureSupport[0]
        abstract fun <get-featureSupport>(): pbandk.wkt/FieldOptions.FeatureSupport? // pbandk.wkt/FieldOptions.featureSupport.<get-featureSupport>|<get-featureSupport>(){}[0]
    abstract val features // pbandk.wkt/FieldOptions.features|{}features[0]
        abstract fun <get-features>(): pbandk.wkt/FeatureSet? // pbandk.wkt/FieldOptions.features.<get-features>|<get-features>(){}[0]
    abstract val jstype // pbandk.wkt/FieldOptions.jstype|{}jstype[0]
        abstract fun <get-jstype>(): pbandk.wkt/FieldOptions.JSType? // pbandk.wkt/FieldOptions.jstype.<get-jstype>|<get-jstype>(){}[0]
    abstract val lazy // pbandk.wkt/FieldOptions.lazy|{}lazy[0]
        abstract fun <get-lazy>(): kotlin/Boolean? // pbandk.wkt/FieldOptions.lazy.<get-lazy>|<get-lazy>(){}[0]
    abstract val packed // pbandk.wkt/FieldOptions.packed|{}packed[0]
        abstract fun <get-packed>(): kotlin/Boolean? // pbandk.wkt/FieldOptions.packed.<get-packed>|<get-packed>(){}[0]
    abstract val retention // pbandk.wkt/FieldOptions.retention|{}retention[0]
        abstract fun <get-retention>(): pbandk.wkt/FieldOptions.OptionRetention? // pbandk.wkt/FieldOptions.retention.<get-retention>|<get-retention>(){}[0]
    abstract val targets // pbandk.wkt/FieldOptions.targets|{}targets[0]
        abstract fun <get-targets>(): kotlin.collections/List<pbandk.wkt/FieldOptions.OptionTargetType> // pbandk.wkt/FieldOptions.targets.<get-targets>|<get-targets>(){}[0]
    abstract val uninterpretedOption // pbandk.wkt/FieldOptions.uninterpretedOption|{}uninterpretedOption[0]
        abstract fun <get-uninterpretedOption>(): kotlin.collections/List<pbandk.wkt/UninterpretedOption> // pbandk.wkt/FieldOptions.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]
    abstract val unverifiedLazy // pbandk.wkt/FieldOptions.unverifiedLazy|{}unverifiedLazy[0]
        abstract fun <get-unverifiedLazy>(): kotlin/Boolean? // pbandk.wkt/FieldOptions.unverifiedLazy.<get-unverifiedLazy>|<get-unverifiedLazy>(){}[0]
    abstract val weak // pbandk.wkt/FieldOptions.weak|{}weak[0]
        abstract fun <get-weak>(): kotlin/Boolean? // pbandk.wkt/FieldOptions.weak.<get-weak>|<get-weak>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableFieldOptions, kotlin/Unit>): pbandk.wkt/FieldOptions // pbandk.wkt/FieldOptions.copy|copy(kotlin.Function1<pbandk.wkt.MutableFieldOptions,kotlin.Unit>){}[0]
    abstract fun copy(pbandk.wkt/FieldOptions.CType? = ..., kotlin/Boolean? = ..., pbandk.wkt/FieldOptions.JSType? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., pbandk.wkt/FieldOptions.OptionRetention? = ..., kotlin.collections/List<pbandk.wkt/FieldOptions.OptionTargetType> = ..., kotlin.collections/List<pbandk.wkt/FieldOptions.EditionDefault> = ..., pbandk.wkt/FeatureSet? = ..., pbandk.wkt/FieldOptions.FeatureSupport? = ..., kotlin.collections/List<pbandk.wkt/UninterpretedOption> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FieldOptions // pbandk.wkt/FieldOptions.copy|copy(pbandk.wkt.FieldOptions.CType?;kotlin.Boolean?;pbandk.wkt.FieldOptions.JSType?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;pbandk.wkt.FieldOptions.OptionRetention?;kotlin.collections.List<pbandk.wkt.FieldOptions.OptionTargetType>;kotlin.collections.List<pbandk.wkt.FieldOptions.EditionDefault>;pbandk.wkt.FeatureSet?;pbandk.wkt.FieldOptions.FeatureSupport?;kotlin.collections.List<pbandk.wkt.UninterpretedOption>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/FieldOptions // pbandk.wkt/FieldOptions.plus|plus(pbandk.Message?){}[0]

    sealed interface CType : pbandk/Message.Enum { // pbandk.wkt/FieldOptions.CType|null[0]
        open val descriptor // pbandk.wkt/FieldOptions.CType.descriptor|{}descriptor[0]
            open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FieldOptions.CType> // pbandk.wkt/FieldOptions.CType.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/FieldOptions.CType>, pbandk.wkt/FieldOptions.CType { // pbandk.wkt/FieldOptions.CType.UNRECOGNIZED|null[0]
            constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/FieldOptions.CType.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
        }

        final object CORD : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldOptions.CType>, pbandk.wkt/FieldOptions.CType // pbandk.wkt/FieldOptions.CType.CORD|null[0]

        final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/FieldOptions.CType> { // pbandk.wkt/FieldOptions.CType.Companion|null[0]
            final val descriptor // pbandk.wkt/FieldOptions.CType.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FieldOptions.CType> // pbandk.wkt/FieldOptions.CType.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
            final val values // pbandk.wkt/FieldOptions.CType.Companion.values|{}values[0]
                final fun <get-values>(): kotlin.collections/List<pbandk.wkt/FieldOptions.CType> // pbandk.wkt/FieldOptions.CType.Companion.values.<get-values>|<get-values>(){}[0]

            final fun fromName(kotlin/String): pbandk.wkt/FieldOptions.CType // pbandk.wkt/FieldOptions.CType.Companion.fromName|fromName(kotlin.String){}[0]
            final fun fromValue(kotlin/Int): pbandk.wkt/FieldOptions.CType // pbandk.wkt/FieldOptions.CType.Companion.fromValue|fromValue(kotlin.Int){}[0]
        }

        final object STRING : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldOptions.CType>, pbandk.wkt/FieldOptions.CType // pbandk.wkt/FieldOptions.CType.STRING|null[0]

        final object STRING_PIECE : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldOptions.CType>, pbandk.wkt/FieldOptions.CType // pbandk.wkt/FieldOptions.CType.STRING_PIECE|null[0]
    }

    sealed interface EditionDefault : pbandk/Message { // pbandk.wkt/FieldOptions.EditionDefault|null[0]
        abstract val descriptor // pbandk.wkt/FieldOptions.EditionDefault.descriptor|{}descriptor[0]
            abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FieldOptions.EditionDefault> // pbandk.wkt/FieldOptions.EditionDefault.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        abstract val edition // pbandk.wkt/FieldOptions.EditionDefault.edition|{}edition[0]
            abstract fun <get-edition>(): pbandk.wkt/Edition? // pbandk.wkt/FieldOptions.EditionDefault.edition.<get-edition>|<get-edition>(){}[0]
        abstract val value // pbandk.wkt/FieldOptions.EditionDefault.value|{}value[0]
            abstract fun <get-value>(): kotlin/String? // pbandk.wkt/FieldOptions.EditionDefault.value.<get-value>|<get-value>(){}[0]

        abstract fun copy(kotlin/Function1<pbandk.wkt/FieldOptions.MutableEditionDefault, kotlin/Unit>): pbandk.wkt/FieldOptions.EditionDefault // pbandk.wkt/FieldOptions.EditionDefault.copy|copy(kotlin.Function1<pbandk.wkt.FieldOptions.MutableEditionDefault,kotlin.Unit>){}[0]
        abstract fun copy(pbandk.wkt/Edition? = ..., kotlin/String? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FieldOptions.EditionDefault // pbandk.wkt/FieldOptions.EditionDefault.copy|copy(pbandk.wkt.Edition?;kotlin.String?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
        abstract fun plus(pbandk/Message?): pbandk.wkt/FieldOptions.EditionDefault // pbandk.wkt/FieldOptions.EditionDefault.plus|plus(pbandk.Message?){}[0]

        final object Companion : pbandk/Message.Companion<pbandk.wkt/FieldOptions.EditionDefault> { // pbandk.wkt/FieldOptions.EditionDefault.Companion|null[0]
            final val defaultInstance // pbandk.wkt/FieldOptions.EditionDefault.Companion.defaultInstance|{}defaultInstance[0]
                final fun <get-defaultInstance>(): pbandk.wkt/FieldOptions.EditionDefault // pbandk.wkt/FieldOptions.EditionDefault.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
            final val descriptor // pbandk.wkt/FieldOptions.EditionDefault.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FieldOptions.EditionDefault> // pbandk.wkt/FieldOptions.EditionDefault.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        }

        final object FieldDescriptors { // pbandk.wkt/FieldOptions.EditionDefault.FieldDescriptors|null[0]
            final val edition // pbandk.wkt/FieldOptions.EditionDefault.FieldDescriptors.edition|{}edition[0]
                final fun <get-edition>(): pbandk/FieldDescriptor<pbandk.wkt/FieldOptions.EditionDefault, pbandk.wkt/Edition?> // pbandk.wkt/FieldOptions.EditionDefault.FieldDescriptors.edition.<get-edition>|<get-edition>(){}[0]
            final val value // pbandk.wkt/FieldOptions.EditionDefault.FieldDescriptors.value|{}value[0]
                final fun <get-value>(): pbandk/FieldDescriptor<pbandk.wkt/FieldOptions.EditionDefault, kotlin/String?> // pbandk.wkt/FieldOptions.EditionDefault.FieldDescriptors.value.<get-value>|<get-value>(){}[0]
        }
    }

    sealed interface FeatureSupport : pbandk/Message { // pbandk.wkt/FieldOptions.FeatureSupport|null[0]
        abstract val deprecationWarning // pbandk.wkt/FieldOptions.FeatureSupport.deprecationWarning|{}deprecationWarning[0]
            abstract fun <get-deprecationWarning>(): kotlin/String? // pbandk.wkt/FieldOptions.FeatureSupport.deprecationWarning.<get-deprecationWarning>|<get-deprecationWarning>(){}[0]
        abstract val descriptor // pbandk.wkt/FieldOptions.FeatureSupport.descriptor|{}descriptor[0]
            abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FieldOptions.FeatureSupport> // pbandk.wkt/FieldOptions.FeatureSupport.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        abstract val editionDeprecated // pbandk.wkt/FieldOptions.FeatureSupport.editionDeprecated|{}editionDeprecated[0]
            abstract fun <get-editionDeprecated>(): pbandk.wkt/Edition? // pbandk.wkt/FieldOptions.FeatureSupport.editionDeprecated.<get-editionDeprecated>|<get-editionDeprecated>(){}[0]
        abstract val editionIntroduced // pbandk.wkt/FieldOptions.FeatureSupport.editionIntroduced|{}editionIntroduced[0]
            abstract fun <get-editionIntroduced>(): pbandk.wkt/Edition? // pbandk.wkt/FieldOptions.FeatureSupport.editionIntroduced.<get-editionIntroduced>|<get-editionIntroduced>(){}[0]
        abstract val editionRemoved // pbandk.wkt/FieldOptions.FeatureSupport.editionRemoved|{}editionRemoved[0]
            abstract fun <get-editionRemoved>(): pbandk.wkt/Edition? // pbandk.wkt/FieldOptions.FeatureSupport.editionRemoved.<get-editionRemoved>|<get-editionRemoved>(){}[0]

        abstract fun copy(kotlin/Function1<pbandk.wkt/FieldOptions.MutableFeatureSupport, kotlin/Unit>): pbandk.wkt/FieldOptions.FeatureSupport // pbandk.wkt/FieldOptions.FeatureSupport.copy|copy(kotlin.Function1<pbandk.wkt.FieldOptions.MutableFeatureSupport,kotlin.Unit>){}[0]
        abstract fun copy(pbandk.wkt/Edition? = ..., pbandk.wkt/Edition? = ..., kotlin/String? = ..., pbandk.wkt/Edition? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FieldOptions.FeatureSupport // pbandk.wkt/FieldOptions.FeatureSupport.copy|copy(pbandk.wkt.Edition?;pbandk.wkt.Edition?;kotlin.String?;pbandk.wkt.Edition?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
        abstract fun plus(pbandk/Message?): pbandk.wkt/FieldOptions.FeatureSupport // pbandk.wkt/FieldOptions.FeatureSupport.plus|plus(pbandk.Message?){}[0]

        final object Companion : pbandk/Message.Companion<pbandk.wkt/FieldOptions.FeatureSupport> { // pbandk.wkt/FieldOptions.FeatureSupport.Companion|null[0]
            final val defaultInstance // pbandk.wkt/FieldOptions.FeatureSupport.Companion.defaultInstance|{}defaultInstance[0]
                final fun <get-defaultInstance>(): pbandk.wkt/FieldOptions.FeatureSupport // pbandk.wkt/FieldOptions.FeatureSupport.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
            final val descriptor // pbandk.wkt/FieldOptions.FeatureSupport.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FieldOptions.FeatureSupport> // pbandk.wkt/FieldOptions.FeatureSupport.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        }

        final object FieldDescriptors { // pbandk.wkt/FieldOptions.FeatureSupport.FieldDescriptors|null[0]
            final val deprecationWarning // pbandk.wkt/FieldOptions.FeatureSupport.FieldDescriptors.deprecationWarning|{}deprecationWarning[0]
                final fun <get-deprecationWarning>(): pbandk/FieldDescriptor<pbandk.wkt/FieldOptions.FeatureSupport, kotlin/String?> // pbandk.wkt/FieldOptions.FeatureSupport.FieldDescriptors.deprecationWarning.<get-deprecationWarning>|<get-deprecationWarning>(){}[0]
            final val editionDeprecated // pbandk.wkt/FieldOptions.FeatureSupport.FieldDescriptors.editionDeprecated|{}editionDeprecated[0]
                final fun <get-editionDeprecated>(): pbandk/FieldDescriptor<pbandk.wkt/FieldOptions.FeatureSupport, pbandk.wkt/Edition?> // pbandk.wkt/FieldOptions.FeatureSupport.FieldDescriptors.editionDeprecated.<get-editionDeprecated>|<get-editionDeprecated>(){}[0]
            final val editionIntroduced // pbandk.wkt/FieldOptions.FeatureSupport.FieldDescriptors.editionIntroduced|{}editionIntroduced[0]
                final fun <get-editionIntroduced>(): pbandk/FieldDescriptor<pbandk.wkt/FieldOptions.FeatureSupport, pbandk.wkt/Edition?> // pbandk.wkt/FieldOptions.FeatureSupport.FieldDescriptors.editionIntroduced.<get-editionIntroduced>|<get-editionIntroduced>(){}[0]
            final val editionRemoved // pbandk.wkt/FieldOptions.FeatureSupport.FieldDescriptors.editionRemoved|{}editionRemoved[0]
                final fun <get-editionRemoved>(): pbandk/FieldDescriptor<pbandk.wkt/FieldOptions.FeatureSupport, pbandk.wkt/Edition?> // pbandk.wkt/FieldOptions.FeatureSupport.FieldDescriptors.editionRemoved.<get-editionRemoved>|<get-editionRemoved>(){}[0]
        }
    }

    sealed interface JSType : pbandk/Message.Enum { // pbandk.wkt/FieldOptions.JSType|null[0]
        open val descriptor // pbandk.wkt/FieldOptions.JSType.descriptor|{}descriptor[0]
            open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FieldOptions.JSType> // pbandk.wkt/FieldOptions.JSType.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/FieldOptions.JSType>, pbandk.wkt/FieldOptions.JSType { // pbandk.wkt/FieldOptions.JSType.UNRECOGNIZED|null[0]
            constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/FieldOptions.JSType.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
        }

        final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/FieldOptions.JSType> { // pbandk.wkt/FieldOptions.JSType.Companion|null[0]
            final val descriptor // pbandk.wkt/FieldOptions.JSType.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FieldOptions.JSType> // pbandk.wkt/FieldOptions.JSType.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
            final val values // pbandk.wkt/FieldOptions.JSType.Companion.values|{}values[0]
                final fun <get-values>(): kotlin.collections/List<pbandk.wkt/FieldOptions.JSType> // pbandk.wkt/FieldOptions.JSType.Companion.values.<get-values>|<get-values>(){}[0]

            final fun fromName(kotlin/String): pbandk.wkt/FieldOptions.JSType // pbandk.wkt/FieldOptions.JSType.Companion.fromName|fromName(kotlin.String){}[0]
            final fun fromValue(kotlin/Int): pbandk.wkt/FieldOptions.JSType // pbandk.wkt/FieldOptions.JSType.Companion.fromValue|fromValue(kotlin.Int){}[0]
        }

        final object JS_NORMAL : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldOptions.JSType>, pbandk.wkt/FieldOptions.JSType // pbandk.wkt/FieldOptions.JSType.JS_NORMAL|null[0]

        final object JS_NUMBER : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldOptions.JSType>, pbandk.wkt/FieldOptions.JSType // pbandk.wkt/FieldOptions.JSType.JS_NUMBER|null[0]

        final object JS_STRING : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldOptions.JSType>, pbandk.wkt/FieldOptions.JSType // pbandk.wkt/FieldOptions.JSType.JS_STRING|null[0]
    }

    sealed interface MutableEditionDefault : pbandk.wkt/FieldOptions.EditionDefault, pbandk/MutableMessage<pbandk.wkt/FieldOptions.EditionDefault> { // pbandk.wkt/FieldOptions.MutableEditionDefault|null[0]
        abstract var edition // pbandk.wkt/FieldOptions.MutableEditionDefault.edition|{}edition[0]
            abstract fun <get-edition>(): pbandk.wkt/Edition? // pbandk.wkt/FieldOptions.MutableEditionDefault.edition.<get-edition>|<get-edition>(){}[0]
            abstract fun <set-edition>(pbandk.wkt/Edition?) // pbandk.wkt/FieldOptions.MutableEditionDefault.edition.<set-edition>|<set-edition>(pbandk.wkt.Edition?){}[0]
        abstract var value // pbandk.wkt/FieldOptions.MutableEditionDefault.value|{}value[0]
            abstract fun <get-value>(): kotlin/String? // pbandk.wkt/FieldOptions.MutableEditionDefault.value.<get-value>|<get-value>(){}[0]
            abstract fun <set-value>(kotlin/String?) // pbandk.wkt/FieldOptions.MutableEditionDefault.value.<set-value>|<set-value>(kotlin.String?){}[0]
    }

    sealed interface MutableFeatureSupport : pbandk.wkt/FieldOptions.FeatureSupport, pbandk/MutableMessage<pbandk.wkt/FieldOptions.FeatureSupport> { // pbandk.wkt/FieldOptions.MutableFeatureSupport|null[0]
        abstract var deprecationWarning // pbandk.wkt/FieldOptions.MutableFeatureSupport.deprecationWarning|{}deprecationWarning[0]
            abstract fun <get-deprecationWarning>(): kotlin/String? // pbandk.wkt/FieldOptions.MutableFeatureSupport.deprecationWarning.<get-deprecationWarning>|<get-deprecationWarning>(){}[0]
            abstract fun <set-deprecationWarning>(kotlin/String?) // pbandk.wkt/FieldOptions.MutableFeatureSupport.deprecationWarning.<set-deprecationWarning>|<set-deprecationWarning>(kotlin.String?){}[0]
        abstract var editionDeprecated // pbandk.wkt/FieldOptions.MutableFeatureSupport.editionDeprecated|{}editionDeprecated[0]
            abstract fun <get-editionDeprecated>(): pbandk.wkt/Edition? // pbandk.wkt/FieldOptions.MutableFeatureSupport.editionDeprecated.<get-editionDeprecated>|<get-editionDeprecated>(){}[0]
            abstract fun <set-editionDeprecated>(pbandk.wkt/Edition?) // pbandk.wkt/FieldOptions.MutableFeatureSupport.editionDeprecated.<set-editionDeprecated>|<set-editionDeprecated>(pbandk.wkt.Edition?){}[0]
        abstract var editionIntroduced // pbandk.wkt/FieldOptions.MutableFeatureSupport.editionIntroduced|{}editionIntroduced[0]
            abstract fun <get-editionIntroduced>(): pbandk.wkt/Edition? // pbandk.wkt/FieldOptions.MutableFeatureSupport.editionIntroduced.<get-editionIntroduced>|<get-editionIntroduced>(){}[0]
            abstract fun <set-editionIntroduced>(pbandk.wkt/Edition?) // pbandk.wkt/FieldOptions.MutableFeatureSupport.editionIntroduced.<set-editionIntroduced>|<set-editionIntroduced>(pbandk.wkt.Edition?){}[0]
        abstract var editionRemoved // pbandk.wkt/FieldOptions.MutableFeatureSupport.editionRemoved|{}editionRemoved[0]
            abstract fun <get-editionRemoved>(): pbandk.wkt/Edition? // pbandk.wkt/FieldOptions.MutableFeatureSupport.editionRemoved.<get-editionRemoved>|<get-editionRemoved>(){}[0]
            abstract fun <set-editionRemoved>(pbandk.wkt/Edition?) // pbandk.wkt/FieldOptions.MutableFeatureSupport.editionRemoved.<set-editionRemoved>|<set-editionRemoved>(pbandk.wkt.Edition?){}[0]
    }

    sealed interface OptionRetention : pbandk/Message.Enum { // pbandk.wkt/FieldOptions.OptionRetention|null[0]
        open val descriptor // pbandk.wkt/FieldOptions.OptionRetention.descriptor|{}descriptor[0]
            open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FieldOptions.OptionRetention> // pbandk.wkt/FieldOptions.OptionRetention.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/FieldOptions.OptionRetention>, pbandk.wkt/FieldOptions.OptionRetention { // pbandk.wkt/FieldOptions.OptionRetention.UNRECOGNIZED|null[0]
            constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/FieldOptions.OptionRetention.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
        }

        final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/FieldOptions.OptionRetention> { // pbandk.wkt/FieldOptions.OptionRetention.Companion|null[0]
            final val descriptor // pbandk.wkt/FieldOptions.OptionRetention.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FieldOptions.OptionRetention> // pbandk.wkt/FieldOptions.OptionRetention.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
            final val values // pbandk.wkt/FieldOptions.OptionRetention.Companion.values|{}values[0]
                final fun <get-values>(): kotlin.collections/List<pbandk.wkt/FieldOptions.OptionRetention> // pbandk.wkt/FieldOptions.OptionRetention.Companion.values.<get-values>|<get-values>(){}[0]

            final fun fromName(kotlin/String): pbandk.wkt/FieldOptions.OptionRetention // pbandk.wkt/FieldOptions.OptionRetention.Companion.fromName|fromName(kotlin.String){}[0]
            final fun fromValue(kotlin/Int): pbandk.wkt/FieldOptions.OptionRetention // pbandk.wkt/FieldOptions.OptionRetention.Companion.fromValue|fromValue(kotlin.Int){}[0]
        }

        final object RETENTION_RUNTIME : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldOptions.OptionRetention>, pbandk.wkt/FieldOptions.OptionRetention // pbandk.wkt/FieldOptions.OptionRetention.RETENTION_RUNTIME|null[0]

        final object RETENTION_SOURCE : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldOptions.OptionRetention>, pbandk.wkt/FieldOptions.OptionRetention // pbandk.wkt/FieldOptions.OptionRetention.RETENTION_SOURCE|null[0]

        final object RETENTION_UNKNOWN : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldOptions.OptionRetention>, pbandk.wkt/FieldOptions.OptionRetention // pbandk.wkt/FieldOptions.OptionRetention.RETENTION_UNKNOWN|null[0]
    }

    sealed interface OptionTargetType : pbandk/Message.Enum { // pbandk.wkt/FieldOptions.OptionTargetType|null[0]
        open val descriptor // pbandk.wkt/FieldOptions.OptionTargetType.descriptor|{}descriptor[0]
            open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FieldOptions.OptionTargetType> // pbandk.wkt/FieldOptions.OptionTargetType.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/FieldOptions.OptionTargetType>, pbandk.wkt/FieldOptions.OptionTargetType { // pbandk.wkt/FieldOptions.OptionTargetType.UNRECOGNIZED|null[0]
            constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/FieldOptions.OptionTargetType.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
        }

        final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/FieldOptions.OptionTargetType> { // pbandk.wkt/FieldOptions.OptionTargetType.Companion|null[0]
            final val descriptor // pbandk.wkt/FieldOptions.OptionTargetType.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FieldOptions.OptionTargetType> // pbandk.wkt/FieldOptions.OptionTargetType.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
            final val values // pbandk.wkt/FieldOptions.OptionTargetType.Companion.values|{}values[0]
                final fun <get-values>(): kotlin.collections/List<pbandk.wkt/FieldOptions.OptionTargetType> // pbandk.wkt/FieldOptions.OptionTargetType.Companion.values.<get-values>|<get-values>(){}[0]

            final fun fromName(kotlin/String): pbandk.wkt/FieldOptions.OptionTargetType // pbandk.wkt/FieldOptions.OptionTargetType.Companion.fromName|fromName(kotlin.String){}[0]
            final fun fromValue(kotlin/Int): pbandk.wkt/FieldOptions.OptionTargetType // pbandk.wkt/FieldOptions.OptionTargetType.Companion.fromValue|fromValue(kotlin.Int){}[0]
        }

        final object TARGET_TYPE_ENUM : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldOptions.OptionTargetType>, pbandk.wkt/FieldOptions.OptionTargetType // pbandk.wkt/FieldOptions.OptionTargetType.TARGET_TYPE_ENUM|null[0]

        final object TARGET_TYPE_ENUM_ENTRY : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldOptions.OptionTargetType>, pbandk.wkt/FieldOptions.OptionTargetType // pbandk.wkt/FieldOptions.OptionTargetType.TARGET_TYPE_ENUM_ENTRY|null[0]

        final object TARGET_TYPE_EXTENSION_RANGE : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldOptions.OptionTargetType>, pbandk.wkt/FieldOptions.OptionTargetType // pbandk.wkt/FieldOptions.OptionTargetType.TARGET_TYPE_EXTENSION_RANGE|null[0]

        final object TARGET_TYPE_FIELD : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldOptions.OptionTargetType>, pbandk.wkt/FieldOptions.OptionTargetType // pbandk.wkt/FieldOptions.OptionTargetType.TARGET_TYPE_FIELD|null[0]

        final object TARGET_TYPE_FILE : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldOptions.OptionTargetType>, pbandk.wkt/FieldOptions.OptionTargetType // pbandk.wkt/FieldOptions.OptionTargetType.TARGET_TYPE_FILE|null[0]

        final object TARGET_TYPE_MESSAGE : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldOptions.OptionTargetType>, pbandk.wkt/FieldOptions.OptionTargetType // pbandk.wkt/FieldOptions.OptionTargetType.TARGET_TYPE_MESSAGE|null[0]

        final object TARGET_TYPE_METHOD : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldOptions.OptionTargetType>, pbandk.wkt/FieldOptions.OptionTargetType // pbandk.wkt/FieldOptions.OptionTargetType.TARGET_TYPE_METHOD|null[0]

        final object TARGET_TYPE_ONEOF : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldOptions.OptionTargetType>, pbandk.wkt/FieldOptions.OptionTargetType // pbandk.wkt/FieldOptions.OptionTargetType.TARGET_TYPE_ONEOF|null[0]

        final object TARGET_TYPE_SERVICE : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldOptions.OptionTargetType>, pbandk.wkt/FieldOptions.OptionTargetType // pbandk.wkt/FieldOptions.OptionTargetType.TARGET_TYPE_SERVICE|null[0]

        final object TARGET_TYPE_UNKNOWN : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FieldOptions.OptionTargetType>, pbandk.wkt/FieldOptions.OptionTargetType // pbandk.wkt/FieldOptions.OptionTargetType.TARGET_TYPE_UNKNOWN|null[0]
    }

    final object Companion : pbandk/Message.Companion<pbandk.wkt/FieldOptions> { // pbandk.wkt/FieldOptions.Companion|null[0]
        final val defaultInstance // pbandk.wkt/FieldOptions.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/FieldOptions // pbandk.wkt/FieldOptions.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/FieldOptions.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FieldOptions> // pbandk.wkt/FieldOptions.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun EditionDefault(pbandk.wkt/Edition? = ..., kotlin/String? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FieldOptions.EditionDefault // pbandk.wkt/FieldOptions.Companion.EditionDefault|EditionDefault(pbandk.wkt.Edition?;kotlin.String?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
        final fun FeatureSupport(pbandk.wkt/Edition? = ..., pbandk.wkt/Edition? = ..., kotlin/String? = ..., pbandk.wkt/Edition? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FieldOptions.FeatureSupport // pbandk.wkt/FieldOptions.Companion.FeatureSupport|FeatureSupport(pbandk.wkt.Edition?;pbandk.wkt.Edition?;kotlin.String?;pbandk.wkt.Edition?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/FieldOptions.FieldDescriptors|null[0]
        final val ctype // pbandk.wkt/FieldOptions.FieldDescriptors.ctype|{}ctype[0]
            final fun <get-ctype>(): pbandk/FieldDescriptor<pbandk.wkt/FieldOptions, pbandk.wkt/FieldOptions.CType?> // pbandk.wkt/FieldOptions.FieldDescriptors.ctype.<get-ctype>|<get-ctype>(){}[0]
        final val debugRedact // pbandk.wkt/FieldOptions.FieldDescriptors.debugRedact|{}debugRedact[0]
            final fun <get-debugRedact>(): pbandk/FieldDescriptor<pbandk.wkt/FieldOptions, kotlin/Boolean?> // pbandk.wkt/FieldOptions.FieldDescriptors.debugRedact.<get-debugRedact>|<get-debugRedact>(){}[0]
        final val deprecated // pbandk.wkt/FieldOptions.FieldDescriptors.deprecated|{}deprecated[0]
            final fun <get-deprecated>(): pbandk/FieldDescriptor<pbandk.wkt/FieldOptions, kotlin/Boolean?> // pbandk.wkt/FieldOptions.FieldDescriptors.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
        final val editionDefaults // pbandk.wkt/FieldOptions.FieldDescriptors.editionDefaults|{}editionDefaults[0]
            final fun <get-editionDefaults>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/FieldOptions, kotlin.collections/List<pbandk.wkt/FieldOptions.EditionDefault>, kotlin.collections/MutableList<pbandk.wkt/FieldOptions.EditionDefault>> // pbandk.wkt/FieldOptions.FieldDescriptors.editionDefaults.<get-editionDefaults>|<get-editionDefaults>(){}[0]
        final val featureSupport // pbandk.wkt/FieldOptions.FieldDescriptors.featureSupport|{}featureSupport[0]
            final fun <get-featureSupport>(): pbandk/FieldDescriptor<pbandk.wkt/FieldOptions, pbandk.wkt/FieldOptions.FeatureSupport?> // pbandk.wkt/FieldOptions.FieldDescriptors.featureSupport.<get-featureSupport>|<get-featureSupport>(){}[0]
        final val features // pbandk.wkt/FieldOptions.FieldDescriptors.features|{}features[0]
            final fun <get-features>(): pbandk/FieldDescriptor<pbandk.wkt/FieldOptions, pbandk.wkt/FeatureSet?> // pbandk.wkt/FieldOptions.FieldDescriptors.features.<get-features>|<get-features>(){}[0]
        final val jstype // pbandk.wkt/FieldOptions.FieldDescriptors.jstype|{}jstype[0]
            final fun <get-jstype>(): pbandk/FieldDescriptor<pbandk.wkt/FieldOptions, pbandk.wkt/FieldOptions.JSType?> // pbandk.wkt/FieldOptions.FieldDescriptors.jstype.<get-jstype>|<get-jstype>(){}[0]
        final val lazy // pbandk.wkt/FieldOptions.FieldDescriptors.lazy|{}lazy[0]
            final fun <get-lazy>(): pbandk/FieldDescriptor<pbandk.wkt/FieldOptions, kotlin/Boolean?> // pbandk.wkt/FieldOptions.FieldDescriptors.lazy.<get-lazy>|<get-lazy>(){}[0]
        final val packed // pbandk.wkt/FieldOptions.FieldDescriptors.packed|{}packed[0]
            final fun <get-packed>(): pbandk/FieldDescriptor<pbandk.wkt/FieldOptions, kotlin/Boolean?> // pbandk.wkt/FieldOptions.FieldDescriptors.packed.<get-packed>|<get-packed>(){}[0]
        final val retention // pbandk.wkt/FieldOptions.FieldDescriptors.retention|{}retention[0]
            final fun <get-retention>(): pbandk/FieldDescriptor<pbandk.wkt/FieldOptions, pbandk.wkt/FieldOptions.OptionRetention?> // pbandk.wkt/FieldOptions.FieldDescriptors.retention.<get-retention>|<get-retention>(){}[0]
        final val targets // pbandk.wkt/FieldOptions.FieldDescriptors.targets|{}targets[0]
            final fun <get-targets>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/FieldOptions, kotlin.collections/List<pbandk.wkt/FieldOptions.OptionTargetType>, kotlin.collections/MutableList<pbandk.wkt/FieldOptions.OptionTargetType>> // pbandk.wkt/FieldOptions.FieldDescriptors.targets.<get-targets>|<get-targets>(){}[0]
        final val uninterpretedOption // pbandk.wkt/FieldOptions.FieldDescriptors.uninterpretedOption|{}uninterpretedOption[0]
            final fun <get-uninterpretedOption>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/FieldOptions, kotlin.collections/List<pbandk.wkt/UninterpretedOption>, kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption>> // pbandk.wkt/FieldOptions.FieldDescriptors.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]
        final val unverifiedLazy // pbandk.wkt/FieldOptions.FieldDescriptors.unverifiedLazy|{}unverifiedLazy[0]
            final fun <get-unverifiedLazy>(): pbandk/FieldDescriptor<pbandk.wkt/FieldOptions, kotlin/Boolean?> // pbandk.wkt/FieldOptions.FieldDescriptors.unverifiedLazy.<get-unverifiedLazy>|<get-unverifiedLazy>(){}[0]
        final val weak // pbandk.wkt/FieldOptions.FieldDescriptors.weak|{}weak[0]
            final fun <get-weak>(): pbandk/FieldDescriptor<pbandk.wkt/FieldOptions, kotlin/Boolean?> // pbandk.wkt/FieldOptions.FieldDescriptors.weak.<get-weak>|<get-weak>(){}[0]
    }
}

sealed interface pbandk.wkt/FileDescriptorProto : pbandk/Message { // pbandk.wkt/FileDescriptorProto|null[0]
    abstract val dependency // pbandk.wkt/FileDescriptorProto.dependency|{}dependency[0]
        abstract fun <get-dependency>(): kotlin.collections/List<kotlin/String> // pbandk.wkt/FileDescriptorProto.dependency.<get-dependency>|<get-dependency>(){}[0]
    abstract val descriptor // pbandk.wkt/FileDescriptorProto.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FileDescriptorProto> // pbandk.wkt/FileDescriptorProto.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val edition // pbandk.wkt/FileDescriptorProto.edition|{}edition[0]
        abstract fun <get-edition>(): pbandk.wkt/Edition? // pbandk.wkt/FileDescriptorProto.edition.<get-edition>|<get-edition>(){}[0]
    abstract val enumType // pbandk.wkt/FileDescriptorProto.enumType|{}enumType[0]
        abstract fun <get-enumType>(): kotlin.collections/List<pbandk.wkt/EnumDescriptorProto> // pbandk.wkt/FileDescriptorProto.enumType.<get-enumType>|<get-enumType>(){}[0]
    abstract val extension // pbandk.wkt/FileDescriptorProto.extension|{}extension[0]
        abstract fun <get-extension>(): kotlin.collections/List<pbandk.wkt/FieldDescriptorProto> // pbandk.wkt/FileDescriptorProto.extension.<get-extension>|<get-extension>(){}[0]
    abstract val messageType // pbandk.wkt/FileDescriptorProto.messageType|{}messageType[0]
        abstract fun <get-messageType>(): kotlin.collections/List<pbandk.wkt/DescriptorProto> // pbandk.wkt/FileDescriptorProto.messageType.<get-messageType>|<get-messageType>(){}[0]
    abstract val name // pbandk.wkt/FileDescriptorProto.name|{}name[0]
        abstract fun <get-name>(): kotlin/String? // pbandk.wkt/FileDescriptorProto.name.<get-name>|<get-name>(){}[0]
    abstract val options // pbandk.wkt/FileDescriptorProto.options|{}options[0]
        abstract fun <get-options>(): pbandk.wkt/FileOptions? // pbandk.wkt/FileDescriptorProto.options.<get-options>|<get-options>(){}[0]
    abstract val package // pbandk.wkt/FileDescriptorProto.package|{}package[0]
        abstract fun <get-package>(): kotlin/String? // pbandk.wkt/FileDescriptorProto.package.<get-package>|<get-package>(){}[0]
    abstract val publicDependency // pbandk.wkt/FileDescriptorProto.publicDependency|{}publicDependency[0]
        abstract fun <get-publicDependency>(): kotlin.collections/List<kotlin/Int> // pbandk.wkt/FileDescriptorProto.publicDependency.<get-publicDependency>|<get-publicDependency>(){}[0]
    abstract val service // pbandk.wkt/FileDescriptorProto.service|{}service[0]
        abstract fun <get-service>(): kotlin.collections/List<pbandk.wkt/ServiceDescriptorProto> // pbandk.wkt/FileDescriptorProto.service.<get-service>|<get-service>(){}[0]
    abstract val sourceCodeInfo // pbandk.wkt/FileDescriptorProto.sourceCodeInfo|{}sourceCodeInfo[0]
        abstract fun <get-sourceCodeInfo>(): pbandk.wkt/SourceCodeInfo? // pbandk.wkt/FileDescriptorProto.sourceCodeInfo.<get-sourceCodeInfo>|<get-sourceCodeInfo>(){}[0]
    abstract val syntax // pbandk.wkt/FileDescriptorProto.syntax|{}syntax[0]
        abstract fun <get-syntax>(): kotlin/String? // pbandk.wkt/FileDescriptorProto.syntax.<get-syntax>|<get-syntax>(){}[0]
    abstract val weakDependency // pbandk.wkt/FileDescriptorProto.weakDependency|{}weakDependency[0]
        abstract fun <get-weakDependency>(): kotlin.collections/List<kotlin/Int> // pbandk.wkt/FileDescriptorProto.weakDependency.<get-weakDependency>|<get-weakDependency>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableFileDescriptorProto, kotlin/Unit>): pbandk.wkt/FileDescriptorProto // pbandk.wkt/FileDescriptorProto.copy|copy(kotlin.Function1<pbandk.wkt.MutableFileDescriptorProto,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/String? = ..., kotlin/String? = ..., kotlin.collections/List<kotlin/String> = ..., kotlin.collections/List<kotlin/Int> = ..., kotlin.collections/List<kotlin/Int> = ..., kotlin.collections/List<pbandk.wkt/DescriptorProto> = ..., kotlin.collections/List<pbandk.wkt/EnumDescriptorProto> = ..., kotlin.collections/List<pbandk.wkt/ServiceDescriptorProto> = ..., kotlin.collections/List<pbandk.wkt/FieldDescriptorProto> = ..., pbandk.wkt/FileOptions? = ..., pbandk.wkt/SourceCodeInfo? = ..., kotlin/String? = ..., pbandk.wkt/Edition? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FileDescriptorProto // pbandk.wkt/FileDescriptorProto.copy|copy(kotlin.String?;kotlin.String?;kotlin.collections.List<kotlin.String>;kotlin.collections.List<kotlin.Int>;kotlin.collections.List<kotlin.Int>;kotlin.collections.List<pbandk.wkt.DescriptorProto>;kotlin.collections.List<pbandk.wkt.EnumDescriptorProto>;kotlin.collections.List<pbandk.wkt.ServiceDescriptorProto>;kotlin.collections.List<pbandk.wkt.FieldDescriptorProto>;pbandk.wkt.FileOptions?;pbandk.wkt.SourceCodeInfo?;kotlin.String?;pbandk.wkt.Edition?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/FileDescriptorProto // pbandk.wkt/FileDescriptorProto.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/FileDescriptorProto> { // pbandk.wkt/FileDescriptorProto.Companion|null[0]
        final val defaultInstance // pbandk.wkt/FileDescriptorProto.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/FileDescriptorProto // pbandk.wkt/FileDescriptorProto.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/FileDescriptorProto.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FileDescriptorProto> // pbandk.wkt/FileDescriptorProto.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/FileDescriptorProto.FieldDescriptors|null[0]
        final val dependency // pbandk.wkt/FileDescriptorProto.FieldDescriptors.dependency|{}dependency[0]
            final fun <get-dependency>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/FileDescriptorProto, kotlin.collections/List<kotlin/String>, kotlin.collections/MutableList<kotlin/String>> // pbandk.wkt/FileDescriptorProto.FieldDescriptors.dependency.<get-dependency>|<get-dependency>(){}[0]
        final val edition // pbandk.wkt/FileDescriptorProto.FieldDescriptors.edition|{}edition[0]
            final fun <get-edition>(): pbandk/FieldDescriptor<pbandk.wkt/FileDescriptorProto, pbandk.wkt/Edition?> // pbandk.wkt/FileDescriptorProto.FieldDescriptors.edition.<get-edition>|<get-edition>(){}[0]
        final val enumType // pbandk.wkt/FileDescriptorProto.FieldDescriptors.enumType|{}enumType[0]
            final fun <get-enumType>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/FileDescriptorProto, kotlin.collections/List<pbandk.wkt/EnumDescriptorProto>, kotlin.collections/MutableList<pbandk.wkt/EnumDescriptorProto>> // pbandk.wkt/FileDescriptorProto.FieldDescriptors.enumType.<get-enumType>|<get-enumType>(){}[0]
        final val extension // pbandk.wkt/FileDescriptorProto.FieldDescriptors.extension|{}extension[0]
            final fun <get-extension>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/FileDescriptorProto, kotlin.collections/List<pbandk.wkt/FieldDescriptorProto>, kotlin.collections/MutableList<pbandk.wkt/FieldDescriptorProto>> // pbandk.wkt/FileDescriptorProto.FieldDescriptors.extension.<get-extension>|<get-extension>(){}[0]
        final val messageType // pbandk.wkt/FileDescriptorProto.FieldDescriptors.messageType|{}messageType[0]
            final fun <get-messageType>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/FileDescriptorProto, kotlin.collections/List<pbandk.wkt/DescriptorProto>, kotlin.collections/MutableList<pbandk.wkt/DescriptorProto>> // pbandk.wkt/FileDescriptorProto.FieldDescriptors.messageType.<get-messageType>|<get-messageType>(){}[0]
        final val name // pbandk.wkt/FileDescriptorProto.FieldDescriptors.name|{}name[0]
            final fun <get-name>(): pbandk/FieldDescriptor<pbandk.wkt/FileDescriptorProto, kotlin/String?> // pbandk.wkt/FileDescriptorProto.FieldDescriptors.name.<get-name>|<get-name>(){}[0]
        final val options // pbandk.wkt/FileDescriptorProto.FieldDescriptors.options|{}options[0]
            final fun <get-options>(): pbandk/FieldDescriptor<pbandk.wkt/FileDescriptorProto, pbandk.wkt/FileOptions?> // pbandk.wkt/FileDescriptorProto.FieldDescriptors.options.<get-options>|<get-options>(){}[0]
        final val package // pbandk.wkt/FileDescriptorProto.FieldDescriptors.package|{}package[0]
            final fun <get-package>(): pbandk/FieldDescriptor<pbandk.wkt/FileDescriptorProto, kotlin/String?> // pbandk.wkt/FileDescriptorProto.FieldDescriptors.package.<get-package>|<get-package>(){}[0]
        final val publicDependency // pbandk.wkt/FileDescriptorProto.FieldDescriptors.publicDependency|{}publicDependency[0]
            final fun <get-publicDependency>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/FileDescriptorProto, kotlin.collections/List<kotlin/Int>, kotlin.collections/MutableList<kotlin/Int>> // pbandk.wkt/FileDescriptorProto.FieldDescriptors.publicDependency.<get-publicDependency>|<get-publicDependency>(){}[0]
        final val service // pbandk.wkt/FileDescriptorProto.FieldDescriptors.service|{}service[0]
            final fun <get-service>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/FileDescriptorProto, kotlin.collections/List<pbandk.wkt/ServiceDescriptorProto>, kotlin.collections/MutableList<pbandk.wkt/ServiceDescriptorProto>> // pbandk.wkt/FileDescriptorProto.FieldDescriptors.service.<get-service>|<get-service>(){}[0]
        final val sourceCodeInfo // pbandk.wkt/FileDescriptorProto.FieldDescriptors.sourceCodeInfo|{}sourceCodeInfo[0]
            final fun <get-sourceCodeInfo>(): pbandk/FieldDescriptor<pbandk.wkt/FileDescriptorProto, pbandk.wkt/SourceCodeInfo?> // pbandk.wkt/FileDescriptorProto.FieldDescriptors.sourceCodeInfo.<get-sourceCodeInfo>|<get-sourceCodeInfo>(){}[0]
        final val syntax // pbandk.wkt/FileDescriptorProto.FieldDescriptors.syntax|{}syntax[0]
            final fun <get-syntax>(): pbandk/FieldDescriptor<pbandk.wkt/FileDescriptorProto, kotlin/String?> // pbandk.wkt/FileDescriptorProto.FieldDescriptors.syntax.<get-syntax>|<get-syntax>(){}[0]
        final val weakDependency // pbandk.wkt/FileDescriptorProto.FieldDescriptors.weakDependency|{}weakDependency[0]
            final fun <get-weakDependency>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/FileDescriptorProto, kotlin.collections/List<kotlin/Int>, kotlin.collections/MutableList<kotlin/Int>> // pbandk.wkt/FileDescriptorProto.FieldDescriptors.weakDependency.<get-weakDependency>|<get-weakDependency>(){}[0]
    }
}

sealed interface pbandk.wkt/FileDescriptorSet : pbandk/Message { // pbandk.wkt/FileDescriptorSet|null[0]
    abstract val descriptor // pbandk.wkt/FileDescriptorSet.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FileDescriptorSet> // pbandk.wkt/FileDescriptorSet.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val file // pbandk.wkt/FileDescriptorSet.file|{}file[0]
        abstract fun <get-file>(): kotlin.collections/List<pbandk.wkt/FileDescriptorProto> // pbandk.wkt/FileDescriptorSet.file.<get-file>|<get-file>(){}[0]

    abstract fun copy(kotlin.collections/List<pbandk.wkt/FileDescriptorProto> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FileDescriptorSet // pbandk.wkt/FileDescriptorSet.copy|copy(kotlin.collections.List<pbandk.wkt.FileDescriptorProto>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableFileDescriptorSet, kotlin/Unit>): pbandk.wkt/FileDescriptorSet // pbandk.wkt/FileDescriptorSet.copy|copy(kotlin.Function1<pbandk.wkt.MutableFileDescriptorSet,kotlin.Unit>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/FileDescriptorSet // pbandk.wkt/FileDescriptorSet.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/FileDescriptorSet> { // pbandk.wkt/FileDescriptorSet.Companion|null[0]
        final val defaultInstance // pbandk.wkt/FileDescriptorSet.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/FileDescriptorSet // pbandk.wkt/FileDescriptorSet.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/FileDescriptorSet.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FileDescriptorSet> // pbandk.wkt/FileDescriptorSet.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/FileDescriptorSet.FieldDescriptors|null[0]
        final val file // pbandk.wkt/FileDescriptorSet.FieldDescriptors.file|{}file[0]
            final fun <get-file>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/FileDescriptorSet, kotlin.collections/List<pbandk.wkt/FileDescriptorProto>, kotlin.collections/MutableList<pbandk.wkt/FileDescriptorProto>> // pbandk.wkt/FileDescriptorSet.FieldDescriptors.file.<get-file>|<get-file>(){}[0]
    }
}

sealed interface pbandk.wkt/FileOptions : pbandk/ExtendableMessage<pbandk.wkt/FileOptions> { // pbandk.wkt/FileOptions|null[0]
    abstract val ccEnableArenas // pbandk.wkt/FileOptions.ccEnableArenas|{}ccEnableArenas[0]
        abstract fun <get-ccEnableArenas>(): kotlin/Boolean? // pbandk.wkt/FileOptions.ccEnableArenas.<get-ccEnableArenas>|<get-ccEnableArenas>(){}[0]
    abstract val ccGenericServices // pbandk.wkt/FileOptions.ccGenericServices|{}ccGenericServices[0]
        abstract fun <get-ccGenericServices>(): kotlin/Boolean? // pbandk.wkt/FileOptions.ccGenericServices.<get-ccGenericServices>|<get-ccGenericServices>(){}[0]
    abstract val csharpNamespace // pbandk.wkt/FileOptions.csharpNamespace|{}csharpNamespace[0]
        abstract fun <get-csharpNamespace>(): kotlin/String? // pbandk.wkt/FileOptions.csharpNamespace.<get-csharpNamespace>|<get-csharpNamespace>(){}[0]
    abstract val deprecated // pbandk.wkt/FileOptions.deprecated|{}deprecated[0]
        abstract fun <get-deprecated>(): kotlin/Boolean? // pbandk.wkt/FileOptions.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
    abstract val descriptor // pbandk.wkt/FileOptions.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FileOptions> // pbandk.wkt/FileOptions.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val features // pbandk.wkt/FileOptions.features|{}features[0]
        abstract fun <get-features>(): pbandk.wkt/FeatureSet? // pbandk.wkt/FileOptions.features.<get-features>|<get-features>(){}[0]
    abstract val goPackage // pbandk.wkt/FileOptions.goPackage|{}goPackage[0]
        abstract fun <get-goPackage>(): kotlin/String? // pbandk.wkt/FileOptions.goPackage.<get-goPackage>|<get-goPackage>(){}[0]
    abstract val javaGenerateEqualsAndHash // pbandk.wkt/FileOptions.javaGenerateEqualsAndHash|{}javaGenerateEqualsAndHash[0]
        abstract fun <get-javaGenerateEqualsAndHash>(): kotlin/Boolean? // pbandk.wkt/FileOptions.javaGenerateEqualsAndHash.<get-javaGenerateEqualsAndHash>|<get-javaGenerateEqualsAndHash>(){}[0]
    abstract val javaGenericServices // pbandk.wkt/FileOptions.javaGenericServices|{}javaGenericServices[0]
        abstract fun <get-javaGenericServices>(): kotlin/Boolean? // pbandk.wkt/FileOptions.javaGenericServices.<get-javaGenericServices>|<get-javaGenericServices>(){}[0]
    abstract val javaMultipleFiles // pbandk.wkt/FileOptions.javaMultipleFiles|{}javaMultipleFiles[0]
        abstract fun <get-javaMultipleFiles>(): kotlin/Boolean? // pbandk.wkt/FileOptions.javaMultipleFiles.<get-javaMultipleFiles>|<get-javaMultipleFiles>(){}[0]
    abstract val javaOuterClassname // pbandk.wkt/FileOptions.javaOuterClassname|{}javaOuterClassname[0]
        abstract fun <get-javaOuterClassname>(): kotlin/String? // pbandk.wkt/FileOptions.javaOuterClassname.<get-javaOuterClassname>|<get-javaOuterClassname>(){}[0]
    abstract val javaPackage // pbandk.wkt/FileOptions.javaPackage|{}javaPackage[0]
        abstract fun <get-javaPackage>(): kotlin/String? // pbandk.wkt/FileOptions.javaPackage.<get-javaPackage>|<get-javaPackage>(){}[0]
    abstract val javaStringCheckUtf8 // pbandk.wkt/FileOptions.javaStringCheckUtf8|{}javaStringCheckUtf8[0]
        abstract fun <get-javaStringCheckUtf8>(): kotlin/Boolean? // pbandk.wkt/FileOptions.javaStringCheckUtf8.<get-javaStringCheckUtf8>|<get-javaStringCheckUtf8>(){}[0]
    abstract val objcClassPrefix // pbandk.wkt/FileOptions.objcClassPrefix|{}objcClassPrefix[0]
        abstract fun <get-objcClassPrefix>(): kotlin/String? // pbandk.wkt/FileOptions.objcClassPrefix.<get-objcClassPrefix>|<get-objcClassPrefix>(){}[0]
    abstract val optimizeFor // pbandk.wkt/FileOptions.optimizeFor|{}optimizeFor[0]
        abstract fun <get-optimizeFor>(): pbandk.wkt/FileOptions.OptimizeMode? // pbandk.wkt/FileOptions.optimizeFor.<get-optimizeFor>|<get-optimizeFor>(){}[0]
    abstract val phpClassPrefix // pbandk.wkt/FileOptions.phpClassPrefix|{}phpClassPrefix[0]
        abstract fun <get-phpClassPrefix>(): kotlin/String? // pbandk.wkt/FileOptions.phpClassPrefix.<get-phpClassPrefix>|<get-phpClassPrefix>(){}[0]
    abstract val phpMetadataNamespace // pbandk.wkt/FileOptions.phpMetadataNamespace|{}phpMetadataNamespace[0]
        abstract fun <get-phpMetadataNamespace>(): kotlin/String? // pbandk.wkt/FileOptions.phpMetadataNamespace.<get-phpMetadataNamespace>|<get-phpMetadataNamespace>(){}[0]
    abstract val phpNamespace // pbandk.wkt/FileOptions.phpNamespace|{}phpNamespace[0]
        abstract fun <get-phpNamespace>(): kotlin/String? // pbandk.wkt/FileOptions.phpNamespace.<get-phpNamespace>|<get-phpNamespace>(){}[0]
    abstract val pyGenericServices // pbandk.wkt/FileOptions.pyGenericServices|{}pyGenericServices[0]
        abstract fun <get-pyGenericServices>(): kotlin/Boolean? // pbandk.wkt/FileOptions.pyGenericServices.<get-pyGenericServices>|<get-pyGenericServices>(){}[0]
    abstract val rubyPackage // pbandk.wkt/FileOptions.rubyPackage|{}rubyPackage[0]
        abstract fun <get-rubyPackage>(): kotlin/String? // pbandk.wkt/FileOptions.rubyPackage.<get-rubyPackage>|<get-rubyPackage>(){}[0]
    abstract val swiftPrefix // pbandk.wkt/FileOptions.swiftPrefix|{}swiftPrefix[0]
        abstract fun <get-swiftPrefix>(): kotlin/String? // pbandk.wkt/FileOptions.swiftPrefix.<get-swiftPrefix>|<get-swiftPrefix>(){}[0]
    abstract val uninterpretedOption // pbandk.wkt/FileOptions.uninterpretedOption|{}uninterpretedOption[0]
        abstract fun <get-uninterpretedOption>(): kotlin.collections/List<pbandk.wkt/UninterpretedOption> // pbandk.wkt/FileOptions.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableFileOptions, kotlin/Unit>): pbandk.wkt/FileOptions // pbandk.wkt/FileOptions.copy|copy(kotlin.Function1<pbandk.wkt.MutableFileOptions,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., pbandk.wkt/FileOptions.OptimizeMode? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., pbandk.wkt/FeatureSet? = ..., kotlin.collections/List<pbandk.wkt/UninterpretedOption> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FileOptions // pbandk.wkt/FileOptions.copy|copy(kotlin.String?;kotlin.String?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;pbandk.wkt.FileOptions.OptimizeMode?;kotlin.String?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;pbandk.wkt.FeatureSet?;kotlin.collections.List<pbandk.wkt.UninterpretedOption>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/FileOptions // pbandk.wkt/FileOptions.plus|plus(pbandk.Message?){}[0]

    sealed interface OptimizeMode : pbandk/Message.Enum { // pbandk.wkt/FileOptions.OptimizeMode|null[0]
        open val descriptor // pbandk.wkt/FileOptions.OptimizeMode.descriptor|{}descriptor[0]
            open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FileOptions.OptimizeMode> // pbandk.wkt/FileOptions.OptimizeMode.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/FileOptions.OptimizeMode>, pbandk.wkt/FileOptions.OptimizeMode { // pbandk.wkt/FileOptions.OptimizeMode.UNRECOGNIZED|null[0]
            constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/FileOptions.OptimizeMode.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
        }

        final object CODE_SIZE : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FileOptions.OptimizeMode>, pbandk.wkt/FileOptions.OptimizeMode // pbandk.wkt/FileOptions.OptimizeMode.CODE_SIZE|null[0]

        final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/FileOptions.OptimizeMode> { // pbandk.wkt/FileOptions.OptimizeMode.Companion|null[0]
            final val descriptor // pbandk.wkt/FileOptions.OptimizeMode.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/FileOptions.OptimizeMode> // pbandk.wkt/FileOptions.OptimizeMode.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
            final val values // pbandk.wkt/FileOptions.OptimizeMode.Companion.values|{}values[0]
                final fun <get-values>(): kotlin.collections/List<pbandk.wkt/FileOptions.OptimizeMode> // pbandk.wkt/FileOptions.OptimizeMode.Companion.values.<get-values>|<get-values>(){}[0]

            final fun fromName(kotlin/String): pbandk.wkt/FileOptions.OptimizeMode // pbandk.wkt/FileOptions.OptimizeMode.Companion.fromName|fromName(kotlin.String){}[0]
            final fun fromValue(kotlin/Int): pbandk.wkt/FileOptions.OptimizeMode // pbandk.wkt/FileOptions.OptimizeMode.Companion.fromValue|fromValue(kotlin.Int){}[0]
        }

        final object LITE_RUNTIME : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FileOptions.OptimizeMode>, pbandk.wkt/FileOptions.OptimizeMode // pbandk.wkt/FileOptions.OptimizeMode.LITE_RUNTIME|null[0]

        final object SPEED : pbandk.gen/GeneratedEnumValue<pbandk.wkt/FileOptions.OptimizeMode>, pbandk.wkt/FileOptions.OptimizeMode // pbandk.wkt/FileOptions.OptimizeMode.SPEED|null[0]
    }

    final object Companion : pbandk/Message.Companion<pbandk.wkt/FileOptions> { // pbandk.wkt/FileOptions.Companion|null[0]
        final val defaultInstance // pbandk.wkt/FileOptions.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/FileOptions // pbandk.wkt/FileOptions.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/FileOptions.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FileOptions> // pbandk.wkt/FileOptions.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/FileOptions.FieldDescriptors|null[0]
        final val ccEnableArenas // pbandk.wkt/FileOptions.FieldDescriptors.ccEnableArenas|{}ccEnableArenas[0]
            final fun <get-ccEnableArenas>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, kotlin/Boolean?> // pbandk.wkt/FileOptions.FieldDescriptors.ccEnableArenas.<get-ccEnableArenas>|<get-ccEnableArenas>(){}[0]
        final val ccGenericServices // pbandk.wkt/FileOptions.FieldDescriptors.ccGenericServices|{}ccGenericServices[0]
            final fun <get-ccGenericServices>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, kotlin/Boolean?> // pbandk.wkt/FileOptions.FieldDescriptors.ccGenericServices.<get-ccGenericServices>|<get-ccGenericServices>(){}[0]
        final val csharpNamespace // pbandk.wkt/FileOptions.FieldDescriptors.csharpNamespace|{}csharpNamespace[0]
            final fun <get-csharpNamespace>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, kotlin/String?> // pbandk.wkt/FileOptions.FieldDescriptors.csharpNamespace.<get-csharpNamespace>|<get-csharpNamespace>(){}[0]
        final val deprecated // pbandk.wkt/FileOptions.FieldDescriptors.deprecated|{}deprecated[0]
            final fun <get-deprecated>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, kotlin/Boolean?> // pbandk.wkt/FileOptions.FieldDescriptors.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
        final val features // pbandk.wkt/FileOptions.FieldDescriptors.features|{}features[0]
            final fun <get-features>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, pbandk.wkt/FeatureSet?> // pbandk.wkt/FileOptions.FieldDescriptors.features.<get-features>|<get-features>(){}[0]
        final val goPackage // pbandk.wkt/FileOptions.FieldDescriptors.goPackage|{}goPackage[0]
            final fun <get-goPackage>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, kotlin/String?> // pbandk.wkt/FileOptions.FieldDescriptors.goPackage.<get-goPackage>|<get-goPackage>(){}[0]
        final val javaGenerateEqualsAndHash // pbandk.wkt/FileOptions.FieldDescriptors.javaGenerateEqualsAndHash|{}javaGenerateEqualsAndHash[0]
            final fun <get-javaGenerateEqualsAndHash>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, kotlin/Boolean?> // pbandk.wkt/FileOptions.FieldDescriptors.javaGenerateEqualsAndHash.<get-javaGenerateEqualsAndHash>|<get-javaGenerateEqualsAndHash>(){}[0]
        final val javaGenericServices // pbandk.wkt/FileOptions.FieldDescriptors.javaGenericServices|{}javaGenericServices[0]
            final fun <get-javaGenericServices>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, kotlin/Boolean?> // pbandk.wkt/FileOptions.FieldDescriptors.javaGenericServices.<get-javaGenericServices>|<get-javaGenericServices>(){}[0]
        final val javaMultipleFiles // pbandk.wkt/FileOptions.FieldDescriptors.javaMultipleFiles|{}javaMultipleFiles[0]
            final fun <get-javaMultipleFiles>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, kotlin/Boolean?> // pbandk.wkt/FileOptions.FieldDescriptors.javaMultipleFiles.<get-javaMultipleFiles>|<get-javaMultipleFiles>(){}[0]
        final val javaOuterClassname // pbandk.wkt/FileOptions.FieldDescriptors.javaOuterClassname|{}javaOuterClassname[0]
            final fun <get-javaOuterClassname>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, kotlin/String?> // pbandk.wkt/FileOptions.FieldDescriptors.javaOuterClassname.<get-javaOuterClassname>|<get-javaOuterClassname>(){}[0]
        final val javaPackage // pbandk.wkt/FileOptions.FieldDescriptors.javaPackage|{}javaPackage[0]
            final fun <get-javaPackage>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, kotlin/String?> // pbandk.wkt/FileOptions.FieldDescriptors.javaPackage.<get-javaPackage>|<get-javaPackage>(){}[0]
        final val javaStringCheckUtf8 // pbandk.wkt/FileOptions.FieldDescriptors.javaStringCheckUtf8|{}javaStringCheckUtf8[0]
            final fun <get-javaStringCheckUtf8>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, kotlin/Boolean?> // pbandk.wkt/FileOptions.FieldDescriptors.javaStringCheckUtf8.<get-javaStringCheckUtf8>|<get-javaStringCheckUtf8>(){}[0]
        final val objcClassPrefix // pbandk.wkt/FileOptions.FieldDescriptors.objcClassPrefix|{}objcClassPrefix[0]
            final fun <get-objcClassPrefix>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, kotlin/String?> // pbandk.wkt/FileOptions.FieldDescriptors.objcClassPrefix.<get-objcClassPrefix>|<get-objcClassPrefix>(){}[0]
        final val optimizeFor // pbandk.wkt/FileOptions.FieldDescriptors.optimizeFor|{}optimizeFor[0]
            final fun <get-optimizeFor>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, pbandk.wkt/FileOptions.OptimizeMode?> // pbandk.wkt/FileOptions.FieldDescriptors.optimizeFor.<get-optimizeFor>|<get-optimizeFor>(){}[0]
        final val phpClassPrefix // pbandk.wkt/FileOptions.FieldDescriptors.phpClassPrefix|{}phpClassPrefix[0]
            final fun <get-phpClassPrefix>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, kotlin/String?> // pbandk.wkt/FileOptions.FieldDescriptors.phpClassPrefix.<get-phpClassPrefix>|<get-phpClassPrefix>(){}[0]
        final val phpMetadataNamespace // pbandk.wkt/FileOptions.FieldDescriptors.phpMetadataNamespace|{}phpMetadataNamespace[0]
            final fun <get-phpMetadataNamespace>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, kotlin/String?> // pbandk.wkt/FileOptions.FieldDescriptors.phpMetadataNamespace.<get-phpMetadataNamespace>|<get-phpMetadataNamespace>(){}[0]
        final val phpNamespace // pbandk.wkt/FileOptions.FieldDescriptors.phpNamespace|{}phpNamespace[0]
            final fun <get-phpNamespace>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, kotlin/String?> // pbandk.wkt/FileOptions.FieldDescriptors.phpNamespace.<get-phpNamespace>|<get-phpNamespace>(){}[0]
        final val pyGenericServices // pbandk.wkt/FileOptions.FieldDescriptors.pyGenericServices|{}pyGenericServices[0]
            final fun <get-pyGenericServices>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, kotlin/Boolean?> // pbandk.wkt/FileOptions.FieldDescriptors.pyGenericServices.<get-pyGenericServices>|<get-pyGenericServices>(){}[0]
        final val rubyPackage // pbandk.wkt/FileOptions.FieldDescriptors.rubyPackage|{}rubyPackage[0]
            final fun <get-rubyPackage>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, kotlin/String?> // pbandk.wkt/FileOptions.FieldDescriptors.rubyPackage.<get-rubyPackage>|<get-rubyPackage>(){}[0]
        final val swiftPrefix // pbandk.wkt/FileOptions.FieldDescriptors.swiftPrefix|{}swiftPrefix[0]
            final fun <get-swiftPrefix>(): pbandk/FieldDescriptor<pbandk.wkt/FileOptions, kotlin/String?> // pbandk.wkt/FileOptions.FieldDescriptors.swiftPrefix.<get-swiftPrefix>|<get-swiftPrefix>(){}[0]
        final val uninterpretedOption // pbandk.wkt/FileOptions.FieldDescriptors.uninterpretedOption|{}uninterpretedOption[0]
            final fun <get-uninterpretedOption>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/FileOptions, kotlin.collections/List<pbandk.wkt/UninterpretedOption>, kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption>> // pbandk.wkt/FileOptions.FieldDescriptors.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]
    }
}

sealed interface pbandk.wkt/FloatValue : pbandk/Message { // pbandk.wkt/FloatValue|null[0]
    abstract val descriptor // pbandk.wkt/FloatValue.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FloatValue> // pbandk.wkt/FloatValue.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val value // pbandk.wkt/FloatValue.value|{}value[0]
        abstract fun <get-value>(): kotlin/Float // pbandk.wkt/FloatValue.value.<get-value>|<get-value>(){}[0]

    abstract fun copy(kotlin/Float = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FloatValue // pbandk.wkt/FloatValue.copy|copy(kotlin.Float;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableFloatValue, kotlin/Unit>): pbandk.wkt/FloatValue // pbandk.wkt/FloatValue.copy|copy(kotlin.Function1<pbandk.wkt.MutableFloatValue,kotlin.Unit>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/FloatValue // pbandk.wkt/FloatValue.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/FloatValue> { // pbandk.wkt/FloatValue.Companion|null[0]
        final val defaultInstance // pbandk.wkt/FloatValue.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/FloatValue // pbandk.wkt/FloatValue.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/FloatValue.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/FloatValue> // pbandk.wkt/FloatValue.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/FloatValue.FieldDescriptors|null[0]
        final val value // pbandk.wkt/FloatValue.FieldDescriptors.value|{}value[0]
            final fun <get-value>(): pbandk/FieldDescriptor<pbandk.wkt/FloatValue, kotlin/Float> // pbandk.wkt/FloatValue.FieldDescriptors.value.<get-value>|<get-value>(){}[0]
    }
}

sealed interface pbandk.wkt/GeneratedCodeInfo : pbandk/Message { // pbandk.wkt/GeneratedCodeInfo|null[0]
    abstract val annotation // pbandk.wkt/GeneratedCodeInfo.annotation|{}annotation[0]
        abstract fun <get-annotation>(): kotlin.collections/List<pbandk.wkt/GeneratedCodeInfo.Annotation> // pbandk.wkt/GeneratedCodeInfo.annotation.<get-annotation>|<get-annotation>(){}[0]
    abstract val descriptor // pbandk.wkt/GeneratedCodeInfo.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/GeneratedCodeInfo> // pbandk.wkt/GeneratedCodeInfo.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    abstract fun copy(kotlin.collections/List<pbandk.wkt/GeneratedCodeInfo.Annotation> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/GeneratedCodeInfo // pbandk.wkt/GeneratedCodeInfo.copy|copy(kotlin.collections.List<pbandk.wkt.GeneratedCodeInfo.Annotation>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableGeneratedCodeInfo, kotlin/Unit>): pbandk.wkt/GeneratedCodeInfo // pbandk.wkt/GeneratedCodeInfo.copy|copy(kotlin.Function1<pbandk.wkt.MutableGeneratedCodeInfo,kotlin.Unit>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/GeneratedCodeInfo // pbandk.wkt/GeneratedCodeInfo.plus|plus(pbandk.Message?){}[0]

    sealed interface Annotation : pbandk/Message { // pbandk.wkt/GeneratedCodeInfo.Annotation|null[0]
        abstract val begin // pbandk.wkt/GeneratedCodeInfo.Annotation.begin|{}begin[0]
            abstract fun <get-begin>(): kotlin/Int? // pbandk.wkt/GeneratedCodeInfo.Annotation.begin.<get-begin>|<get-begin>(){}[0]
        abstract val descriptor // pbandk.wkt/GeneratedCodeInfo.Annotation.descriptor|{}descriptor[0]
            abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/GeneratedCodeInfo.Annotation> // pbandk.wkt/GeneratedCodeInfo.Annotation.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        abstract val end // pbandk.wkt/GeneratedCodeInfo.Annotation.end|{}end[0]
            abstract fun <get-end>(): kotlin/Int? // pbandk.wkt/GeneratedCodeInfo.Annotation.end.<get-end>|<get-end>(){}[0]
        abstract val path // pbandk.wkt/GeneratedCodeInfo.Annotation.path|{}path[0]
            abstract fun <get-path>(): kotlin.collections/List<kotlin/Int> // pbandk.wkt/GeneratedCodeInfo.Annotation.path.<get-path>|<get-path>(){}[0]
        abstract val semantic // pbandk.wkt/GeneratedCodeInfo.Annotation.semantic|{}semantic[0]
            abstract fun <get-semantic>(): pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic? // pbandk.wkt/GeneratedCodeInfo.Annotation.semantic.<get-semantic>|<get-semantic>(){}[0]
        abstract val sourceFile // pbandk.wkt/GeneratedCodeInfo.Annotation.sourceFile|{}sourceFile[0]
            abstract fun <get-sourceFile>(): kotlin/String? // pbandk.wkt/GeneratedCodeInfo.Annotation.sourceFile.<get-sourceFile>|<get-sourceFile>(){}[0]

        abstract fun copy(kotlin.collections/List<kotlin/Int> = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ..., pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/GeneratedCodeInfo.Annotation // pbandk.wkt/GeneratedCodeInfo.Annotation.copy|copy(kotlin.collections.List<kotlin.Int>;kotlin.String?;kotlin.Int?;kotlin.Int?;pbandk.wkt.GeneratedCodeInfo.Annotation.Semantic?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
        abstract fun copy(kotlin/Function1<pbandk.wkt/GeneratedCodeInfo.MutableAnnotation, kotlin/Unit>): pbandk.wkt/GeneratedCodeInfo.Annotation // pbandk.wkt/GeneratedCodeInfo.Annotation.copy|copy(kotlin.Function1<pbandk.wkt.GeneratedCodeInfo.MutableAnnotation,kotlin.Unit>){}[0]
        abstract fun plus(pbandk/Message?): pbandk.wkt/GeneratedCodeInfo.Annotation // pbandk.wkt/GeneratedCodeInfo.Annotation.plus|plus(pbandk.Message?){}[0]

        sealed interface Semantic : pbandk/Message.Enum { // pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic|null[0]
            open val descriptor // pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic.descriptor|{}descriptor[0]
                open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic> // pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

            final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic>, pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic { // pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic.UNRECOGNIZED|null[0]
                constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
            }

            final object ALIAS : pbandk.gen/GeneratedEnumValue<pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic>, pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic // pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic.ALIAS|null[0]

            final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic> { // pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic.Companion|null[0]
                final val descriptor // pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic.Companion.descriptor|{}descriptor[0]
                    final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic> // pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
                final val values // pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic.Companion.values|{}values[0]
                    final fun <get-values>(): kotlin.collections/List<pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic> // pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic.Companion.values.<get-values>|<get-values>(){}[0]

                final fun fromName(kotlin/String): pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic // pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic.Companion.fromName|fromName(kotlin.String){}[0]
                final fun fromValue(kotlin/Int): pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic // pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic.Companion.fromValue|fromValue(kotlin.Int){}[0]
            }

            final object NONE : pbandk.gen/GeneratedEnumValue<pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic>, pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic // pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic.NONE|null[0]

            final object SET : pbandk.gen/GeneratedEnumValue<pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic>, pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic // pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic.SET|null[0]
        }

        final object Companion : pbandk/Message.Companion<pbandk.wkt/GeneratedCodeInfo.Annotation> { // pbandk.wkt/GeneratedCodeInfo.Annotation.Companion|null[0]
            final val defaultInstance // pbandk.wkt/GeneratedCodeInfo.Annotation.Companion.defaultInstance|{}defaultInstance[0]
                final fun <get-defaultInstance>(): pbandk.wkt/GeneratedCodeInfo.Annotation // pbandk.wkt/GeneratedCodeInfo.Annotation.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
            final val descriptor // pbandk.wkt/GeneratedCodeInfo.Annotation.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/GeneratedCodeInfo.Annotation> // pbandk.wkt/GeneratedCodeInfo.Annotation.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        }

        final object FieldDescriptors { // pbandk.wkt/GeneratedCodeInfo.Annotation.FieldDescriptors|null[0]
            final val begin // pbandk.wkt/GeneratedCodeInfo.Annotation.FieldDescriptors.begin|{}begin[0]
                final fun <get-begin>(): pbandk/FieldDescriptor<pbandk.wkt/GeneratedCodeInfo.Annotation, kotlin/Int?> // pbandk.wkt/GeneratedCodeInfo.Annotation.FieldDescriptors.begin.<get-begin>|<get-begin>(){}[0]
            final val end // pbandk.wkt/GeneratedCodeInfo.Annotation.FieldDescriptors.end|{}end[0]
                final fun <get-end>(): pbandk/FieldDescriptor<pbandk.wkt/GeneratedCodeInfo.Annotation, kotlin/Int?> // pbandk.wkt/GeneratedCodeInfo.Annotation.FieldDescriptors.end.<get-end>|<get-end>(){}[0]
            final val path // pbandk.wkt/GeneratedCodeInfo.Annotation.FieldDescriptors.path|{}path[0]
                final fun <get-path>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/GeneratedCodeInfo.Annotation, kotlin.collections/List<kotlin/Int>, kotlin.collections/MutableList<kotlin/Int>> // pbandk.wkt/GeneratedCodeInfo.Annotation.FieldDescriptors.path.<get-path>|<get-path>(){}[0]
            final val semantic // pbandk.wkt/GeneratedCodeInfo.Annotation.FieldDescriptors.semantic|{}semantic[0]
                final fun <get-semantic>(): pbandk/FieldDescriptor<pbandk.wkt/GeneratedCodeInfo.Annotation, pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic?> // pbandk.wkt/GeneratedCodeInfo.Annotation.FieldDescriptors.semantic.<get-semantic>|<get-semantic>(){}[0]
            final val sourceFile // pbandk.wkt/GeneratedCodeInfo.Annotation.FieldDescriptors.sourceFile|{}sourceFile[0]
                final fun <get-sourceFile>(): pbandk/FieldDescriptor<pbandk.wkt/GeneratedCodeInfo.Annotation, kotlin/String?> // pbandk.wkt/GeneratedCodeInfo.Annotation.FieldDescriptors.sourceFile.<get-sourceFile>|<get-sourceFile>(){}[0]
        }
    }

    sealed interface MutableAnnotation : pbandk.wkt/GeneratedCodeInfo.Annotation, pbandk/MutableMessage<pbandk.wkt/GeneratedCodeInfo.Annotation> { // pbandk.wkt/GeneratedCodeInfo.MutableAnnotation|null[0]
        abstract val path // pbandk.wkt/GeneratedCodeInfo.MutableAnnotation.path|{}path[0]
            abstract fun <get-path>(): kotlin.collections/MutableList<kotlin/Int> // pbandk.wkt/GeneratedCodeInfo.MutableAnnotation.path.<get-path>|<get-path>(){}[0]

        abstract var begin // pbandk.wkt/GeneratedCodeInfo.MutableAnnotation.begin|{}begin[0]
            abstract fun <get-begin>(): kotlin/Int? // pbandk.wkt/GeneratedCodeInfo.MutableAnnotation.begin.<get-begin>|<get-begin>(){}[0]
            abstract fun <set-begin>(kotlin/Int?) // pbandk.wkt/GeneratedCodeInfo.MutableAnnotation.begin.<set-begin>|<set-begin>(kotlin.Int?){}[0]
        abstract var end // pbandk.wkt/GeneratedCodeInfo.MutableAnnotation.end|{}end[0]
            abstract fun <get-end>(): kotlin/Int? // pbandk.wkt/GeneratedCodeInfo.MutableAnnotation.end.<get-end>|<get-end>(){}[0]
            abstract fun <set-end>(kotlin/Int?) // pbandk.wkt/GeneratedCodeInfo.MutableAnnotation.end.<set-end>|<set-end>(kotlin.Int?){}[0]
        abstract var semantic // pbandk.wkt/GeneratedCodeInfo.MutableAnnotation.semantic|{}semantic[0]
            abstract fun <get-semantic>(): pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic? // pbandk.wkt/GeneratedCodeInfo.MutableAnnotation.semantic.<get-semantic>|<get-semantic>(){}[0]
            abstract fun <set-semantic>(pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic?) // pbandk.wkt/GeneratedCodeInfo.MutableAnnotation.semantic.<set-semantic>|<set-semantic>(pbandk.wkt.GeneratedCodeInfo.Annotation.Semantic?){}[0]
        abstract var sourceFile // pbandk.wkt/GeneratedCodeInfo.MutableAnnotation.sourceFile|{}sourceFile[0]
            abstract fun <get-sourceFile>(): kotlin/String? // pbandk.wkt/GeneratedCodeInfo.MutableAnnotation.sourceFile.<get-sourceFile>|<get-sourceFile>(){}[0]
            abstract fun <set-sourceFile>(kotlin/String?) // pbandk.wkt/GeneratedCodeInfo.MutableAnnotation.sourceFile.<set-sourceFile>|<set-sourceFile>(kotlin.String?){}[0]
    }

    final object Companion : pbandk/Message.Companion<pbandk.wkt/GeneratedCodeInfo> { // pbandk.wkt/GeneratedCodeInfo.Companion|null[0]
        final val defaultInstance // pbandk.wkt/GeneratedCodeInfo.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/GeneratedCodeInfo // pbandk.wkt/GeneratedCodeInfo.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/GeneratedCodeInfo.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/GeneratedCodeInfo> // pbandk.wkt/GeneratedCodeInfo.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun Annotation(kotlin.collections/List<kotlin/Int> = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/Int? = ..., pbandk.wkt/GeneratedCodeInfo.Annotation.Semantic? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/GeneratedCodeInfo.Annotation // pbandk.wkt/GeneratedCodeInfo.Companion.Annotation|Annotation(kotlin.collections.List<kotlin.Int>;kotlin.String?;kotlin.Int?;kotlin.Int?;pbandk.wkt.GeneratedCodeInfo.Annotation.Semantic?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/GeneratedCodeInfo.FieldDescriptors|null[0]
        final val annotation // pbandk.wkt/GeneratedCodeInfo.FieldDescriptors.annotation|{}annotation[0]
            final fun <get-annotation>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/GeneratedCodeInfo, kotlin.collections/List<pbandk.wkt/GeneratedCodeInfo.Annotation>, kotlin.collections/MutableList<pbandk.wkt/GeneratedCodeInfo.Annotation>> // pbandk.wkt/GeneratedCodeInfo.FieldDescriptors.annotation.<get-annotation>|<get-annotation>(){}[0]
    }
}

sealed interface pbandk.wkt/Int32Value : pbandk/Message { // pbandk.wkt/Int32Value|null[0]
    abstract val descriptor // pbandk.wkt/Int32Value.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Int32Value> // pbandk.wkt/Int32Value.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val value // pbandk.wkt/Int32Value.value|{}value[0]
        abstract fun <get-value>(): kotlin/Int // pbandk.wkt/Int32Value.value.<get-value>|<get-value>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableInt32Value, kotlin/Unit>): pbandk.wkt/Int32Value // pbandk.wkt/Int32Value.copy|copy(kotlin.Function1<pbandk.wkt.MutableInt32Value,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/Int = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Int32Value // pbandk.wkt/Int32Value.copy|copy(kotlin.Int;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/Int32Value // pbandk.wkt/Int32Value.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/Int32Value> { // pbandk.wkt/Int32Value.Companion|null[0]
        final val defaultInstance // pbandk.wkt/Int32Value.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/Int32Value // pbandk.wkt/Int32Value.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/Int32Value.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Int32Value> // pbandk.wkt/Int32Value.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/Int32Value.FieldDescriptors|null[0]
        final val value // pbandk.wkt/Int32Value.FieldDescriptors.value|{}value[0]
            final fun <get-value>(): pbandk/FieldDescriptor<pbandk.wkt/Int32Value, kotlin/Int> // pbandk.wkt/Int32Value.FieldDescriptors.value.<get-value>|<get-value>(){}[0]
    }
}

sealed interface pbandk.wkt/Int64Value : pbandk/Message { // pbandk.wkt/Int64Value|null[0]
    abstract val descriptor // pbandk.wkt/Int64Value.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Int64Value> // pbandk.wkt/Int64Value.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val value // pbandk.wkt/Int64Value.value|{}value[0]
        abstract fun <get-value>(): kotlin/Long // pbandk.wkt/Int64Value.value.<get-value>|<get-value>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableInt64Value, kotlin/Unit>): pbandk.wkt/Int64Value // pbandk.wkt/Int64Value.copy|copy(kotlin.Function1<pbandk.wkt.MutableInt64Value,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/Long = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Int64Value // pbandk.wkt/Int64Value.copy|copy(kotlin.Long;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/Int64Value // pbandk.wkt/Int64Value.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/Int64Value> { // pbandk.wkt/Int64Value.Companion|null[0]
        final val defaultInstance // pbandk.wkt/Int64Value.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/Int64Value // pbandk.wkt/Int64Value.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/Int64Value.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Int64Value> // pbandk.wkt/Int64Value.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/Int64Value.FieldDescriptors|null[0]
        final val value // pbandk.wkt/Int64Value.FieldDescriptors.value|{}value[0]
            final fun <get-value>(): pbandk/FieldDescriptor<pbandk.wkt/Int64Value, kotlin/Long> // pbandk.wkt/Int64Value.FieldDescriptors.value.<get-value>|<get-value>(){}[0]
    }
}

sealed interface pbandk.wkt/JavaFeatures : pbandk/Message { // pbandk.wkt/JavaFeatures|null[0]
    abstract val descriptor // pbandk.wkt/JavaFeatures.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/JavaFeatures> // pbandk.wkt/JavaFeatures.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val legacyClosedEnum // pbandk.wkt/JavaFeatures.legacyClosedEnum|{}legacyClosedEnum[0]
        abstract fun <get-legacyClosedEnum>(): kotlin/Boolean? // pbandk.wkt/JavaFeatures.legacyClosedEnum.<get-legacyClosedEnum>|<get-legacyClosedEnum>(){}[0]
    abstract val utf8Validation // pbandk.wkt/JavaFeatures.utf8Validation|{}utf8Validation[0]
        abstract fun <get-utf8Validation>(): pbandk.wkt/JavaFeatures.Utf8Validation? // pbandk.wkt/JavaFeatures.utf8Validation.<get-utf8Validation>|<get-utf8Validation>(){}[0]

    abstract fun copy(kotlin/Boolean? = ..., pbandk.wkt/JavaFeatures.Utf8Validation? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/JavaFeatures // pbandk.wkt/JavaFeatures.copy|copy(kotlin.Boolean?;pbandk.wkt.JavaFeatures.Utf8Validation?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableJavaFeatures, kotlin/Unit>): pbandk.wkt/JavaFeatures // pbandk.wkt/JavaFeatures.copy|copy(kotlin.Function1<pbandk.wkt.MutableJavaFeatures,kotlin.Unit>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/JavaFeatures // pbandk.wkt/JavaFeatures.plus|plus(pbandk.Message?){}[0]

    sealed interface Utf8Validation : pbandk/Message.Enum { // pbandk.wkt/JavaFeatures.Utf8Validation|null[0]
        open val descriptor // pbandk.wkt/JavaFeatures.Utf8Validation.descriptor|{}descriptor[0]
            open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/JavaFeatures.Utf8Validation> // pbandk.wkt/JavaFeatures.Utf8Validation.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/JavaFeatures.Utf8Validation>, pbandk.wkt/JavaFeatures.Utf8Validation { // pbandk.wkt/JavaFeatures.Utf8Validation.UNRECOGNIZED|null[0]
            constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/JavaFeatures.Utf8Validation.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
        }

        final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/JavaFeatures.Utf8Validation> { // pbandk.wkt/JavaFeatures.Utf8Validation.Companion|null[0]
            final val descriptor // pbandk.wkt/JavaFeatures.Utf8Validation.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/JavaFeatures.Utf8Validation> // pbandk.wkt/JavaFeatures.Utf8Validation.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
            final val values // pbandk.wkt/JavaFeatures.Utf8Validation.Companion.values|{}values[0]
                final fun <get-values>(): kotlin.collections/List<pbandk.wkt/JavaFeatures.Utf8Validation> // pbandk.wkt/JavaFeatures.Utf8Validation.Companion.values.<get-values>|<get-values>(){}[0]

            final fun fromName(kotlin/String): pbandk.wkt/JavaFeatures.Utf8Validation // pbandk.wkt/JavaFeatures.Utf8Validation.Companion.fromName|fromName(kotlin.String){}[0]
            final fun fromValue(kotlin/Int): pbandk.wkt/JavaFeatures.Utf8Validation // pbandk.wkt/JavaFeatures.Utf8Validation.Companion.fromValue|fromValue(kotlin.Int){}[0]
        }

        final object DEFAULT : pbandk.gen/GeneratedEnumValue<pbandk.wkt/JavaFeatures.Utf8Validation>, pbandk.wkt/JavaFeatures.Utf8Validation // pbandk.wkt/JavaFeatures.Utf8Validation.DEFAULT|null[0]

        final object UTF8_VALIDATION_UNKNOWN : pbandk.gen/GeneratedEnumValue<pbandk.wkt/JavaFeatures.Utf8Validation>, pbandk.wkt/JavaFeatures.Utf8Validation // pbandk.wkt/JavaFeatures.Utf8Validation.UTF8_VALIDATION_UNKNOWN|null[0]

        final object VERIFY : pbandk.gen/GeneratedEnumValue<pbandk.wkt/JavaFeatures.Utf8Validation>, pbandk.wkt/JavaFeatures.Utf8Validation // pbandk.wkt/JavaFeatures.Utf8Validation.VERIFY|null[0]
    }

    final object Companion : pbandk/Message.Companion<pbandk.wkt/JavaFeatures> { // pbandk.wkt/JavaFeatures.Companion|null[0]
        final val defaultInstance // pbandk.wkt/JavaFeatures.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/JavaFeatures // pbandk.wkt/JavaFeatures.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/JavaFeatures.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/JavaFeatures> // pbandk.wkt/JavaFeatures.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/JavaFeatures.FieldDescriptors|null[0]
        final val legacyClosedEnum // pbandk.wkt/JavaFeatures.FieldDescriptors.legacyClosedEnum|{}legacyClosedEnum[0]
            final fun <get-legacyClosedEnum>(): pbandk/FieldDescriptor<pbandk.wkt/JavaFeatures, kotlin/Boolean?> // pbandk.wkt/JavaFeatures.FieldDescriptors.legacyClosedEnum.<get-legacyClosedEnum>|<get-legacyClosedEnum>(){}[0]
        final val utf8Validation // pbandk.wkt/JavaFeatures.FieldDescriptors.utf8Validation|{}utf8Validation[0]
            final fun <get-utf8Validation>(): pbandk/FieldDescriptor<pbandk.wkt/JavaFeatures, pbandk.wkt/JavaFeatures.Utf8Validation?> // pbandk.wkt/JavaFeatures.FieldDescriptors.utf8Validation.<get-utf8Validation>|<get-utf8Validation>(){}[0]
    }
}

sealed interface pbandk.wkt/ListValue : pbandk/Message { // pbandk.wkt/ListValue|null[0]
    abstract val descriptor // pbandk.wkt/ListValue.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/ListValue> // pbandk.wkt/ListValue.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val values // pbandk.wkt/ListValue.values|{}values[0]
        abstract fun <get-values>(): kotlin.collections/List<pbandk.wkt/Value> // pbandk.wkt/ListValue.values.<get-values>|<get-values>(){}[0]

    abstract fun copy(kotlin.collections/List<pbandk.wkt/Value> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/ListValue // pbandk.wkt/ListValue.copy|copy(kotlin.collections.List<pbandk.wkt.Value>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableListValue, kotlin/Unit>): pbandk.wkt/ListValue // pbandk.wkt/ListValue.copy|copy(kotlin.Function1<pbandk.wkt.MutableListValue,kotlin.Unit>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/ListValue // pbandk.wkt/ListValue.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/ListValue> { // pbandk.wkt/ListValue.Companion|null[0]
        final val defaultInstance // pbandk.wkt/ListValue.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/ListValue // pbandk.wkt/ListValue.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/ListValue.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/ListValue> // pbandk.wkt/ListValue.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/ListValue.FieldDescriptors|null[0]
        final val values // pbandk.wkt/ListValue.FieldDescriptors.values|{}values[0]
            final fun <get-values>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/ListValue, kotlin.collections/List<pbandk.wkt/Value>, kotlin.collections/MutableList<pbandk.wkt/Value>> // pbandk.wkt/ListValue.FieldDescriptors.values.<get-values>|<get-values>(){}[0]
    }
}

sealed interface pbandk.wkt/MessageOptions : pbandk/ExtendableMessage<pbandk.wkt/MessageOptions> { // pbandk.wkt/MessageOptions|null[0]
    abstract val deprecated // pbandk.wkt/MessageOptions.deprecated|{}deprecated[0]
        abstract fun <get-deprecated>(): kotlin/Boolean? // pbandk.wkt/MessageOptions.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
    abstract val deprecatedLegacyJsonFieldConflicts // pbandk.wkt/MessageOptions.deprecatedLegacyJsonFieldConflicts|{}deprecatedLegacyJsonFieldConflicts[0]
        abstract fun <get-deprecatedLegacyJsonFieldConflicts>(): kotlin/Boolean? // pbandk.wkt/MessageOptions.deprecatedLegacyJsonFieldConflicts.<get-deprecatedLegacyJsonFieldConflicts>|<get-deprecatedLegacyJsonFieldConflicts>(){}[0]
    abstract val descriptor // pbandk.wkt/MessageOptions.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/MessageOptions> // pbandk.wkt/MessageOptions.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val features // pbandk.wkt/MessageOptions.features|{}features[0]
        abstract fun <get-features>(): pbandk.wkt/FeatureSet? // pbandk.wkt/MessageOptions.features.<get-features>|<get-features>(){}[0]
    abstract val mapEntry // pbandk.wkt/MessageOptions.mapEntry|{}mapEntry[0]
        abstract fun <get-mapEntry>(): kotlin/Boolean? // pbandk.wkt/MessageOptions.mapEntry.<get-mapEntry>|<get-mapEntry>(){}[0]
    abstract val messageSetWireFormat // pbandk.wkt/MessageOptions.messageSetWireFormat|{}messageSetWireFormat[0]
        abstract fun <get-messageSetWireFormat>(): kotlin/Boolean? // pbandk.wkt/MessageOptions.messageSetWireFormat.<get-messageSetWireFormat>|<get-messageSetWireFormat>(){}[0]
    abstract val noStandardDescriptorAccessor // pbandk.wkt/MessageOptions.noStandardDescriptorAccessor|{}noStandardDescriptorAccessor[0]
        abstract fun <get-noStandardDescriptorAccessor>(): kotlin/Boolean? // pbandk.wkt/MessageOptions.noStandardDescriptorAccessor.<get-noStandardDescriptorAccessor>|<get-noStandardDescriptorAccessor>(){}[0]
    abstract val uninterpretedOption // pbandk.wkt/MessageOptions.uninterpretedOption|{}uninterpretedOption[0]
        abstract fun <get-uninterpretedOption>(): kotlin.collections/List<pbandk.wkt/UninterpretedOption> // pbandk.wkt/MessageOptions.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]

    abstract fun copy(kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., pbandk.wkt/FeatureSet? = ..., kotlin.collections/List<pbandk.wkt/UninterpretedOption> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/MessageOptions // pbandk.wkt/MessageOptions.copy|copy(kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;pbandk.wkt.FeatureSet?;kotlin.collections.List<pbandk.wkt.UninterpretedOption>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableMessageOptions, kotlin/Unit>): pbandk.wkt/MessageOptions // pbandk.wkt/MessageOptions.copy|copy(kotlin.Function1<pbandk.wkt.MutableMessageOptions,kotlin.Unit>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/MessageOptions // pbandk.wkt/MessageOptions.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/MessageOptions> { // pbandk.wkt/MessageOptions.Companion|null[0]
        final val defaultInstance // pbandk.wkt/MessageOptions.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/MessageOptions // pbandk.wkt/MessageOptions.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/MessageOptions.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/MessageOptions> // pbandk.wkt/MessageOptions.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/MessageOptions.FieldDescriptors|null[0]
        final val deprecated // pbandk.wkt/MessageOptions.FieldDescriptors.deprecated|{}deprecated[0]
            final fun <get-deprecated>(): pbandk/FieldDescriptor<pbandk.wkt/MessageOptions, kotlin/Boolean?> // pbandk.wkt/MessageOptions.FieldDescriptors.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
        final val deprecatedLegacyJsonFieldConflicts // pbandk.wkt/MessageOptions.FieldDescriptors.deprecatedLegacyJsonFieldConflicts|{}deprecatedLegacyJsonFieldConflicts[0]
            final fun <get-deprecatedLegacyJsonFieldConflicts>(): pbandk/FieldDescriptor<pbandk.wkt/MessageOptions, kotlin/Boolean?> // pbandk.wkt/MessageOptions.FieldDescriptors.deprecatedLegacyJsonFieldConflicts.<get-deprecatedLegacyJsonFieldConflicts>|<get-deprecatedLegacyJsonFieldConflicts>(){}[0]
        final val features // pbandk.wkt/MessageOptions.FieldDescriptors.features|{}features[0]
            final fun <get-features>(): pbandk/FieldDescriptor<pbandk.wkt/MessageOptions, pbandk.wkt/FeatureSet?> // pbandk.wkt/MessageOptions.FieldDescriptors.features.<get-features>|<get-features>(){}[0]
        final val mapEntry // pbandk.wkt/MessageOptions.FieldDescriptors.mapEntry|{}mapEntry[0]
            final fun <get-mapEntry>(): pbandk/FieldDescriptor<pbandk.wkt/MessageOptions, kotlin/Boolean?> // pbandk.wkt/MessageOptions.FieldDescriptors.mapEntry.<get-mapEntry>|<get-mapEntry>(){}[0]
        final val messageSetWireFormat // pbandk.wkt/MessageOptions.FieldDescriptors.messageSetWireFormat|{}messageSetWireFormat[0]
            final fun <get-messageSetWireFormat>(): pbandk/FieldDescriptor<pbandk.wkt/MessageOptions, kotlin/Boolean?> // pbandk.wkt/MessageOptions.FieldDescriptors.messageSetWireFormat.<get-messageSetWireFormat>|<get-messageSetWireFormat>(){}[0]
        final val noStandardDescriptorAccessor // pbandk.wkt/MessageOptions.FieldDescriptors.noStandardDescriptorAccessor|{}noStandardDescriptorAccessor[0]
            final fun <get-noStandardDescriptorAccessor>(): pbandk/FieldDescriptor<pbandk.wkt/MessageOptions, kotlin/Boolean?> // pbandk.wkt/MessageOptions.FieldDescriptors.noStandardDescriptorAccessor.<get-noStandardDescriptorAccessor>|<get-noStandardDescriptorAccessor>(){}[0]
        final val uninterpretedOption // pbandk.wkt/MessageOptions.FieldDescriptors.uninterpretedOption|{}uninterpretedOption[0]
            final fun <get-uninterpretedOption>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/MessageOptions, kotlin.collections/List<pbandk.wkt/UninterpretedOption>, kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption>> // pbandk.wkt/MessageOptions.FieldDescriptors.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]
    }
}

sealed interface pbandk.wkt/Method : pbandk/Message { // pbandk.wkt/Method|null[0]
    abstract val descriptor // pbandk.wkt/Method.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Method> // pbandk.wkt/Method.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val name // pbandk.wkt/Method.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // pbandk.wkt/Method.name.<get-name>|<get-name>(){}[0]
    abstract val options // pbandk.wkt/Method.options|{}options[0]
        abstract fun <get-options>(): kotlin.collections/List<pbandk.wkt/Option> // pbandk.wkt/Method.options.<get-options>|<get-options>(){}[0]
    abstract val requestStreaming // pbandk.wkt/Method.requestStreaming|{}requestStreaming[0]
        abstract fun <get-requestStreaming>(): kotlin/Boolean // pbandk.wkt/Method.requestStreaming.<get-requestStreaming>|<get-requestStreaming>(){}[0]
    abstract val requestTypeUrl // pbandk.wkt/Method.requestTypeUrl|{}requestTypeUrl[0]
        abstract fun <get-requestTypeUrl>(): kotlin/String // pbandk.wkt/Method.requestTypeUrl.<get-requestTypeUrl>|<get-requestTypeUrl>(){}[0]
    abstract val responseStreaming // pbandk.wkt/Method.responseStreaming|{}responseStreaming[0]
        abstract fun <get-responseStreaming>(): kotlin/Boolean // pbandk.wkt/Method.responseStreaming.<get-responseStreaming>|<get-responseStreaming>(){}[0]
    abstract val responseTypeUrl // pbandk.wkt/Method.responseTypeUrl|{}responseTypeUrl[0]
        abstract fun <get-responseTypeUrl>(): kotlin/String // pbandk.wkt/Method.responseTypeUrl.<get-responseTypeUrl>|<get-responseTypeUrl>(){}[0]
    abstract val syntax // pbandk.wkt/Method.syntax|{}syntax[0]
        abstract fun <get-syntax>(): pbandk.wkt/Syntax // pbandk.wkt/Method.syntax.<get-syntax>|<get-syntax>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableMethod, kotlin/Unit>): pbandk.wkt/Method // pbandk.wkt/Method.copy|copy(kotlin.Function1<pbandk.wkt.MutableMethod,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/String = ..., kotlin/String = ..., kotlin/Boolean = ..., kotlin/String = ..., kotlin/Boolean = ..., kotlin.collections/List<pbandk.wkt/Option> = ..., pbandk.wkt/Syntax = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Method // pbandk.wkt/Method.copy|copy(kotlin.String;kotlin.String;kotlin.Boolean;kotlin.String;kotlin.Boolean;kotlin.collections.List<pbandk.wkt.Option>;pbandk.wkt.Syntax;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/Method // pbandk.wkt/Method.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/Method> { // pbandk.wkt/Method.Companion|null[0]
        final val defaultInstance // pbandk.wkt/Method.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/Method // pbandk.wkt/Method.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/Method.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Method> // pbandk.wkt/Method.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/Method.FieldDescriptors|null[0]
        final val name // pbandk.wkt/Method.FieldDescriptors.name|{}name[0]
            final fun <get-name>(): pbandk/FieldDescriptor<pbandk.wkt/Method, kotlin/String> // pbandk.wkt/Method.FieldDescriptors.name.<get-name>|<get-name>(){}[0]
        final val options // pbandk.wkt/Method.FieldDescriptors.options|{}options[0]
            final fun <get-options>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/Method, kotlin.collections/List<pbandk.wkt/Option>, kotlin.collections/MutableList<pbandk.wkt/Option>> // pbandk.wkt/Method.FieldDescriptors.options.<get-options>|<get-options>(){}[0]
        final val requestStreaming // pbandk.wkt/Method.FieldDescriptors.requestStreaming|{}requestStreaming[0]
            final fun <get-requestStreaming>(): pbandk/FieldDescriptor<pbandk.wkt/Method, kotlin/Boolean> // pbandk.wkt/Method.FieldDescriptors.requestStreaming.<get-requestStreaming>|<get-requestStreaming>(){}[0]
        final val requestTypeUrl // pbandk.wkt/Method.FieldDescriptors.requestTypeUrl|{}requestTypeUrl[0]
            final fun <get-requestTypeUrl>(): pbandk/FieldDescriptor<pbandk.wkt/Method, kotlin/String> // pbandk.wkt/Method.FieldDescriptors.requestTypeUrl.<get-requestTypeUrl>|<get-requestTypeUrl>(){}[0]
        final val responseStreaming // pbandk.wkt/Method.FieldDescriptors.responseStreaming|{}responseStreaming[0]
            final fun <get-responseStreaming>(): pbandk/FieldDescriptor<pbandk.wkt/Method, kotlin/Boolean> // pbandk.wkt/Method.FieldDescriptors.responseStreaming.<get-responseStreaming>|<get-responseStreaming>(){}[0]
        final val responseTypeUrl // pbandk.wkt/Method.FieldDescriptors.responseTypeUrl|{}responseTypeUrl[0]
            final fun <get-responseTypeUrl>(): pbandk/FieldDescriptor<pbandk.wkt/Method, kotlin/String> // pbandk.wkt/Method.FieldDescriptors.responseTypeUrl.<get-responseTypeUrl>|<get-responseTypeUrl>(){}[0]
        final val syntax // pbandk.wkt/Method.FieldDescriptors.syntax|{}syntax[0]
            final fun <get-syntax>(): pbandk/FieldDescriptor<pbandk.wkt/Method, pbandk.wkt/Syntax> // pbandk.wkt/Method.FieldDescriptors.syntax.<get-syntax>|<get-syntax>(){}[0]
    }
}

sealed interface pbandk.wkt/MethodDescriptorProto : pbandk/Message { // pbandk.wkt/MethodDescriptorProto|null[0]
    abstract val clientStreaming // pbandk.wkt/MethodDescriptorProto.clientStreaming|{}clientStreaming[0]
        abstract fun <get-clientStreaming>(): kotlin/Boolean? // pbandk.wkt/MethodDescriptorProto.clientStreaming.<get-clientStreaming>|<get-clientStreaming>(){}[0]
    abstract val descriptor // pbandk.wkt/MethodDescriptorProto.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/MethodDescriptorProto> // pbandk.wkt/MethodDescriptorProto.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val inputType // pbandk.wkt/MethodDescriptorProto.inputType|{}inputType[0]
        abstract fun <get-inputType>(): kotlin/String? // pbandk.wkt/MethodDescriptorProto.inputType.<get-inputType>|<get-inputType>(){}[0]
    abstract val name // pbandk.wkt/MethodDescriptorProto.name|{}name[0]
        abstract fun <get-name>(): kotlin/String? // pbandk.wkt/MethodDescriptorProto.name.<get-name>|<get-name>(){}[0]
    abstract val options // pbandk.wkt/MethodDescriptorProto.options|{}options[0]
        abstract fun <get-options>(): pbandk.wkt/MethodOptions? // pbandk.wkt/MethodDescriptorProto.options.<get-options>|<get-options>(){}[0]
    abstract val outputType // pbandk.wkt/MethodDescriptorProto.outputType|{}outputType[0]
        abstract fun <get-outputType>(): kotlin/String? // pbandk.wkt/MethodDescriptorProto.outputType.<get-outputType>|<get-outputType>(){}[0]
    abstract val serverStreaming // pbandk.wkt/MethodDescriptorProto.serverStreaming|{}serverStreaming[0]
        abstract fun <get-serverStreaming>(): kotlin/Boolean? // pbandk.wkt/MethodDescriptorProto.serverStreaming.<get-serverStreaming>|<get-serverStreaming>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableMethodDescriptorProto, kotlin/Unit>): pbandk.wkt/MethodDescriptorProto // pbandk.wkt/MethodDescriptorProto.copy|copy(kotlin.Function1<pbandk.wkt.MutableMethodDescriptorProto,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., pbandk.wkt/MethodOptions? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/MethodDescriptorProto // pbandk.wkt/MethodDescriptorProto.copy|copy(kotlin.String?;kotlin.String?;kotlin.String?;pbandk.wkt.MethodOptions?;kotlin.Boolean?;kotlin.Boolean?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/MethodDescriptorProto // pbandk.wkt/MethodDescriptorProto.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/MethodDescriptorProto> { // pbandk.wkt/MethodDescriptorProto.Companion|null[0]
        final val defaultInstance // pbandk.wkt/MethodDescriptorProto.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/MethodDescriptorProto // pbandk.wkt/MethodDescriptorProto.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/MethodDescriptorProto.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/MethodDescriptorProto> // pbandk.wkt/MethodDescriptorProto.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/MethodDescriptorProto.FieldDescriptors|null[0]
        final val clientStreaming // pbandk.wkt/MethodDescriptorProto.FieldDescriptors.clientStreaming|{}clientStreaming[0]
            final fun <get-clientStreaming>(): pbandk/FieldDescriptor<pbandk.wkt/MethodDescriptorProto, kotlin/Boolean?> // pbandk.wkt/MethodDescriptorProto.FieldDescriptors.clientStreaming.<get-clientStreaming>|<get-clientStreaming>(){}[0]
        final val inputType // pbandk.wkt/MethodDescriptorProto.FieldDescriptors.inputType|{}inputType[0]
            final fun <get-inputType>(): pbandk/FieldDescriptor<pbandk.wkt/MethodDescriptorProto, kotlin/String?> // pbandk.wkt/MethodDescriptorProto.FieldDescriptors.inputType.<get-inputType>|<get-inputType>(){}[0]
        final val name // pbandk.wkt/MethodDescriptorProto.FieldDescriptors.name|{}name[0]
            final fun <get-name>(): pbandk/FieldDescriptor<pbandk.wkt/MethodDescriptorProto, kotlin/String?> // pbandk.wkt/MethodDescriptorProto.FieldDescriptors.name.<get-name>|<get-name>(){}[0]
        final val options // pbandk.wkt/MethodDescriptorProto.FieldDescriptors.options|{}options[0]
            final fun <get-options>(): pbandk/FieldDescriptor<pbandk.wkt/MethodDescriptorProto, pbandk.wkt/MethodOptions?> // pbandk.wkt/MethodDescriptorProto.FieldDescriptors.options.<get-options>|<get-options>(){}[0]
        final val outputType // pbandk.wkt/MethodDescriptorProto.FieldDescriptors.outputType|{}outputType[0]
            final fun <get-outputType>(): pbandk/FieldDescriptor<pbandk.wkt/MethodDescriptorProto, kotlin/String?> // pbandk.wkt/MethodDescriptorProto.FieldDescriptors.outputType.<get-outputType>|<get-outputType>(){}[0]
        final val serverStreaming // pbandk.wkt/MethodDescriptorProto.FieldDescriptors.serverStreaming|{}serverStreaming[0]
            final fun <get-serverStreaming>(): pbandk/FieldDescriptor<pbandk.wkt/MethodDescriptorProto, kotlin/Boolean?> // pbandk.wkt/MethodDescriptorProto.FieldDescriptors.serverStreaming.<get-serverStreaming>|<get-serverStreaming>(){}[0]
    }
}

sealed interface pbandk.wkt/MethodOptions : pbandk/ExtendableMessage<pbandk.wkt/MethodOptions> { // pbandk.wkt/MethodOptions|null[0]
    abstract val deprecated // pbandk.wkt/MethodOptions.deprecated|{}deprecated[0]
        abstract fun <get-deprecated>(): kotlin/Boolean? // pbandk.wkt/MethodOptions.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
    abstract val descriptor // pbandk.wkt/MethodOptions.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/MethodOptions> // pbandk.wkt/MethodOptions.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val features // pbandk.wkt/MethodOptions.features|{}features[0]
        abstract fun <get-features>(): pbandk.wkt/FeatureSet? // pbandk.wkt/MethodOptions.features.<get-features>|<get-features>(){}[0]
    abstract val idempotencyLevel // pbandk.wkt/MethodOptions.idempotencyLevel|{}idempotencyLevel[0]
        abstract fun <get-idempotencyLevel>(): pbandk.wkt/MethodOptions.IdempotencyLevel? // pbandk.wkt/MethodOptions.idempotencyLevel.<get-idempotencyLevel>|<get-idempotencyLevel>(){}[0]
    abstract val uninterpretedOption // pbandk.wkt/MethodOptions.uninterpretedOption|{}uninterpretedOption[0]
        abstract fun <get-uninterpretedOption>(): kotlin.collections/List<pbandk.wkt/UninterpretedOption> // pbandk.wkt/MethodOptions.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]

    abstract fun copy(kotlin/Boolean? = ..., pbandk.wkt/MethodOptions.IdempotencyLevel? = ..., pbandk.wkt/FeatureSet? = ..., kotlin.collections/List<pbandk.wkt/UninterpretedOption> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/MethodOptions // pbandk.wkt/MethodOptions.copy|copy(kotlin.Boolean?;pbandk.wkt.MethodOptions.IdempotencyLevel?;pbandk.wkt.FeatureSet?;kotlin.collections.List<pbandk.wkt.UninterpretedOption>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableMethodOptions, kotlin/Unit>): pbandk.wkt/MethodOptions // pbandk.wkt/MethodOptions.copy|copy(kotlin.Function1<pbandk.wkt.MutableMethodOptions,kotlin.Unit>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/MethodOptions // pbandk.wkt/MethodOptions.plus|plus(pbandk.Message?){}[0]

    sealed interface IdempotencyLevel : pbandk/Message.Enum { // pbandk.wkt/MethodOptions.IdempotencyLevel|null[0]
        open val descriptor // pbandk.wkt/MethodOptions.IdempotencyLevel.descriptor|{}descriptor[0]
            open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/MethodOptions.IdempotencyLevel> // pbandk.wkt/MethodOptions.IdempotencyLevel.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/MethodOptions.IdempotencyLevel>, pbandk.wkt/MethodOptions.IdempotencyLevel { // pbandk.wkt/MethodOptions.IdempotencyLevel.UNRECOGNIZED|null[0]
            constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/MethodOptions.IdempotencyLevel.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
        }

        final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/MethodOptions.IdempotencyLevel> { // pbandk.wkt/MethodOptions.IdempotencyLevel.Companion|null[0]
            final val descriptor // pbandk.wkt/MethodOptions.IdempotencyLevel.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/MethodOptions.IdempotencyLevel> // pbandk.wkt/MethodOptions.IdempotencyLevel.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
            final val values // pbandk.wkt/MethodOptions.IdempotencyLevel.Companion.values|{}values[0]
                final fun <get-values>(): kotlin.collections/List<pbandk.wkt/MethodOptions.IdempotencyLevel> // pbandk.wkt/MethodOptions.IdempotencyLevel.Companion.values.<get-values>|<get-values>(){}[0]

            final fun fromName(kotlin/String): pbandk.wkt/MethodOptions.IdempotencyLevel // pbandk.wkt/MethodOptions.IdempotencyLevel.Companion.fromName|fromName(kotlin.String){}[0]
            final fun fromValue(kotlin/Int): pbandk.wkt/MethodOptions.IdempotencyLevel // pbandk.wkt/MethodOptions.IdempotencyLevel.Companion.fromValue|fromValue(kotlin.Int){}[0]
        }

        final object IDEMPOTENCY_UNKNOWN : pbandk.gen/GeneratedEnumValue<pbandk.wkt/MethodOptions.IdempotencyLevel>, pbandk.wkt/MethodOptions.IdempotencyLevel // pbandk.wkt/MethodOptions.IdempotencyLevel.IDEMPOTENCY_UNKNOWN|null[0]

        final object IDEMPOTENT : pbandk.gen/GeneratedEnumValue<pbandk.wkt/MethodOptions.IdempotencyLevel>, pbandk.wkt/MethodOptions.IdempotencyLevel // pbandk.wkt/MethodOptions.IdempotencyLevel.IDEMPOTENT|null[0]

        final object NO_SIDE_EFFECTS : pbandk.gen/GeneratedEnumValue<pbandk.wkt/MethodOptions.IdempotencyLevel>, pbandk.wkt/MethodOptions.IdempotencyLevel // pbandk.wkt/MethodOptions.IdempotencyLevel.NO_SIDE_EFFECTS|null[0]
    }

    final object Companion : pbandk/Message.Companion<pbandk.wkt/MethodOptions> { // pbandk.wkt/MethodOptions.Companion|null[0]
        final val defaultInstance // pbandk.wkt/MethodOptions.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/MethodOptions // pbandk.wkt/MethodOptions.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/MethodOptions.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/MethodOptions> // pbandk.wkt/MethodOptions.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/MethodOptions.FieldDescriptors|null[0]
        final val deprecated // pbandk.wkt/MethodOptions.FieldDescriptors.deprecated|{}deprecated[0]
            final fun <get-deprecated>(): pbandk/FieldDescriptor<pbandk.wkt/MethodOptions, kotlin/Boolean?> // pbandk.wkt/MethodOptions.FieldDescriptors.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
        final val features // pbandk.wkt/MethodOptions.FieldDescriptors.features|{}features[0]
            final fun <get-features>(): pbandk/FieldDescriptor<pbandk.wkt/MethodOptions, pbandk.wkt/FeatureSet?> // pbandk.wkt/MethodOptions.FieldDescriptors.features.<get-features>|<get-features>(){}[0]
        final val idempotencyLevel // pbandk.wkt/MethodOptions.FieldDescriptors.idempotencyLevel|{}idempotencyLevel[0]
            final fun <get-idempotencyLevel>(): pbandk/FieldDescriptor<pbandk.wkt/MethodOptions, pbandk.wkt/MethodOptions.IdempotencyLevel?> // pbandk.wkt/MethodOptions.FieldDescriptors.idempotencyLevel.<get-idempotencyLevel>|<get-idempotencyLevel>(){}[0]
        final val uninterpretedOption // pbandk.wkt/MethodOptions.FieldDescriptors.uninterpretedOption|{}uninterpretedOption[0]
            final fun <get-uninterpretedOption>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/MethodOptions, kotlin.collections/List<pbandk.wkt/UninterpretedOption>, kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption>> // pbandk.wkt/MethodOptions.FieldDescriptors.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]
    }
}

sealed interface pbandk.wkt/Mixin : pbandk/Message { // pbandk.wkt/Mixin|null[0]
    abstract val descriptor // pbandk.wkt/Mixin.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Mixin> // pbandk.wkt/Mixin.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val name // pbandk.wkt/Mixin.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // pbandk.wkt/Mixin.name.<get-name>|<get-name>(){}[0]
    abstract val root // pbandk.wkt/Mixin.root|{}root[0]
        abstract fun <get-root>(): kotlin/String // pbandk.wkt/Mixin.root.<get-root>|<get-root>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableMixin, kotlin/Unit>): pbandk.wkt/Mixin // pbandk.wkt/Mixin.copy|copy(kotlin.Function1<pbandk.wkt.MutableMixin,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/String = ..., kotlin/String = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Mixin // pbandk.wkt/Mixin.copy|copy(kotlin.String;kotlin.String;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/Mixin // pbandk.wkt/Mixin.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/Mixin> { // pbandk.wkt/Mixin.Companion|null[0]
        final val defaultInstance // pbandk.wkt/Mixin.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/Mixin // pbandk.wkt/Mixin.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/Mixin.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Mixin> // pbandk.wkt/Mixin.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/Mixin.FieldDescriptors|null[0]
        final val name // pbandk.wkt/Mixin.FieldDescriptors.name|{}name[0]
            final fun <get-name>(): pbandk/FieldDescriptor<pbandk.wkt/Mixin, kotlin/String> // pbandk.wkt/Mixin.FieldDescriptors.name.<get-name>|<get-name>(){}[0]
        final val root // pbandk.wkt/Mixin.FieldDescriptors.root|{}root[0]
            final fun <get-root>(): pbandk/FieldDescriptor<pbandk.wkt/Mixin, kotlin/String> // pbandk.wkt/Mixin.FieldDescriptors.root.<get-root>|<get-root>(){}[0]
    }
}

sealed interface pbandk.wkt/MutableAny : pbandk.wkt/Any, pbandk/MutableMessage<pbandk.wkt/Any> { // pbandk.wkt/MutableAny|null[0]
    abstract var typeUrl // pbandk.wkt/MutableAny.typeUrl|{}typeUrl[0]
        abstract fun <get-typeUrl>(): kotlin/String // pbandk.wkt/MutableAny.typeUrl.<get-typeUrl>|<get-typeUrl>(){}[0]
        abstract fun <set-typeUrl>(kotlin/String) // pbandk.wkt/MutableAny.typeUrl.<set-typeUrl>|<set-typeUrl>(kotlin.String){}[0]
    abstract var value // pbandk.wkt/MutableAny.value|{}value[0]
        abstract fun <get-value>(): pbandk/ByteArr // pbandk.wkt/MutableAny.value.<get-value>|<get-value>(){}[0]
        abstract fun <set-value>(pbandk/ByteArr) // pbandk.wkt/MutableAny.value.<set-value>|<set-value>(pbandk.ByteArr){}[0]
}

sealed interface pbandk.wkt/MutableApi : pbandk.wkt/Api, pbandk/MutableMessage<pbandk.wkt/Api> { // pbandk.wkt/MutableApi|null[0]
    abstract val methods // pbandk.wkt/MutableApi.methods|{}methods[0]
        abstract fun <get-methods>(): kotlin.collections/MutableList<pbandk.wkt/Method> // pbandk.wkt/MutableApi.methods.<get-methods>|<get-methods>(){}[0]
    abstract val mixins // pbandk.wkt/MutableApi.mixins|{}mixins[0]
        abstract fun <get-mixins>(): kotlin.collections/MutableList<pbandk.wkt/Mixin> // pbandk.wkt/MutableApi.mixins.<get-mixins>|<get-mixins>(){}[0]
    abstract val options // pbandk.wkt/MutableApi.options|{}options[0]
        abstract fun <get-options>(): kotlin.collections/MutableList<pbandk.wkt/Option> // pbandk.wkt/MutableApi.options.<get-options>|<get-options>(){}[0]

    abstract var name // pbandk.wkt/MutableApi.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // pbandk.wkt/MutableApi.name.<get-name>|<get-name>(){}[0]
        abstract fun <set-name>(kotlin/String) // pbandk.wkt/MutableApi.name.<set-name>|<set-name>(kotlin.String){}[0]
    abstract var sourceContext // pbandk.wkt/MutableApi.sourceContext|{}sourceContext[0]
        abstract fun <get-sourceContext>(): pbandk.wkt/SourceContext? // pbandk.wkt/MutableApi.sourceContext.<get-sourceContext>|<get-sourceContext>(){}[0]
        abstract fun <set-sourceContext>(pbandk.wkt/SourceContext?) // pbandk.wkt/MutableApi.sourceContext.<set-sourceContext>|<set-sourceContext>(pbandk.wkt.SourceContext?){}[0]
    abstract var syntax // pbandk.wkt/MutableApi.syntax|{}syntax[0]
        abstract fun <get-syntax>(): pbandk.wkt/Syntax // pbandk.wkt/MutableApi.syntax.<get-syntax>|<get-syntax>(){}[0]
        abstract fun <set-syntax>(pbandk.wkt/Syntax) // pbandk.wkt/MutableApi.syntax.<set-syntax>|<set-syntax>(pbandk.wkt.Syntax){}[0]
    abstract var version // pbandk.wkt/MutableApi.version|{}version[0]
        abstract fun <get-version>(): kotlin/String // pbandk.wkt/MutableApi.version.<get-version>|<get-version>(){}[0]
        abstract fun <set-version>(kotlin/String) // pbandk.wkt/MutableApi.version.<set-version>|<set-version>(kotlin.String){}[0]
}

sealed interface pbandk.wkt/MutableBoolValue : pbandk.wkt/BoolValue, pbandk/MutableMessage<pbandk.wkt/BoolValue> { // pbandk.wkt/MutableBoolValue|null[0]
    abstract var value // pbandk.wkt/MutableBoolValue.value|{}value[0]
        abstract fun <get-value>(): kotlin/Boolean // pbandk.wkt/MutableBoolValue.value.<get-value>|<get-value>(){}[0]
        abstract fun <set-value>(kotlin/Boolean) // pbandk.wkt/MutableBoolValue.value.<set-value>|<set-value>(kotlin.Boolean){}[0]
}

sealed interface pbandk.wkt/MutableBytesValue : pbandk.wkt/BytesValue, pbandk/MutableMessage<pbandk.wkt/BytesValue> { // pbandk.wkt/MutableBytesValue|null[0]
    abstract var value // pbandk.wkt/MutableBytesValue.value|{}value[0]
        abstract fun <get-value>(): pbandk/ByteArr // pbandk.wkt/MutableBytesValue.value.<get-value>|<get-value>(){}[0]
        abstract fun <set-value>(pbandk/ByteArr) // pbandk.wkt/MutableBytesValue.value.<set-value>|<set-value>(pbandk.ByteArr){}[0]
}

sealed interface pbandk.wkt/MutableDescriptorProto : pbandk.wkt/DescriptorProto, pbandk/MutableMessage<pbandk.wkt/DescriptorProto> { // pbandk.wkt/MutableDescriptorProto|null[0]
    abstract val enumType // pbandk.wkt/MutableDescriptorProto.enumType|{}enumType[0]
        abstract fun <get-enumType>(): kotlin.collections/MutableList<pbandk.wkt/EnumDescriptorProto> // pbandk.wkt/MutableDescriptorProto.enumType.<get-enumType>|<get-enumType>(){}[0]
    abstract val extension // pbandk.wkt/MutableDescriptorProto.extension|{}extension[0]
        abstract fun <get-extension>(): kotlin.collections/MutableList<pbandk.wkt/FieldDescriptorProto> // pbandk.wkt/MutableDescriptorProto.extension.<get-extension>|<get-extension>(){}[0]
    abstract val extensionRange // pbandk.wkt/MutableDescriptorProto.extensionRange|{}extensionRange[0]
        abstract fun <get-extensionRange>(): kotlin.collections/MutableList<pbandk.wkt/DescriptorProto.ExtensionRange> // pbandk.wkt/MutableDescriptorProto.extensionRange.<get-extensionRange>|<get-extensionRange>(){}[0]
    abstract val field // pbandk.wkt/MutableDescriptorProto.field|{}field[0]
        abstract fun <get-field>(): kotlin.collections/MutableList<pbandk.wkt/FieldDescriptorProto> // pbandk.wkt/MutableDescriptorProto.field.<get-field>|<get-field>(){}[0]
    abstract val nestedType // pbandk.wkt/MutableDescriptorProto.nestedType|{}nestedType[0]
        abstract fun <get-nestedType>(): kotlin.collections/MutableList<pbandk.wkt/DescriptorProto> // pbandk.wkt/MutableDescriptorProto.nestedType.<get-nestedType>|<get-nestedType>(){}[0]
    abstract val oneofDecl // pbandk.wkt/MutableDescriptorProto.oneofDecl|{}oneofDecl[0]
        abstract fun <get-oneofDecl>(): kotlin.collections/MutableList<pbandk.wkt/OneofDescriptorProto> // pbandk.wkt/MutableDescriptorProto.oneofDecl.<get-oneofDecl>|<get-oneofDecl>(){}[0]
    abstract val reservedName // pbandk.wkt/MutableDescriptorProto.reservedName|{}reservedName[0]
        abstract fun <get-reservedName>(): kotlin.collections/MutableList<kotlin/String> // pbandk.wkt/MutableDescriptorProto.reservedName.<get-reservedName>|<get-reservedName>(){}[0]
    abstract val reservedRange // pbandk.wkt/MutableDescriptorProto.reservedRange|{}reservedRange[0]
        abstract fun <get-reservedRange>(): kotlin.collections/MutableList<pbandk.wkt/DescriptorProto.ReservedRange> // pbandk.wkt/MutableDescriptorProto.reservedRange.<get-reservedRange>|<get-reservedRange>(){}[0]

    abstract var name // pbandk.wkt/MutableDescriptorProto.name|{}name[0]
        abstract fun <get-name>(): kotlin/String? // pbandk.wkt/MutableDescriptorProto.name.<get-name>|<get-name>(){}[0]
        abstract fun <set-name>(kotlin/String?) // pbandk.wkt/MutableDescriptorProto.name.<set-name>|<set-name>(kotlin.String?){}[0]
    abstract var options // pbandk.wkt/MutableDescriptorProto.options|{}options[0]
        abstract fun <get-options>(): pbandk.wkt/MessageOptions? // pbandk.wkt/MutableDescriptorProto.options.<get-options>|<get-options>(){}[0]
        abstract fun <set-options>(pbandk.wkt/MessageOptions?) // pbandk.wkt/MutableDescriptorProto.options.<set-options>|<set-options>(pbandk.wkt.MessageOptions?){}[0]
}

sealed interface pbandk.wkt/MutableDoubleValue : pbandk.wkt/DoubleValue, pbandk/MutableMessage<pbandk.wkt/DoubleValue> { // pbandk.wkt/MutableDoubleValue|null[0]
    abstract var value // pbandk.wkt/MutableDoubleValue.value|{}value[0]
        abstract fun <get-value>(): kotlin/Double // pbandk.wkt/MutableDoubleValue.value.<get-value>|<get-value>(){}[0]
        abstract fun <set-value>(kotlin/Double) // pbandk.wkt/MutableDoubleValue.value.<set-value>|<set-value>(kotlin.Double){}[0]
}

sealed interface pbandk.wkt/MutableDuration : pbandk.wkt/Duration, pbandk/MutableMessage<pbandk.wkt/Duration> { // pbandk.wkt/MutableDuration|null[0]
    abstract var nanos // pbandk.wkt/MutableDuration.nanos|{}nanos[0]
        abstract fun <get-nanos>(): kotlin/Int // pbandk.wkt/MutableDuration.nanos.<get-nanos>|<get-nanos>(){}[0]
        abstract fun <set-nanos>(kotlin/Int) // pbandk.wkt/MutableDuration.nanos.<set-nanos>|<set-nanos>(kotlin.Int){}[0]
    abstract var seconds // pbandk.wkt/MutableDuration.seconds|{}seconds[0]
        abstract fun <get-seconds>(): kotlin/Long // pbandk.wkt/MutableDuration.seconds.<get-seconds>|<get-seconds>(){}[0]
        abstract fun <set-seconds>(kotlin/Long) // pbandk.wkt/MutableDuration.seconds.<set-seconds>|<set-seconds>(kotlin.Long){}[0]
}

sealed interface pbandk.wkt/MutableEmpty : pbandk.wkt/Empty, pbandk/MutableMessage<pbandk.wkt/Empty> // pbandk.wkt/MutableEmpty|null[0]

sealed interface pbandk.wkt/MutableEnum : pbandk.wkt/Enum, pbandk/MutableMessage<pbandk.wkt/Enum> { // pbandk.wkt/MutableEnum|null[0]
    abstract val enumvalue // pbandk.wkt/MutableEnum.enumvalue|{}enumvalue[0]
        abstract fun <get-enumvalue>(): kotlin.collections/MutableList<pbandk.wkt/EnumValue> // pbandk.wkt/MutableEnum.enumvalue.<get-enumvalue>|<get-enumvalue>(){}[0]
    abstract val options // pbandk.wkt/MutableEnum.options|{}options[0]
        abstract fun <get-options>(): kotlin.collections/MutableList<pbandk.wkt/Option> // pbandk.wkt/MutableEnum.options.<get-options>|<get-options>(){}[0]

    abstract var edition // pbandk.wkt/MutableEnum.edition|{}edition[0]
        abstract fun <get-edition>(): kotlin/String // pbandk.wkt/MutableEnum.edition.<get-edition>|<get-edition>(){}[0]
        abstract fun <set-edition>(kotlin/String) // pbandk.wkt/MutableEnum.edition.<set-edition>|<set-edition>(kotlin.String){}[0]
    abstract var name // pbandk.wkt/MutableEnum.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // pbandk.wkt/MutableEnum.name.<get-name>|<get-name>(){}[0]
        abstract fun <set-name>(kotlin/String) // pbandk.wkt/MutableEnum.name.<set-name>|<set-name>(kotlin.String){}[0]
    abstract var sourceContext // pbandk.wkt/MutableEnum.sourceContext|{}sourceContext[0]
        abstract fun <get-sourceContext>(): pbandk.wkt/SourceContext? // pbandk.wkt/MutableEnum.sourceContext.<get-sourceContext>|<get-sourceContext>(){}[0]
        abstract fun <set-sourceContext>(pbandk.wkt/SourceContext?) // pbandk.wkt/MutableEnum.sourceContext.<set-sourceContext>|<set-sourceContext>(pbandk.wkt.SourceContext?){}[0]
    abstract var syntax // pbandk.wkt/MutableEnum.syntax|{}syntax[0]
        abstract fun <get-syntax>(): pbandk.wkt/Syntax // pbandk.wkt/MutableEnum.syntax.<get-syntax>|<get-syntax>(){}[0]
        abstract fun <set-syntax>(pbandk.wkt/Syntax) // pbandk.wkt/MutableEnum.syntax.<set-syntax>|<set-syntax>(pbandk.wkt.Syntax){}[0]
}

sealed interface pbandk.wkt/MutableEnumDescriptorProto : pbandk.wkt/EnumDescriptorProto, pbandk/MutableMessage<pbandk.wkt/EnumDescriptorProto> { // pbandk.wkt/MutableEnumDescriptorProto|null[0]
    abstract val reservedName // pbandk.wkt/MutableEnumDescriptorProto.reservedName|{}reservedName[0]
        abstract fun <get-reservedName>(): kotlin.collections/MutableList<kotlin/String> // pbandk.wkt/MutableEnumDescriptorProto.reservedName.<get-reservedName>|<get-reservedName>(){}[0]
    abstract val reservedRange // pbandk.wkt/MutableEnumDescriptorProto.reservedRange|{}reservedRange[0]
        abstract fun <get-reservedRange>(): kotlin.collections/MutableList<pbandk.wkt/EnumDescriptorProto.EnumReservedRange> // pbandk.wkt/MutableEnumDescriptorProto.reservedRange.<get-reservedRange>|<get-reservedRange>(){}[0]
    abstract val value // pbandk.wkt/MutableEnumDescriptorProto.value|{}value[0]
        abstract fun <get-value>(): kotlin.collections/MutableList<pbandk.wkt/EnumValueDescriptorProto> // pbandk.wkt/MutableEnumDescriptorProto.value.<get-value>|<get-value>(){}[0]

    abstract var name // pbandk.wkt/MutableEnumDescriptorProto.name|{}name[0]
        abstract fun <get-name>(): kotlin/String? // pbandk.wkt/MutableEnumDescriptorProto.name.<get-name>|<get-name>(){}[0]
        abstract fun <set-name>(kotlin/String?) // pbandk.wkt/MutableEnumDescriptorProto.name.<set-name>|<set-name>(kotlin.String?){}[0]
    abstract var options // pbandk.wkt/MutableEnumDescriptorProto.options|{}options[0]
        abstract fun <get-options>(): pbandk.wkt/EnumOptions? // pbandk.wkt/MutableEnumDescriptorProto.options.<get-options>|<get-options>(){}[0]
        abstract fun <set-options>(pbandk.wkt/EnumOptions?) // pbandk.wkt/MutableEnumDescriptorProto.options.<set-options>|<set-options>(pbandk.wkt.EnumOptions?){}[0]
}

sealed interface pbandk.wkt/MutableEnumOptions : pbandk.wkt/EnumOptions, pbandk/MutableExtendableMessage<pbandk.wkt/EnumOptions> { // pbandk.wkt/MutableEnumOptions|null[0]
    abstract val uninterpretedOption // pbandk.wkt/MutableEnumOptions.uninterpretedOption|{}uninterpretedOption[0]
        abstract fun <get-uninterpretedOption>(): kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption> // pbandk.wkt/MutableEnumOptions.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]

    abstract var allowAlias // pbandk.wkt/MutableEnumOptions.allowAlias|{}allowAlias[0]
        abstract fun <get-allowAlias>(): kotlin/Boolean? // pbandk.wkt/MutableEnumOptions.allowAlias.<get-allowAlias>|<get-allowAlias>(){}[0]
        abstract fun <set-allowAlias>(kotlin/Boolean?) // pbandk.wkt/MutableEnumOptions.allowAlias.<set-allowAlias>|<set-allowAlias>(kotlin.Boolean?){}[0]
    abstract var deprecated // pbandk.wkt/MutableEnumOptions.deprecated|{}deprecated[0]
        abstract fun <get-deprecated>(): kotlin/Boolean? // pbandk.wkt/MutableEnumOptions.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
        abstract fun <set-deprecated>(kotlin/Boolean?) // pbandk.wkt/MutableEnumOptions.deprecated.<set-deprecated>|<set-deprecated>(kotlin.Boolean?){}[0]
    abstract var deprecatedLegacyJsonFieldConflicts // pbandk.wkt/MutableEnumOptions.deprecatedLegacyJsonFieldConflicts|{}deprecatedLegacyJsonFieldConflicts[0]
        abstract fun <get-deprecatedLegacyJsonFieldConflicts>(): kotlin/Boolean? // pbandk.wkt/MutableEnumOptions.deprecatedLegacyJsonFieldConflicts.<get-deprecatedLegacyJsonFieldConflicts>|<get-deprecatedLegacyJsonFieldConflicts>(){}[0]
        abstract fun <set-deprecatedLegacyJsonFieldConflicts>(kotlin/Boolean?) // pbandk.wkt/MutableEnumOptions.deprecatedLegacyJsonFieldConflicts.<set-deprecatedLegacyJsonFieldConflicts>|<set-deprecatedLegacyJsonFieldConflicts>(kotlin.Boolean?){}[0]
    abstract var features // pbandk.wkt/MutableEnumOptions.features|{}features[0]
        abstract fun <get-features>(): pbandk.wkt/FeatureSet? // pbandk.wkt/MutableEnumOptions.features.<get-features>|<get-features>(){}[0]
        abstract fun <set-features>(pbandk.wkt/FeatureSet?) // pbandk.wkt/MutableEnumOptions.features.<set-features>|<set-features>(pbandk.wkt.FeatureSet?){}[0]
}

sealed interface pbandk.wkt/MutableEnumValue : pbandk.wkt/EnumValue, pbandk/MutableMessage<pbandk.wkt/EnumValue> { // pbandk.wkt/MutableEnumValue|null[0]
    abstract val options // pbandk.wkt/MutableEnumValue.options|{}options[0]
        abstract fun <get-options>(): kotlin.collections/MutableList<pbandk.wkt/Option> // pbandk.wkt/MutableEnumValue.options.<get-options>|<get-options>(){}[0]

    abstract var name // pbandk.wkt/MutableEnumValue.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // pbandk.wkt/MutableEnumValue.name.<get-name>|<get-name>(){}[0]
        abstract fun <set-name>(kotlin/String) // pbandk.wkt/MutableEnumValue.name.<set-name>|<set-name>(kotlin.String){}[0]
    abstract var number // pbandk.wkt/MutableEnumValue.number|{}number[0]
        abstract fun <get-number>(): kotlin/Int // pbandk.wkt/MutableEnumValue.number.<get-number>|<get-number>(){}[0]
        abstract fun <set-number>(kotlin/Int) // pbandk.wkt/MutableEnumValue.number.<set-number>|<set-number>(kotlin.Int){}[0]
}

sealed interface pbandk.wkt/MutableEnumValueDescriptorProto : pbandk.wkt/EnumValueDescriptorProto, pbandk/MutableMessage<pbandk.wkt/EnumValueDescriptorProto> { // pbandk.wkt/MutableEnumValueDescriptorProto|null[0]
    abstract var name // pbandk.wkt/MutableEnumValueDescriptorProto.name|{}name[0]
        abstract fun <get-name>(): kotlin/String? // pbandk.wkt/MutableEnumValueDescriptorProto.name.<get-name>|<get-name>(){}[0]
        abstract fun <set-name>(kotlin/String?) // pbandk.wkt/MutableEnumValueDescriptorProto.name.<set-name>|<set-name>(kotlin.String?){}[0]
    abstract var number // pbandk.wkt/MutableEnumValueDescriptorProto.number|{}number[0]
        abstract fun <get-number>(): kotlin/Int? // pbandk.wkt/MutableEnumValueDescriptorProto.number.<get-number>|<get-number>(){}[0]
        abstract fun <set-number>(kotlin/Int?) // pbandk.wkt/MutableEnumValueDescriptorProto.number.<set-number>|<set-number>(kotlin.Int?){}[0]
    abstract var options // pbandk.wkt/MutableEnumValueDescriptorProto.options|{}options[0]
        abstract fun <get-options>(): pbandk.wkt/EnumValueOptions? // pbandk.wkt/MutableEnumValueDescriptorProto.options.<get-options>|<get-options>(){}[0]
        abstract fun <set-options>(pbandk.wkt/EnumValueOptions?) // pbandk.wkt/MutableEnumValueDescriptorProto.options.<set-options>|<set-options>(pbandk.wkt.EnumValueOptions?){}[0]
}

sealed interface pbandk.wkt/MutableEnumValueOptions : pbandk.wkt/EnumValueOptions, pbandk/MutableExtendableMessage<pbandk.wkt/EnumValueOptions> { // pbandk.wkt/MutableEnumValueOptions|null[0]
    abstract val uninterpretedOption // pbandk.wkt/MutableEnumValueOptions.uninterpretedOption|{}uninterpretedOption[0]
        abstract fun <get-uninterpretedOption>(): kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption> // pbandk.wkt/MutableEnumValueOptions.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]

    abstract var debugRedact // pbandk.wkt/MutableEnumValueOptions.debugRedact|{}debugRedact[0]
        abstract fun <get-debugRedact>(): kotlin/Boolean? // pbandk.wkt/MutableEnumValueOptions.debugRedact.<get-debugRedact>|<get-debugRedact>(){}[0]
        abstract fun <set-debugRedact>(kotlin/Boolean?) // pbandk.wkt/MutableEnumValueOptions.debugRedact.<set-debugRedact>|<set-debugRedact>(kotlin.Boolean?){}[0]
    abstract var deprecated // pbandk.wkt/MutableEnumValueOptions.deprecated|{}deprecated[0]
        abstract fun <get-deprecated>(): kotlin/Boolean? // pbandk.wkt/MutableEnumValueOptions.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
        abstract fun <set-deprecated>(kotlin/Boolean?) // pbandk.wkt/MutableEnumValueOptions.deprecated.<set-deprecated>|<set-deprecated>(kotlin.Boolean?){}[0]
    abstract var featureSupport // pbandk.wkt/MutableEnumValueOptions.featureSupport|{}featureSupport[0]
        abstract fun <get-featureSupport>(): pbandk.wkt/FieldOptions.FeatureSupport? // pbandk.wkt/MutableEnumValueOptions.featureSupport.<get-featureSupport>|<get-featureSupport>(){}[0]
        abstract fun <set-featureSupport>(pbandk.wkt/FieldOptions.FeatureSupport?) // pbandk.wkt/MutableEnumValueOptions.featureSupport.<set-featureSupport>|<set-featureSupport>(pbandk.wkt.FieldOptions.FeatureSupport?){}[0]
    abstract var features // pbandk.wkt/MutableEnumValueOptions.features|{}features[0]
        abstract fun <get-features>(): pbandk.wkt/FeatureSet? // pbandk.wkt/MutableEnumValueOptions.features.<get-features>|<get-features>(){}[0]
        abstract fun <set-features>(pbandk.wkt/FeatureSet?) // pbandk.wkt/MutableEnumValueOptions.features.<set-features>|<set-features>(pbandk.wkt.FeatureSet?){}[0]
}

sealed interface pbandk.wkt/MutableExtensionRangeOptions : pbandk.wkt/ExtensionRangeOptions, pbandk/MutableExtendableMessage<pbandk.wkt/ExtensionRangeOptions> { // pbandk.wkt/MutableExtensionRangeOptions|null[0]
    abstract val declaration // pbandk.wkt/MutableExtensionRangeOptions.declaration|{}declaration[0]
        abstract fun <get-declaration>(): kotlin.collections/MutableList<pbandk.wkt/ExtensionRangeOptions.Declaration> // pbandk.wkt/MutableExtensionRangeOptions.declaration.<get-declaration>|<get-declaration>(){}[0]
    abstract val uninterpretedOption // pbandk.wkt/MutableExtensionRangeOptions.uninterpretedOption|{}uninterpretedOption[0]
        abstract fun <get-uninterpretedOption>(): kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption> // pbandk.wkt/MutableExtensionRangeOptions.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]

    abstract var features // pbandk.wkt/MutableExtensionRangeOptions.features|{}features[0]
        abstract fun <get-features>(): pbandk.wkt/FeatureSet? // pbandk.wkt/MutableExtensionRangeOptions.features.<get-features>|<get-features>(){}[0]
        abstract fun <set-features>(pbandk.wkt/FeatureSet?) // pbandk.wkt/MutableExtensionRangeOptions.features.<set-features>|<set-features>(pbandk.wkt.FeatureSet?){}[0]
    abstract var verification // pbandk.wkt/MutableExtensionRangeOptions.verification|{}verification[0]
        abstract fun <get-verification>(): pbandk.wkt/ExtensionRangeOptions.VerificationState? // pbandk.wkt/MutableExtensionRangeOptions.verification.<get-verification>|<get-verification>(){}[0]
        abstract fun <set-verification>(pbandk.wkt/ExtensionRangeOptions.VerificationState?) // pbandk.wkt/MutableExtensionRangeOptions.verification.<set-verification>|<set-verification>(pbandk.wkt.ExtensionRangeOptions.VerificationState?){}[0]
}

sealed interface pbandk.wkt/MutableFeatureSet : pbandk.wkt/FeatureSet, pbandk/MutableExtendableMessage<pbandk.wkt/FeatureSet> { // pbandk.wkt/MutableFeatureSet|null[0]
    abstract var enumType // pbandk.wkt/MutableFeatureSet.enumType|{}enumType[0]
        abstract fun <get-enumType>(): pbandk.wkt/FeatureSet.EnumType? // pbandk.wkt/MutableFeatureSet.enumType.<get-enumType>|<get-enumType>(){}[0]
        abstract fun <set-enumType>(pbandk.wkt/FeatureSet.EnumType?) // pbandk.wkt/MutableFeatureSet.enumType.<set-enumType>|<set-enumType>(pbandk.wkt.FeatureSet.EnumType?){}[0]
    abstract var fieldPresence // pbandk.wkt/MutableFeatureSet.fieldPresence|{}fieldPresence[0]
        abstract fun <get-fieldPresence>(): pbandk.wkt/FeatureSet.FieldPresence? // pbandk.wkt/MutableFeatureSet.fieldPresence.<get-fieldPresence>|<get-fieldPresence>(){}[0]
        abstract fun <set-fieldPresence>(pbandk.wkt/FeatureSet.FieldPresence?) // pbandk.wkt/MutableFeatureSet.fieldPresence.<set-fieldPresence>|<set-fieldPresence>(pbandk.wkt.FeatureSet.FieldPresence?){}[0]
    abstract var jsonFormat // pbandk.wkt/MutableFeatureSet.jsonFormat|{}jsonFormat[0]
        abstract fun <get-jsonFormat>(): pbandk.wkt/FeatureSet.JsonFormat? // pbandk.wkt/MutableFeatureSet.jsonFormat.<get-jsonFormat>|<get-jsonFormat>(){}[0]
        abstract fun <set-jsonFormat>(pbandk.wkt/FeatureSet.JsonFormat?) // pbandk.wkt/MutableFeatureSet.jsonFormat.<set-jsonFormat>|<set-jsonFormat>(pbandk.wkt.FeatureSet.JsonFormat?){}[0]
    abstract var messageEncoding // pbandk.wkt/MutableFeatureSet.messageEncoding|{}messageEncoding[0]
        abstract fun <get-messageEncoding>(): pbandk.wkt/FeatureSet.MessageEncoding? // pbandk.wkt/MutableFeatureSet.messageEncoding.<get-messageEncoding>|<get-messageEncoding>(){}[0]
        abstract fun <set-messageEncoding>(pbandk.wkt/FeatureSet.MessageEncoding?) // pbandk.wkt/MutableFeatureSet.messageEncoding.<set-messageEncoding>|<set-messageEncoding>(pbandk.wkt.FeatureSet.MessageEncoding?){}[0]
    abstract var repeatedFieldEncoding // pbandk.wkt/MutableFeatureSet.repeatedFieldEncoding|{}repeatedFieldEncoding[0]
        abstract fun <get-repeatedFieldEncoding>(): pbandk.wkt/FeatureSet.RepeatedFieldEncoding? // pbandk.wkt/MutableFeatureSet.repeatedFieldEncoding.<get-repeatedFieldEncoding>|<get-repeatedFieldEncoding>(){}[0]
        abstract fun <set-repeatedFieldEncoding>(pbandk.wkt/FeatureSet.RepeatedFieldEncoding?) // pbandk.wkt/MutableFeatureSet.repeatedFieldEncoding.<set-repeatedFieldEncoding>|<set-repeatedFieldEncoding>(pbandk.wkt.FeatureSet.RepeatedFieldEncoding?){}[0]
    abstract var utf8Validation // pbandk.wkt/MutableFeatureSet.utf8Validation|{}utf8Validation[0]
        abstract fun <get-utf8Validation>(): pbandk.wkt/FeatureSet.Utf8Validation? // pbandk.wkt/MutableFeatureSet.utf8Validation.<get-utf8Validation>|<get-utf8Validation>(){}[0]
        abstract fun <set-utf8Validation>(pbandk.wkt/FeatureSet.Utf8Validation?) // pbandk.wkt/MutableFeatureSet.utf8Validation.<set-utf8Validation>|<set-utf8Validation>(pbandk.wkt.FeatureSet.Utf8Validation?){}[0]
}

sealed interface pbandk.wkt/MutableFeatureSetDefaults : pbandk.wkt/FeatureSetDefaults, pbandk/MutableMessage<pbandk.wkt/FeatureSetDefaults> { // pbandk.wkt/MutableFeatureSetDefaults|null[0]
    abstract val defaults // pbandk.wkt/MutableFeatureSetDefaults.defaults|{}defaults[0]
        abstract fun <get-defaults>(): kotlin.collections/MutableList<pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault> // pbandk.wkt/MutableFeatureSetDefaults.defaults.<get-defaults>|<get-defaults>(){}[0]

    abstract var maximumEdition // pbandk.wkt/MutableFeatureSetDefaults.maximumEdition|{}maximumEdition[0]
        abstract fun <get-maximumEdition>(): pbandk.wkt/Edition? // pbandk.wkt/MutableFeatureSetDefaults.maximumEdition.<get-maximumEdition>|<get-maximumEdition>(){}[0]
        abstract fun <set-maximumEdition>(pbandk.wkt/Edition?) // pbandk.wkt/MutableFeatureSetDefaults.maximumEdition.<set-maximumEdition>|<set-maximumEdition>(pbandk.wkt.Edition?){}[0]
    abstract var minimumEdition // pbandk.wkt/MutableFeatureSetDefaults.minimumEdition|{}minimumEdition[0]
        abstract fun <get-minimumEdition>(): pbandk.wkt/Edition? // pbandk.wkt/MutableFeatureSetDefaults.minimumEdition.<get-minimumEdition>|<get-minimumEdition>(){}[0]
        abstract fun <set-minimumEdition>(pbandk.wkt/Edition?) // pbandk.wkt/MutableFeatureSetDefaults.minimumEdition.<set-minimumEdition>|<set-minimumEdition>(pbandk.wkt.Edition?){}[0]
}

sealed interface pbandk.wkt/MutableField : pbandk.wkt/Field, pbandk/MutableMessage<pbandk.wkt/Field> { // pbandk.wkt/MutableField|null[0]
    abstract val options // pbandk.wkt/MutableField.options|{}options[0]
        abstract fun <get-options>(): kotlin.collections/MutableList<pbandk.wkt/Option> // pbandk.wkt/MutableField.options.<get-options>|<get-options>(){}[0]

    abstract var cardinality // pbandk.wkt/MutableField.cardinality|{}cardinality[0]
        abstract fun <get-cardinality>(): pbandk.wkt/Field.Cardinality // pbandk.wkt/MutableField.cardinality.<get-cardinality>|<get-cardinality>(){}[0]
        abstract fun <set-cardinality>(pbandk.wkt/Field.Cardinality) // pbandk.wkt/MutableField.cardinality.<set-cardinality>|<set-cardinality>(pbandk.wkt.Field.Cardinality){}[0]
    abstract var defaultValue // pbandk.wkt/MutableField.defaultValue|{}defaultValue[0]
        abstract fun <get-defaultValue>(): kotlin/String // pbandk.wkt/MutableField.defaultValue.<get-defaultValue>|<get-defaultValue>(){}[0]
        abstract fun <set-defaultValue>(kotlin/String) // pbandk.wkt/MutableField.defaultValue.<set-defaultValue>|<set-defaultValue>(kotlin.String){}[0]
    abstract var jsonName // pbandk.wkt/MutableField.jsonName|{}jsonName[0]
        abstract fun <get-jsonName>(): kotlin/String // pbandk.wkt/MutableField.jsonName.<get-jsonName>|<get-jsonName>(){}[0]
        abstract fun <set-jsonName>(kotlin/String) // pbandk.wkt/MutableField.jsonName.<set-jsonName>|<set-jsonName>(kotlin.String){}[0]
    abstract var kind // pbandk.wkt/MutableField.kind|{}kind[0]
        abstract fun <get-kind>(): pbandk.wkt/Field.Kind // pbandk.wkt/MutableField.kind.<get-kind>|<get-kind>(){}[0]
        abstract fun <set-kind>(pbandk.wkt/Field.Kind) // pbandk.wkt/MutableField.kind.<set-kind>|<set-kind>(pbandk.wkt.Field.Kind){}[0]
    abstract var name // pbandk.wkt/MutableField.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // pbandk.wkt/MutableField.name.<get-name>|<get-name>(){}[0]
        abstract fun <set-name>(kotlin/String) // pbandk.wkt/MutableField.name.<set-name>|<set-name>(kotlin.String){}[0]
    abstract var number // pbandk.wkt/MutableField.number|{}number[0]
        abstract fun <get-number>(): kotlin/Int // pbandk.wkt/MutableField.number.<get-number>|<get-number>(){}[0]
        abstract fun <set-number>(kotlin/Int) // pbandk.wkt/MutableField.number.<set-number>|<set-number>(kotlin.Int){}[0]
    abstract var oneofIndex // pbandk.wkt/MutableField.oneofIndex|{}oneofIndex[0]
        abstract fun <get-oneofIndex>(): kotlin/Int // pbandk.wkt/MutableField.oneofIndex.<get-oneofIndex>|<get-oneofIndex>(){}[0]
        abstract fun <set-oneofIndex>(kotlin/Int) // pbandk.wkt/MutableField.oneofIndex.<set-oneofIndex>|<set-oneofIndex>(kotlin.Int){}[0]
    abstract var packed // pbandk.wkt/MutableField.packed|{}packed[0]
        abstract fun <get-packed>(): kotlin/Boolean // pbandk.wkt/MutableField.packed.<get-packed>|<get-packed>(){}[0]
        abstract fun <set-packed>(kotlin/Boolean) // pbandk.wkt/MutableField.packed.<set-packed>|<set-packed>(kotlin.Boolean){}[0]
    abstract var typeUrl // pbandk.wkt/MutableField.typeUrl|{}typeUrl[0]
        abstract fun <get-typeUrl>(): kotlin/String // pbandk.wkt/MutableField.typeUrl.<get-typeUrl>|<get-typeUrl>(){}[0]
        abstract fun <set-typeUrl>(kotlin/String) // pbandk.wkt/MutableField.typeUrl.<set-typeUrl>|<set-typeUrl>(kotlin.String){}[0]
}

sealed interface pbandk.wkt/MutableFieldDescriptorProto : pbandk.wkt/FieldDescriptorProto, pbandk/MutableMessage<pbandk.wkt/FieldDescriptorProto> { // pbandk.wkt/MutableFieldDescriptorProto|null[0]
    abstract var defaultValue // pbandk.wkt/MutableFieldDescriptorProto.defaultValue|{}defaultValue[0]
        abstract fun <get-defaultValue>(): kotlin/String? // pbandk.wkt/MutableFieldDescriptorProto.defaultValue.<get-defaultValue>|<get-defaultValue>(){}[0]
        abstract fun <set-defaultValue>(kotlin/String?) // pbandk.wkt/MutableFieldDescriptorProto.defaultValue.<set-defaultValue>|<set-defaultValue>(kotlin.String?){}[0]
    abstract var extendee // pbandk.wkt/MutableFieldDescriptorProto.extendee|{}extendee[0]
        abstract fun <get-extendee>(): kotlin/String? // pbandk.wkt/MutableFieldDescriptorProto.extendee.<get-extendee>|<get-extendee>(){}[0]
        abstract fun <set-extendee>(kotlin/String?) // pbandk.wkt/MutableFieldDescriptorProto.extendee.<set-extendee>|<set-extendee>(kotlin.String?){}[0]
    abstract var jsonName // pbandk.wkt/MutableFieldDescriptorProto.jsonName|{}jsonName[0]
        abstract fun <get-jsonName>(): kotlin/String? // pbandk.wkt/MutableFieldDescriptorProto.jsonName.<get-jsonName>|<get-jsonName>(){}[0]
        abstract fun <set-jsonName>(kotlin/String?) // pbandk.wkt/MutableFieldDescriptorProto.jsonName.<set-jsonName>|<set-jsonName>(kotlin.String?){}[0]
    abstract var label // pbandk.wkt/MutableFieldDescriptorProto.label|{}label[0]
        abstract fun <get-label>(): pbandk.wkt/FieldDescriptorProto.Label? // pbandk.wkt/MutableFieldDescriptorProto.label.<get-label>|<get-label>(){}[0]
        abstract fun <set-label>(pbandk.wkt/FieldDescriptorProto.Label?) // pbandk.wkt/MutableFieldDescriptorProto.label.<set-label>|<set-label>(pbandk.wkt.FieldDescriptorProto.Label?){}[0]
    abstract var name // pbandk.wkt/MutableFieldDescriptorProto.name|{}name[0]
        abstract fun <get-name>(): kotlin/String? // pbandk.wkt/MutableFieldDescriptorProto.name.<get-name>|<get-name>(){}[0]
        abstract fun <set-name>(kotlin/String?) // pbandk.wkt/MutableFieldDescriptorProto.name.<set-name>|<set-name>(kotlin.String?){}[0]
    abstract var number // pbandk.wkt/MutableFieldDescriptorProto.number|{}number[0]
        abstract fun <get-number>(): kotlin/Int? // pbandk.wkt/MutableFieldDescriptorProto.number.<get-number>|<get-number>(){}[0]
        abstract fun <set-number>(kotlin/Int?) // pbandk.wkt/MutableFieldDescriptorProto.number.<set-number>|<set-number>(kotlin.Int?){}[0]
    abstract var oneofIndex // pbandk.wkt/MutableFieldDescriptorProto.oneofIndex|{}oneofIndex[0]
        abstract fun <get-oneofIndex>(): kotlin/Int? // pbandk.wkt/MutableFieldDescriptorProto.oneofIndex.<get-oneofIndex>|<get-oneofIndex>(){}[0]
        abstract fun <set-oneofIndex>(kotlin/Int?) // pbandk.wkt/MutableFieldDescriptorProto.oneofIndex.<set-oneofIndex>|<set-oneofIndex>(kotlin.Int?){}[0]
    abstract var options // pbandk.wkt/MutableFieldDescriptorProto.options|{}options[0]
        abstract fun <get-options>(): pbandk.wkt/FieldOptions? // pbandk.wkt/MutableFieldDescriptorProto.options.<get-options>|<get-options>(){}[0]
        abstract fun <set-options>(pbandk.wkt/FieldOptions?) // pbandk.wkt/MutableFieldDescriptorProto.options.<set-options>|<set-options>(pbandk.wkt.FieldOptions?){}[0]
    abstract var proto3Optional // pbandk.wkt/MutableFieldDescriptorProto.proto3Optional|{}proto3Optional[0]
        abstract fun <get-proto3Optional>(): kotlin/Boolean? // pbandk.wkt/MutableFieldDescriptorProto.proto3Optional.<get-proto3Optional>|<get-proto3Optional>(){}[0]
        abstract fun <set-proto3Optional>(kotlin/Boolean?) // pbandk.wkt/MutableFieldDescriptorProto.proto3Optional.<set-proto3Optional>|<set-proto3Optional>(kotlin.Boolean?){}[0]
    abstract var type // pbandk.wkt/MutableFieldDescriptorProto.type|{}type[0]
        abstract fun <get-type>(): pbandk.wkt/FieldDescriptorProto.Type? // pbandk.wkt/MutableFieldDescriptorProto.type.<get-type>|<get-type>(){}[0]
        abstract fun <set-type>(pbandk.wkt/FieldDescriptorProto.Type?) // pbandk.wkt/MutableFieldDescriptorProto.type.<set-type>|<set-type>(pbandk.wkt.FieldDescriptorProto.Type?){}[0]
    abstract var typeName // pbandk.wkt/MutableFieldDescriptorProto.typeName|{}typeName[0]
        abstract fun <get-typeName>(): kotlin/String? // pbandk.wkt/MutableFieldDescriptorProto.typeName.<get-typeName>|<get-typeName>(){}[0]
        abstract fun <set-typeName>(kotlin/String?) // pbandk.wkt/MutableFieldDescriptorProto.typeName.<set-typeName>|<set-typeName>(kotlin.String?){}[0]
}

sealed interface pbandk.wkt/MutableFieldMask : pbandk.wkt/FieldMask, pbandk/MutableMessage<pbandk.wkt/FieldMask> { // pbandk.wkt/MutableFieldMask|null[0]
    abstract val paths // pbandk.wkt/MutableFieldMask.paths|{}paths[0]
        abstract fun <get-paths>(): kotlin.collections/MutableList<kotlin/String> // pbandk.wkt/MutableFieldMask.paths.<get-paths>|<get-paths>(){}[0]
}

sealed interface pbandk.wkt/MutableFieldOptions : pbandk.wkt/FieldOptions, pbandk/MutableExtendableMessage<pbandk.wkt/FieldOptions> { // pbandk.wkt/MutableFieldOptions|null[0]
    abstract val editionDefaults // pbandk.wkt/MutableFieldOptions.editionDefaults|{}editionDefaults[0]
        abstract fun <get-editionDefaults>(): kotlin.collections/MutableList<pbandk.wkt/FieldOptions.EditionDefault> // pbandk.wkt/MutableFieldOptions.editionDefaults.<get-editionDefaults>|<get-editionDefaults>(){}[0]
    abstract val targets // pbandk.wkt/MutableFieldOptions.targets|{}targets[0]
        abstract fun <get-targets>(): kotlin.collections/MutableList<pbandk.wkt/FieldOptions.OptionTargetType> // pbandk.wkt/MutableFieldOptions.targets.<get-targets>|<get-targets>(){}[0]
    abstract val uninterpretedOption // pbandk.wkt/MutableFieldOptions.uninterpretedOption|{}uninterpretedOption[0]
        abstract fun <get-uninterpretedOption>(): kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption> // pbandk.wkt/MutableFieldOptions.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]

    abstract var ctype // pbandk.wkt/MutableFieldOptions.ctype|{}ctype[0]
        abstract fun <get-ctype>(): pbandk.wkt/FieldOptions.CType? // pbandk.wkt/MutableFieldOptions.ctype.<get-ctype>|<get-ctype>(){}[0]
        abstract fun <set-ctype>(pbandk.wkt/FieldOptions.CType?) // pbandk.wkt/MutableFieldOptions.ctype.<set-ctype>|<set-ctype>(pbandk.wkt.FieldOptions.CType?){}[0]
    abstract var debugRedact // pbandk.wkt/MutableFieldOptions.debugRedact|{}debugRedact[0]
        abstract fun <get-debugRedact>(): kotlin/Boolean? // pbandk.wkt/MutableFieldOptions.debugRedact.<get-debugRedact>|<get-debugRedact>(){}[0]
        abstract fun <set-debugRedact>(kotlin/Boolean?) // pbandk.wkt/MutableFieldOptions.debugRedact.<set-debugRedact>|<set-debugRedact>(kotlin.Boolean?){}[0]
    abstract var deprecated // pbandk.wkt/MutableFieldOptions.deprecated|{}deprecated[0]
        abstract fun <get-deprecated>(): kotlin/Boolean? // pbandk.wkt/MutableFieldOptions.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
        abstract fun <set-deprecated>(kotlin/Boolean?) // pbandk.wkt/MutableFieldOptions.deprecated.<set-deprecated>|<set-deprecated>(kotlin.Boolean?){}[0]
    abstract var featureSupport // pbandk.wkt/MutableFieldOptions.featureSupport|{}featureSupport[0]
        abstract fun <get-featureSupport>(): pbandk.wkt/FieldOptions.FeatureSupport? // pbandk.wkt/MutableFieldOptions.featureSupport.<get-featureSupport>|<get-featureSupport>(){}[0]
        abstract fun <set-featureSupport>(pbandk.wkt/FieldOptions.FeatureSupport?) // pbandk.wkt/MutableFieldOptions.featureSupport.<set-featureSupport>|<set-featureSupport>(pbandk.wkt.FieldOptions.FeatureSupport?){}[0]
    abstract var features // pbandk.wkt/MutableFieldOptions.features|{}features[0]
        abstract fun <get-features>(): pbandk.wkt/FeatureSet? // pbandk.wkt/MutableFieldOptions.features.<get-features>|<get-features>(){}[0]
        abstract fun <set-features>(pbandk.wkt/FeatureSet?) // pbandk.wkt/MutableFieldOptions.features.<set-features>|<set-features>(pbandk.wkt.FeatureSet?){}[0]
    abstract var jstype // pbandk.wkt/MutableFieldOptions.jstype|{}jstype[0]
        abstract fun <get-jstype>(): pbandk.wkt/FieldOptions.JSType? // pbandk.wkt/MutableFieldOptions.jstype.<get-jstype>|<get-jstype>(){}[0]
        abstract fun <set-jstype>(pbandk.wkt/FieldOptions.JSType?) // pbandk.wkt/MutableFieldOptions.jstype.<set-jstype>|<set-jstype>(pbandk.wkt.FieldOptions.JSType?){}[0]
    abstract var lazy // pbandk.wkt/MutableFieldOptions.lazy|{}lazy[0]
        abstract fun <get-lazy>(): kotlin/Boolean? // pbandk.wkt/MutableFieldOptions.lazy.<get-lazy>|<get-lazy>(){}[0]
        abstract fun <set-lazy>(kotlin/Boolean?) // pbandk.wkt/MutableFieldOptions.lazy.<set-lazy>|<set-lazy>(kotlin.Boolean?){}[0]
    abstract var packed // pbandk.wkt/MutableFieldOptions.packed|{}packed[0]
        abstract fun <get-packed>(): kotlin/Boolean? // pbandk.wkt/MutableFieldOptions.packed.<get-packed>|<get-packed>(){}[0]
        abstract fun <set-packed>(kotlin/Boolean?) // pbandk.wkt/MutableFieldOptions.packed.<set-packed>|<set-packed>(kotlin.Boolean?){}[0]
    abstract var retention // pbandk.wkt/MutableFieldOptions.retention|{}retention[0]
        abstract fun <get-retention>(): pbandk.wkt/FieldOptions.OptionRetention? // pbandk.wkt/MutableFieldOptions.retention.<get-retention>|<get-retention>(){}[0]
        abstract fun <set-retention>(pbandk.wkt/FieldOptions.OptionRetention?) // pbandk.wkt/MutableFieldOptions.retention.<set-retention>|<set-retention>(pbandk.wkt.FieldOptions.OptionRetention?){}[0]
    abstract var unverifiedLazy // pbandk.wkt/MutableFieldOptions.unverifiedLazy|{}unverifiedLazy[0]
        abstract fun <get-unverifiedLazy>(): kotlin/Boolean? // pbandk.wkt/MutableFieldOptions.unverifiedLazy.<get-unverifiedLazy>|<get-unverifiedLazy>(){}[0]
        abstract fun <set-unverifiedLazy>(kotlin/Boolean?) // pbandk.wkt/MutableFieldOptions.unverifiedLazy.<set-unverifiedLazy>|<set-unverifiedLazy>(kotlin.Boolean?){}[0]
    abstract var weak // pbandk.wkt/MutableFieldOptions.weak|{}weak[0]
        abstract fun <get-weak>(): kotlin/Boolean? // pbandk.wkt/MutableFieldOptions.weak.<get-weak>|<get-weak>(){}[0]
        abstract fun <set-weak>(kotlin/Boolean?) // pbandk.wkt/MutableFieldOptions.weak.<set-weak>|<set-weak>(kotlin.Boolean?){}[0]
}

sealed interface pbandk.wkt/MutableFileDescriptorProto : pbandk.wkt/FileDescriptorProto, pbandk/MutableMessage<pbandk.wkt/FileDescriptorProto> { // pbandk.wkt/MutableFileDescriptorProto|null[0]
    abstract val dependency // pbandk.wkt/MutableFileDescriptorProto.dependency|{}dependency[0]
        abstract fun <get-dependency>(): kotlin.collections/MutableList<kotlin/String> // pbandk.wkt/MutableFileDescriptorProto.dependency.<get-dependency>|<get-dependency>(){}[0]
    abstract val enumType // pbandk.wkt/MutableFileDescriptorProto.enumType|{}enumType[0]
        abstract fun <get-enumType>(): kotlin.collections/MutableList<pbandk.wkt/EnumDescriptorProto> // pbandk.wkt/MutableFileDescriptorProto.enumType.<get-enumType>|<get-enumType>(){}[0]
    abstract val extension // pbandk.wkt/MutableFileDescriptorProto.extension|{}extension[0]
        abstract fun <get-extension>(): kotlin.collections/MutableList<pbandk.wkt/FieldDescriptorProto> // pbandk.wkt/MutableFileDescriptorProto.extension.<get-extension>|<get-extension>(){}[0]
    abstract val messageType // pbandk.wkt/MutableFileDescriptorProto.messageType|{}messageType[0]
        abstract fun <get-messageType>(): kotlin.collections/MutableList<pbandk.wkt/DescriptorProto> // pbandk.wkt/MutableFileDescriptorProto.messageType.<get-messageType>|<get-messageType>(){}[0]
    abstract val publicDependency // pbandk.wkt/MutableFileDescriptorProto.publicDependency|{}publicDependency[0]
        abstract fun <get-publicDependency>(): kotlin.collections/MutableList<kotlin/Int> // pbandk.wkt/MutableFileDescriptorProto.publicDependency.<get-publicDependency>|<get-publicDependency>(){}[0]
    abstract val service // pbandk.wkt/MutableFileDescriptorProto.service|{}service[0]
        abstract fun <get-service>(): kotlin.collections/MutableList<pbandk.wkt/ServiceDescriptorProto> // pbandk.wkt/MutableFileDescriptorProto.service.<get-service>|<get-service>(){}[0]
    abstract val weakDependency // pbandk.wkt/MutableFileDescriptorProto.weakDependency|{}weakDependency[0]
        abstract fun <get-weakDependency>(): kotlin.collections/MutableList<kotlin/Int> // pbandk.wkt/MutableFileDescriptorProto.weakDependency.<get-weakDependency>|<get-weakDependency>(){}[0]

    abstract var edition // pbandk.wkt/MutableFileDescriptorProto.edition|{}edition[0]
        abstract fun <get-edition>(): pbandk.wkt/Edition? // pbandk.wkt/MutableFileDescriptorProto.edition.<get-edition>|<get-edition>(){}[0]
        abstract fun <set-edition>(pbandk.wkt/Edition?) // pbandk.wkt/MutableFileDescriptorProto.edition.<set-edition>|<set-edition>(pbandk.wkt.Edition?){}[0]
    abstract var name // pbandk.wkt/MutableFileDescriptorProto.name|{}name[0]
        abstract fun <get-name>(): kotlin/String? // pbandk.wkt/MutableFileDescriptorProto.name.<get-name>|<get-name>(){}[0]
        abstract fun <set-name>(kotlin/String?) // pbandk.wkt/MutableFileDescriptorProto.name.<set-name>|<set-name>(kotlin.String?){}[0]
    abstract var options // pbandk.wkt/MutableFileDescriptorProto.options|{}options[0]
        abstract fun <get-options>(): pbandk.wkt/FileOptions? // pbandk.wkt/MutableFileDescriptorProto.options.<get-options>|<get-options>(){}[0]
        abstract fun <set-options>(pbandk.wkt/FileOptions?) // pbandk.wkt/MutableFileDescriptorProto.options.<set-options>|<set-options>(pbandk.wkt.FileOptions?){}[0]
    abstract var package // pbandk.wkt/MutableFileDescriptorProto.package|{}package[0]
        abstract fun <get-package>(): kotlin/String? // pbandk.wkt/MutableFileDescriptorProto.package.<get-package>|<get-package>(){}[0]
        abstract fun <set-package>(kotlin/String?) // pbandk.wkt/MutableFileDescriptorProto.package.<set-package>|<set-package>(kotlin.String?){}[0]
    abstract var sourceCodeInfo // pbandk.wkt/MutableFileDescriptorProto.sourceCodeInfo|{}sourceCodeInfo[0]
        abstract fun <get-sourceCodeInfo>(): pbandk.wkt/SourceCodeInfo? // pbandk.wkt/MutableFileDescriptorProto.sourceCodeInfo.<get-sourceCodeInfo>|<get-sourceCodeInfo>(){}[0]
        abstract fun <set-sourceCodeInfo>(pbandk.wkt/SourceCodeInfo?) // pbandk.wkt/MutableFileDescriptorProto.sourceCodeInfo.<set-sourceCodeInfo>|<set-sourceCodeInfo>(pbandk.wkt.SourceCodeInfo?){}[0]
    abstract var syntax // pbandk.wkt/MutableFileDescriptorProto.syntax|{}syntax[0]
        abstract fun <get-syntax>(): kotlin/String? // pbandk.wkt/MutableFileDescriptorProto.syntax.<get-syntax>|<get-syntax>(){}[0]
        abstract fun <set-syntax>(kotlin/String?) // pbandk.wkt/MutableFileDescriptorProto.syntax.<set-syntax>|<set-syntax>(kotlin.String?){}[0]
}

sealed interface pbandk.wkt/MutableFileDescriptorSet : pbandk.wkt/FileDescriptorSet, pbandk/MutableMessage<pbandk.wkt/FileDescriptorSet> { // pbandk.wkt/MutableFileDescriptorSet|null[0]
    abstract val file // pbandk.wkt/MutableFileDescriptorSet.file|{}file[0]
        abstract fun <get-file>(): kotlin.collections/MutableList<pbandk.wkt/FileDescriptorProto> // pbandk.wkt/MutableFileDescriptorSet.file.<get-file>|<get-file>(){}[0]
}

sealed interface pbandk.wkt/MutableFileOptions : pbandk.wkt/FileOptions, pbandk/MutableExtendableMessage<pbandk.wkt/FileOptions> { // pbandk.wkt/MutableFileOptions|null[0]
    abstract val uninterpretedOption // pbandk.wkt/MutableFileOptions.uninterpretedOption|{}uninterpretedOption[0]
        abstract fun <get-uninterpretedOption>(): kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption> // pbandk.wkt/MutableFileOptions.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]

    abstract var ccEnableArenas // pbandk.wkt/MutableFileOptions.ccEnableArenas|{}ccEnableArenas[0]
        abstract fun <get-ccEnableArenas>(): kotlin/Boolean? // pbandk.wkt/MutableFileOptions.ccEnableArenas.<get-ccEnableArenas>|<get-ccEnableArenas>(){}[0]
        abstract fun <set-ccEnableArenas>(kotlin/Boolean?) // pbandk.wkt/MutableFileOptions.ccEnableArenas.<set-ccEnableArenas>|<set-ccEnableArenas>(kotlin.Boolean?){}[0]
    abstract var ccGenericServices // pbandk.wkt/MutableFileOptions.ccGenericServices|{}ccGenericServices[0]
        abstract fun <get-ccGenericServices>(): kotlin/Boolean? // pbandk.wkt/MutableFileOptions.ccGenericServices.<get-ccGenericServices>|<get-ccGenericServices>(){}[0]
        abstract fun <set-ccGenericServices>(kotlin/Boolean?) // pbandk.wkt/MutableFileOptions.ccGenericServices.<set-ccGenericServices>|<set-ccGenericServices>(kotlin.Boolean?){}[0]
    abstract var csharpNamespace // pbandk.wkt/MutableFileOptions.csharpNamespace|{}csharpNamespace[0]
        abstract fun <get-csharpNamespace>(): kotlin/String? // pbandk.wkt/MutableFileOptions.csharpNamespace.<get-csharpNamespace>|<get-csharpNamespace>(){}[0]
        abstract fun <set-csharpNamespace>(kotlin/String?) // pbandk.wkt/MutableFileOptions.csharpNamespace.<set-csharpNamespace>|<set-csharpNamespace>(kotlin.String?){}[0]
    abstract var deprecated // pbandk.wkt/MutableFileOptions.deprecated|{}deprecated[0]
        abstract fun <get-deprecated>(): kotlin/Boolean? // pbandk.wkt/MutableFileOptions.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
        abstract fun <set-deprecated>(kotlin/Boolean?) // pbandk.wkt/MutableFileOptions.deprecated.<set-deprecated>|<set-deprecated>(kotlin.Boolean?){}[0]
    abstract var features // pbandk.wkt/MutableFileOptions.features|{}features[0]
        abstract fun <get-features>(): pbandk.wkt/FeatureSet? // pbandk.wkt/MutableFileOptions.features.<get-features>|<get-features>(){}[0]
        abstract fun <set-features>(pbandk.wkt/FeatureSet?) // pbandk.wkt/MutableFileOptions.features.<set-features>|<set-features>(pbandk.wkt.FeatureSet?){}[0]
    abstract var goPackage // pbandk.wkt/MutableFileOptions.goPackage|{}goPackage[0]
        abstract fun <get-goPackage>(): kotlin/String? // pbandk.wkt/MutableFileOptions.goPackage.<get-goPackage>|<get-goPackage>(){}[0]
        abstract fun <set-goPackage>(kotlin/String?) // pbandk.wkt/MutableFileOptions.goPackage.<set-goPackage>|<set-goPackage>(kotlin.String?){}[0]
    abstract var javaGenerateEqualsAndHash // pbandk.wkt/MutableFileOptions.javaGenerateEqualsAndHash|{}javaGenerateEqualsAndHash[0]
        abstract fun <get-javaGenerateEqualsAndHash>(): kotlin/Boolean? // pbandk.wkt/MutableFileOptions.javaGenerateEqualsAndHash.<get-javaGenerateEqualsAndHash>|<get-javaGenerateEqualsAndHash>(){}[0]
        abstract fun <set-javaGenerateEqualsAndHash>(kotlin/Boolean?) // pbandk.wkt/MutableFileOptions.javaGenerateEqualsAndHash.<set-javaGenerateEqualsAndHash>|<set-javaGenerateEqualsAndHash>(kotlin.Boolean?){}[0]
    abstract var javaGenericServices // pbandk.wkt/MutableFileOptions.javaGenericServices|{}javaGenericServices[0]
        abstract fun <get-javaGenericServices>(): kotlin/Boolean? // pbandk.wkt/MutableFileOptions.javaGenericServices.<get-javaGenericServices>|<get-javaGenericServices>(){}[0]
        abstract fun <set-javaGenericServices>(kotlin/Boolean?) // pbandk.wkt/MutableFileOptions.javaGenericServices.<set-javaGenericServices>|<set-javaGenericServices>(kotlin.Boolean?){}[0]
    abstract var javaMultipleFiles // pbandk.wkt/MutableFileOptions.javaMultipleFiles|{}javaMultipleFiles[0]
        abstract fun <get-javaMultipleFiles>(): kotlin/Boolean? // pbandk.wkt/MutableFileOptions.javaMultipleFiles.<get-javaMultipleFiles>|<get-javaMultipleFiles>(){}[0]
        abstract fun <set-javaMultipleFiles>(kotlin/Boolean?) // pbandk.wkt/MutableFileOptions.javaMultipleFiles.<set-javaMultipleFiles>|<set-javaMultipleFiles>(kotlin.Boolean?){}[0]
    abstract var javaOuterClassname // pbandk.wkt/MutableFileOptions.javaOuterClassname|{}javaOuterClassname[0]
        abstract fun <get-javaOuterClassname>(): kotlin/String? // pbandk.wkt/MutableFileOptions.javaOuterClassname.<get-javaOuterClassname>|<get-javaOuterClassname>(){}[0]
        abstract fun <set-javaOuterClassname>(kotlin/String?) // pbandk.wkt/MutableFileOptions.javaOuterClassname.<set-javaOuterClassname>|<set-javaOuterClassname>(kotlin.String?){}[0]
    abstract var javaPackage // pbandk.wkt/MutableFileOptions.javaPackage|{}javaPackage[0]
        abstract fun <get-javaPackage>(): kotlin/String? // pbandk.wkt/MutableFileOptions.javaPackage.<get-javaPackage>|<get-javaPackage>(){}[0]
        abstract fun <set-javaPackage>(kotlin/String?) // pbandk.wkt/MutableFileOptions.javaPackage.<set-javaPackage>|<set-javaPackage>(kotlin.String?){}[0]
    abstract var javaStringCheckUtf8 // pbandk.wkt/MutableFileOptions.javaStringCheckUtf8|{}javaStringCheckUtf8[0]
        abstract fun <get-javaStringCheckUtf8>(): kotlin/Boolean? // pbandk.wkt/MutableFileOptions.javaStringCheckUtf8.<get-javaStringCheckUtf8>|<get-javaStringCheckUtf8>(){}[0]
        abstract fun <set-javaStringCheckUtf8>(kotlin/Boolean?) // pbandk.wkt/MutableFileOptions.javaStringCheckUtf8.<set-javaStringCheckUtf8>|<set-javaStringCheckUtf8>(kotlin.Boolean?){}[0]
    abstract var objcClassPrefix // pbandk.wkt/MutableFileOptions.objcClassPrefix|{}objcClassPrefix[0]
        abstract fun <get-objcClassPrefix>(): kotlin/String? // pbandk.wkt/MutableFileOptions.objcClassPrefix.<get-objcClassPrefix>|<get-objcClassPrefix>(){}[0]
        abstract fun <set-objcClassPrefix>(kotlin/String?) // pbandk.wkt/MutableFileOptions.objcClassPrefix.<set-objcClassPrefix>|<set-objcClassPrefix>(kotlin.String?){}[0]
    abstract var optimizeFor // pbandk.wkt/MutableFileOptions.optimizeFor|{}optimizeFor[0]
        abstract fun <get-optimizeFor>(): pbandk.wkt/FileOptions.OptimizeMode? // pbandk.wkt/MutableFileOptions.optimizeFor.<get-optimizeFor>|<get-optimizeFor>(){}[0]
        abstract fun <set-optimizeFor>(pbandk.wkt/FileOptions.OptimizeMode?) // pbandk.wkt/MutableFileOptions.optimizeFor.<set-optimizeFor>|<set-optimizeFor>(pbandk.wkt.FileOptions.OptimizeMode?){}[0]
    abstract var phpClassPrefix // pbandk.wkt/MutableFileOptions.phpClassPrefix|{}phpClassPrefix[0]
        abstract fun <get-phpClassPrefix>(): kotlin/String? // pbandk.wkt/MutableFileOptions.phpClassPrefix.<get-phpClassPrefix>|<get-phpClassPrefix>(){}[0]
        abstract fun <set-phpClassPrefix>(kotlin/String?) // pbandk.wkt/MutableFileOptions.phpClassPrefix.<set-phpClassPrefix>|<set-phpClassPrefix>(kotlin.String?){}[0]
    abstract var phpMetadataNamespace // pbandk.wkt/MutableFileOptions.phpMetadataNamespace|{}phpMetadataNamespace[0]
        abstract fun <get-phpMetadataNamespace>(): kotlin/String? // pbandk.wkt/MutableFileOptions.phpMetadataNamespace.<get-phpMetadataNamespace>|<get-phpMetadataNamespace>(){}[0]
        abstract fun <set-phpMetadataNamespace>(kotlin/String?) // pbandk.wkt/MutableFileOptions.phpMetadataNamespace.<set-phpMetadataNamespace>|<set-phpMetadataNamespace>(kotlin.String?){}[0]
    abstract var phpNamespace // pbandk.wkt/MutableFileOptions.phpNamespace|{}phpNamespace[0]
        abstract fun <get-phpNamespace>(): kotlin/String? // pbandk.wkt/MutableFileOptions.phpNamespace.<get-phpNamespace>|<get-phpNamespace>(){}[0]
        abstract fun <set-phpNamespace>(kotlin/String?) // pbandk.wkt/MutableFileOptions.phpNamespace.<set-phpNamespace>|<set-phpNamespace>(kotlin.String?){}[0]
    abstract var pyGenericServices // pbandk.wkt/MutableFileOptions.pyGenericServices|{}pyGenericServices[0]
        abstract fun <get-pyGenericServices>(): kotlin/Boolean? // pbandk.wkt/MutableFileOptions.pyGenericServices.<get-pyGenericServices>|<get-pyGenericServices>(){}[0]
        abstract fun <set-pyGenericServices>(kotlin/Boolean?) // pbandk.wkt/MutableFileOptions.pyGenericServices.<set-pyGenericServices>|<set-pyGenericServices>(kotlin.Boolean?){}[0]
    abstract var rubyPackage // pbandk.wkt/MutableFileOptions.rubyPackage|{}rubyPackage[0]
        abstract fun <get-rubyPackage>(): kotlin/String? // pbandk.wkt/MutableFileOptions.rubyPackage.<get-rubyPackage>|<get-rubyPackage>(){}[0]
        abstract fun <set-rubyPackage>(kotlin/String?) // pbandk.wkt/MutableFileOptions.rubyPackage.<set-rubyPackage>|<set-rubyPackage>(kotlin.String?){}[0]
    abstract var swiftPrefix // pbandk.wkt/MutableFileOptions.swiftPrefix|{}swiftPrefix[0]
        abstract fun <get-swiftPrefix>(): kotlin/String? // pbandk.wkt/MutableFileOptions.swiftPrefix.<get-swiftPrefix>|<get-swiftPrefix>(){}[0]
        abstract fun <set-swiftPrefix>(kotlin/String?) // pbandk.wkt/MutableFileOptions.swiftPrefix.<set-swiftPrefix>|<set-swiftPrefix>(kotlin.String?){}[0]
}

sealed interface pbandk.wkt/MutableFloatValue : pbandk.wkt/FloatValue, pbandk/MutableMessage<pbandk.wkt/FloatValue> { // pbandk.wkt/MutableFloatValue|null[0]
    abstract var value // pbandk.wkt/MutableFloatValue.value|{}value[0]
        abstract fun <get-value>(): kotlin/Float // pbandk.wkt/MutableFloatValue.value.<get-value>|<get-value>(){}[0]
        abstract fun <set-value>(kotlin/Float) // pbandk.wkt/MutableFloatValue.value.<set-value>|<set-value>(kotlin.Float){}[0]
}

sealed interface pbandk.wkt/MutableGeneratedCodeInfo : pbandk.wkt/GeneratedCodeInfo, pbandk/MutableMessage<pbandk.wkt/GeneratedCodeInfo> { // pbandk.wkt/MutableGeneratedCodeInfo|null[0]
    abstract val annotation // pbandk.wkt/MutableGeneratedCodeInfo.annotation|{}annotation[0]
        abstract fun <get-annotation>(): kotlin.collections/MutableList<pbandk.wkt/GeneratedCodeInfo.Annotation> // pbandk.wkt/MutableGeneratedCodeInfo.annotation.<get-annotation>|<get-annotation>(){}[0]
}

sealed interface pbandk.wkt/MutableInt32Value : pbandk.wkt/Int32Value, pbandk/MutableMessage<pbandk.wkt/Int32Value> { // pbandk.wkt/MutableInt32Value|null[0]
    abstract var value // pbandk.wkt/MutableInt32Value.value|{}value[0]
        abstract fun <get-value>(): kotlin/Int // pbandk.wkt/MutableInt32Value.value.<get-value>|<get-value>(){}[0]
        abstract fun <set-value>(kotlin/Int) // pbandk.wkt/MutableInt32Value.value.<set-value>|<set-value>(kotlin.Int){}[0]
}

sealed interface pbandk.wkt/MutableInt64Value : pbandk.wkt/Int64Value, pbandk/MutableMessage<pbandk.wkt/Int64Value> { // pbandk.wkt/MutableInt64Value|null[0]
    abstract var value // pbandk.wkt/MutableInt64Value.value|{}value[0]
        abstract fun <get-value>(): kotlin/Long // pbandk.wkt/MutableInt64Value.value.<get-value>|<get-value>(){}[0]
        abstract fun <set-value>(kotlin/Long) // pbandk.wkt/MutableInt64Value.value.<set-value>|<set-value>(kotlin.Long){}[0]
}

sealed interface pbandk.wkt/MutableJavaFeatures : pbandk.wkt/JavaFeatures, pbandk/MutableMessage<pbandk.wkt/JavaFeatures> { // pbandk.wkt/MutableJavaFeatures|null[0]
    abstract var legacyClosedEnum // pbandk.wkt/MutableJavaFeatures.legacyClosedEnum|{}legacyClosedEnum[0]
        abstract fun <get-legacyClosedEnum>(): kotlin/Boolean? // pbandk.wkt/MutableJavaFeatures.legacyClosedEnum.<get-legacyClosedEnum>|<get-legacyClosedEnum>(){}[0]
        abstract fun <set-legacyClosedEnum>(kotlin/Boolean?) // pbandk.wkt/MutableJavaFeatures.legacyClosedEnum.<set-legacyClosedEnum>|<set-legacyClosedEnum>(kotlin.Boolean?){}[0]
    abstract var utf8Validation // pbandk.wkt/MutableJavaFeatures.utf8Validation|{}utf8Validation[0]
        abstract fun <get-utf8Validation>(): pbandk.wkt/JavaFeatures.Utf8Validation? // pbandk.wkt/MutableJavaFeatures.utf8Validation.<get-utf8Validation>|<get-utf8Validation>(){}[0]
        abstract fun <set-utf8Validation>(pbandk.wkt/JavaFeatures.Utf8Validation?) // pbandk.wkt/MutableJavaFeatures.utf8Validation.<set-utf8Validation>|<set-utf8Validation>(pbandk.wkt.JavaFeatures.Utf8Validation?){}[0]
}

sealed interface pbandk.wkt/MutableListValue : pbandk.wkt/ListValue, pbandk/MutableMessage<pbandk.wkt/ListValue> { // pbandk.wkt/MutableListValue|null[0]
    abstract val values // pbandk.wkt/MutableListValue.values|{}values[0]
        abstract fun <get-values>(): kotlin.collections/MutableList<pbandk.wkt/Value> // pbandk.wkt/MutableListValue.values.<get-values>|<get-values>(){}[0]
}

sealed interface pbandk.wkt/MutableMessageOptions : pbandk.wkt/MessageOptions, pbandk/MutableExtendableMessage<pbandk.wkt/MessageOptions> { // pbandk.wkt/MutableMessageOptions|null[0]
    abstract val uninterpretedOption // pbandk.wkt/MutableMessageOptions.uninterpretedOption|{}uninterpretedOption[0]
        abstract fun <get-uninterpretedOption>(): kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption> // pbandk.wkt/MutableMessageOptions.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]

    abstract var deprecated // pbandk.wkt/MutableMessageOptions.deprecated|{}deprecated[0]
        abstract fun <get-deprecated>(): kotlin/Boolean? // pbandk.wkt/MutableMessageOptions.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
        abstract fun <set-deprecated>(kotlin/Boolean?) // pbandk.wkt/MutableMessageOptions.deprecated.<set-deprecated>|<set-deprecated>(kotlin.Boolean?){}[0]
    abstract var deprecatedLegacyJsonFieldConflicts // pbandk.wkt/MutableMessageOptions.deprecatedLegacyJsonFieldConflicts|{}deprecatedLegacyJsonFieldConflicts[0]
        abstract fun <get-deprecatedLegacyJsonFieldConflicts>(): kotlin/Boolean? // pbandk.wkt/MutableMessageOptions.deprecatedLegacyJsonFieldConflicts.<get-deprecatedLegacyJsonFieldConflicts>|<get-deprecatedLegacyJsonFieldConflicts>(){}[0]
        abstract fun <set-deprecatedLegacyJsonFieldConflicts>(kotlin/Boolean?) // pbandk.wkt/MutableMessageOptions.deprecatedLegacyJsonFieldConflicts.<set-deprecatedLegacyJsonFieldConflicts>|<set-deprecatedLegacyJsonFieldConflicts>(kotlin.Boolean?){}[0]
    abstract var features // pbandk.wkt/MutableMessageOptions.features|{}features[0]
        abstract fun <get-features>(): pbandk.wkt/FeatureSet? // pbandk.wkt/MutableMessageOptions.features.<get-features>|<get-features>(){}[0]
        abstract fun <set-features>(pbandk.wkt/FeatureSet?) // pbandk.wkt/MutableMessageOptions.features.<set-features>|<set-features>(pbandk.wkt.FeatureSet?){}[0]
    abstract var mapEntry // pbandk.wkt/MutableMessageOptions.mapEntry|{}mapEntry[0]
        abstract fun <get-mapEntry>(): kotlin/Boolean? // pbandk.wkt/MutableMessageOptions.mapEntry.<get-mapEntry>|<get-mapEntry>(){}[0]
        abstract fun <set-mapEntry>(kotlin/Boolean?) // pbandk.wkt/MutableMessageOptions.mapEntry.<set-mapEntry>|<set-mapEntry>(kotlin.Boolean?){}[0]
    abstract var messageSetWireFormat // pbandk.wkt/MutableMessageOptions.messageSetWireFormat|{}messageSetWireFormat[0]
        abstract fun <get-messageSetWireFormat>(): kotlin/Boolean? // pbandk.wkt/MutableMessageOptions.messageSetWireFormat.<get-messageSetWireFormat>|<get-messageSetWireFormat>(){}[0]
        abstract fun <set-messageSetWireFormat>(kotlin/Boolean?) // pbandk.wkt/MutableMessageOptions.messageSetWireFormat.<set-messageSetWireFormat>|<set-messageSetWireFormat>(kotlin.Boolean?){}[0]
    abstract var noStandardDescriptorAccessor // pbandk.wkt/MutableMessageOptions.noStandardDescriptorAccessor|{}noStandardDescriptorAccessor[0]
        abstract fun <get-noStandardDescriptorAccessor>(): kotlin/Boolean? // pbandk.wkt/MutableMessageOptions.noStandardDescriptorAccessor.<get-noStandardDescriptorAccessor>|<get-noStandardDescriptorAccessor>(){}[0]
        abstract fun <set-noStandardDescriptorAccessor>(kotlin/Boolean?) // pbandk.wkt/MutableMessageOptions.noStandardDescriptorAccessor.<set-noStandardDescriptorAccessor>|<set-noStandardDescriptorAccessor>(kotlin.Boolean?){}[0]
}

sealed interface pbandk.wkt/MutableMethod : pbandk.wkt/Method, pbandk/MutableMessage<pbandk.wkt/Method> { // pbandk.wkt/MutableMethod|null[0]
    abstract val options // pbandk.wkt/MutableMethod.options|{}options[0]
        abstract fun <get-options>(): kotlin.collections/MutableList<pbandk.wkt/Option> // pbandk.wkt/MutableMethod.options.<get-options>|<get-options>(){}[0]

    abstract var name // pbandk.wkt/MutableMethod.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // pbandk.wkt/MutableMethod.name.<get-name>|<get-name>(){}[0]
        abstract fun <set-name>(kotlin/String) // pbandk.wkt/MutableMethod.name.<set-name>|<set-name>(kotlin.String){}[0]
    abstract var requestStreaming // pbandk.wkt/MutableMethod.requestStreaming|{}requestStreaming[0]
        abstract fun <get-requestStreaming>(): kotlin/Boolean // pbandk.wkt/MutableMethod.requestStreaming.<get-requestStreaming>|<get-requestStreaming>(){}[0]
        abstract fun <set-requestStreaming>(kotlin/Boolean) // pbandk.wkt/MutableMethod.requestStreaming.<set-requestStreaming>|<set-requestStreaming>(kotlin.Boolean){}[0]
    abstract var requestTypeUrl // pbandk.wkt/MutableMethod.requestTypeUrl|{}requestTypeUrl[0]
        abstract fun <get-requestTypeUrl>(): kotlin/String // pbandk.wkt/MutableMethod.requestTypeUrl.<get-requestTypeUrl>|<get-requestTypeUrl>(){}[0]
        abstract fun <set-requestTypeUrl>(kotlin/String) // pbandk.wkt/MutableMethod.requestTypeUrl.<set-requestTypeUrl>|<set-requestTypeUrl>(kotlin.String){}[0]
    abstract var responseStreaming // pbandk.wkt/MutableMethod.responseStreaming|{}responseStreaming[0]
        abstract fun <get-responseStreaming>(): kotlin/Boolean // pbandk.wkt/MutableMethod.responseStreaming.<get-responseStreaming>|<get-responseStreaming>(){}[0]
        abstract fun <set-responseStreaming>(kotlin/Boolean) // pbandk.wkt/MutableMethod.responseStreaming.<set-responseStreaming>|<set-responseStreaming>(kotlin.Boolean){}[0]
    abstract var responseTypeUrl // pbandk.wkt/MutableMethod.responseTypeUrl|{}responseTypeUrl[0]
        abstract fun <get-responseTypeUrl>(): kotlin/String // pbandk.wkt/MutableMethod.responseTypeUrl.<get-responseTypeUrl>|<get-responseTypeUrl>(){}[0]
        abstract fun <set-responseTypeUrl>(kotlin/String) // pbandk.wkt/MutableMethod.responseTypeUrl.<set-responseTypeUrl>|<set-responseTypeUrl>(kotlin.String){}[0]
    abstract var syntax // pbandk.wkt/MutableMethod.syntax|{}syntax[0]
        abstract fun <get-syntax>(): pbandk.wkt/Syntax // pbandk.wkt/MutableMethod.syntax.<get-syntax>|<get-syntax>(){}[0]
        abstract fun <set-syntax>(pbandk.wkt/Syntax) // pbandk.wkt/MutableMethod.syntax.<set-syntax>|<set-syntax>(pbandk.wkt.Syntax){}[0]
}

sealed interface pbandk.wkt/MutableMethodDescriptorProto : pbandk.wkt/MethodDescriptorProto, pbandk/MutableMessage<pbandk.wkt/MethodDescriptorProto> { // pbandk.wkt/MutableMethodDescriptorProto|null[0]
    abstract var clientStreaming // pbandk.wkt/MutableMethodDescriptorProto.clientStreaming|{}clientStreaming[0]
        abstract fun <get-clientStreaming>(): kotlin/Boolean? // pbandk.wkt/MutableMethodDescriptorProto.clientStreaming.<get-clientStreaming>|<get-clientStreaming>(){}[0]
        abstract fun <set-clientStreaming>(kotlin/Boolean?) // pbandk.wkt/MutableMethodDescriptorProto.clientStreaming.<set-clientStreaming>|<set-clientStreaming>(kotlin.Boolean?){}[0]
    abstract var inputType // pbandk.wkt/MutableMethodDescriptorProto.inputType|{}inputType[0]
        abstract fun <get-inputType>(): kotlin/String? // pbandk.wkt/MutableMethodDescriptorProto.inputType.<get-inputType>|<get-inputType>(){}[0]
        abstract fun <set-inputType>(kotlin/String?) // pbandk.wkt/MutableMethodDescriptorProto.inputType.<set-inputType>|<set-inputType>(kotlin.String?){}[0]
    abstract var name // pbandk.wkt/MutableMethodDescriptorProto.name|{}name[0]
        abstract fun <get-name>(): kotlin/String? // pbandk.wkt/MutableMethodDescriptorProto.name.<get-name>|<get-name>(){}[0]
        abstract fun <set-name>(kotlin/String?) // pbandk.wkt/MutableMethodDescriptorProto.name.<set-name>|<set-name>(kotlin.String?){}[0]
    abstract var options // pbandk.wkt/MutableMethodDescriptorProto.options|{}options[0]
        abstract fun <get-options>(): pbandk.wkt/MethodOptions? // pbandk.wkt/MutableMethodDescriptorProto.options.<get-options>|<get-options>(){}[0]
        abstract fun <set-options>(pbandk.wkt/MethodOptions?) // pbandk.wkt/MutableMethodDescriptorProto.options.<set-options>|<set-options>(pbandk.wkt.MethodOptions?){}[0]
    abstract var outputType // pbandk.wkt/MutableMethodDescriptorProto.outputType|{}outputType[0]
        abstract fun <get-outputType>(): kotlin/String? // pbandk.wkt/MutableMethodDescriptorProto.outputType.<get-outputType>|<get-outputType>(){}[0]
        abstract fun <set-outputType>(kotlin/String?) // pbandk.wkt/MutableMethodDescriptorProto.outputType.<set-outputType>|<set-outputType>(kotlin.String?){}[0]
    abstract var serverStreaming // pbandk.wkt/MutableMethodDescriptorProto.serverStreaming|{}serverStreaming[0]
        abstract fun <get-serverStreaming>(): kotlin/Boolean? // pbandk.wkt/MutableMethodDescriptorProto.serverStreaming.<get-serverStreaming>|<get-serverStreaming>(){}[0]
        abstract fun <set-serverStreaming>(kotlin/Boolean?) // pbandk.wkt/MutableMethodDescriptorProto.serverStreaming.<set-serverStreaming>|<set-serverStreaming>(kotlin.Boolean?){}[0]
}

sealed interface pbandk.wkt/MutableMethodOptions : pbandk.wkt/MethodOptions, pbandk/MutableExtendableMessage<pbandk.wkt/MethodOptions> { // pbandk.wkt/MutableMethodOptions|null[0]
    abstract val uninterpretedOption // pbandk.wkt/MutableMethodOptions.uninterpretedOption|{}uninterpretedOption[0]
        abstract fun <get-uninterpretedOption>(): kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption> // pbandk.wkt/MutableMethodOptions.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]

    abstract var deprecated // pbandk.wkt/MutableMethodOptions.deprecated|{}deprecated[0]
        abstract fun <get-deprecated>(): kotlin/Boolean? // pbandk.wkt/MutableMethodOptions.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
        abstract fun <set-deprecated>(kotlin/Boolean?) // pbandk.wkt/MutableMethodOptions.deprecated.<set-deprecated>|<set-deprecated>(kotlin.Boolean?){}[0]
    abstract var features // pbandk.wkt/MutableMethodOptions.features|{}features[0]
        abstract fun <get-features>(): pbandk.wkt/FeatureSet? // pbandk.wkt/MutableMethodOptions.features.<get-features>|<get-features>(){}[0]
        abstract fun <set-features>(pbandk.wkt/FeatureSet?) // pbandk.wkt/MutableMethodOptions.features.<set-features>|<set-features>(pbandk.wkt.FeatureSet?){}[0]
    abstract var idempotencyLevel // pbandk.wkt/MutableMethodOptions.idempotencyLevel|{}idempotencyLevel[0]
        abstract fun <get-idempotencyLevel>(): pbandk.wkt/MethodOptions.IdempotencyLevel? // pbandk.wkt/MutableMethodOptions.idempotencyLevel.<get-idempotencyLevel>|<get-idempotencyLevel>(){}[0]
        abstract fun <set-idempotencyLevel>(pbandk.wkt/MethodOptions.IdempotencyLevel?) // pbandk.wkt/MutableMethodOptions.idempotencyLevel.<set-idempotencyLevel>|<set-idempotencyLevel>(pbandk.wkt.MethodOptions.IdempotencyLevel?){}[0]
}

sealed interface pbandk.wkt/MutableMixin : pbandk.wkt/Mixin, pbandk/MutableMessage<pbandk.wkt/Mixin> { // pbandk.wkt/MutableMixin|null[0]
    abstract var name // pbandk.wkt/MutableMixin.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // pbandk.wkt/MutableMixin.name.<get-name>|<get-name>(){}[0]
        abstract fun <set-name>(kotlin/String) // pbandk.wkt/MutableMixin.name.<set-name>|<set-name>(kotlin.String){}[0]
    abstract var root // pbandk.wkt/MutableMixin.root|{}root[0]
        abstract fun <get-root>(): kotlin/String // pbandk.wkt/MutableMixin.root.<get-root>|<get-root>(){}[0]
        abstract fun <set-root>(kotlin/String) // pbandk.wkt/MutableMixin.root.<set-root>|<set-root>(kotlin.String){}[0]
}

sealed interface pbandk.wkt/MutableOneofDescriptorProto : pbandk.wkt/OneofDescriptorProto, pbandk/MutableMessage<pbandk.wkt/OneofDescriptorProto> { // pbandk.wkt/MutableOneofDescriptorProto|null[0]
    abstract var name // pbandk.wkt/MutableOneofDescriptorProto.name|{}name[0]
        abstract fun <get-name>(): kotlin/String? // pbandk.wkt/MutableOneofDescriptorProto.name.<get-name>|<get-name>(){}[0]
        abstract fun <set-name>(kotlin/String?) // pbandk.wkt/MutableOneofDescriptorProto.name.<set-name>|<set-name>(kotlin.String?){}[0]
    abstract var options // pbandk.wkt/MutableOneofDescriptorProto.options|{}options[0]
        abstract fun <get-options>(): pbandk.wkt/OneofOptions? // pbandk.wkt/MutableOneofDescriptorProto.options.<get-options>|<get-options>(){}[0]
        abstract fun <set-options>(pbandk.wkt/OneofOptions?) // pbandk.wkt/MutableOneofDescriptorProto.options.<set-options>|<set-options>(pbandk.wkt.OneofOptions?){}[0]
}

sealed interface pbandk.wkt/MutableOneofOptions : pbandk.wkt/OneofOptions, pbandk/MutableExtendableMessage<pbandk.wkt/OneofOptions> { // pbandk.wkt/MutableOneofOptions|null[0]
    abstract val uninterpretedOption // pbandk.wkt/MutableOneofOptions.uninterpretedOption|{}uninterpretedOption[0]
        abstract fun <get-uninterpretedOption>(): kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption> // pbandk.wkt/MutableOneofOptions.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]

    abstract var features // pbandk.wkt/MutableOneofOptions.features|{}features[0]
        abstract fun <get-features>(): pbandk.wkt/FeatureSet? // pbandk.wkt/MutableOneofOptions.features.<get-features>|<get-features>(){}[0]
        abstract fun <set-features>(pbandk.wkt/FeatureSet?) // pbandk.wkt/MutableOneofOptions.features.<set-features>|<set-features>(pbandk.wkt.FeatureSet?){}[0]
}

sealed interface pbandk.wkt/MutableOption : pbandk.wkt/Option, pbandk/MutableMessage<pbandk.wkt/Option> { // pbandk.wkt/MutableOption|null[0]
    abstract var name // pbandk.wkt/MutableOption.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // pbandk.wkt/MutableOption.name.<get-name>|<get-name>(){}[0]
        abstract fun <set-name>(kotlin/String) // pbandk.wkt/MutableOption.name.<set-name>|<set-name>(kotlin.String){}[0]
    abstract var value // pbandk.wkt/MutableOption.value|{}value[0]
        abstract fun <get-value>(): pbandk.wkt/Any? // pbandk.wkt/MutableOption.value.<get-value>|<get-value>(){}[0]
        abstract fun <set-value>(pbandk.wkt/Any?) // pbandk.wkt/MutableOption.value.<set-value>|<set-value>(pbandk.wkt.Any?){}[0]
}

sealed interface pbandk.wkt/MutableServiceDescriptorProto : pbandk.wkt/ServiceDescriptorProto, pbandk/MutableMessage<pbandk.wkt/ServiceDescriptorProto> { // pbandk.wkt/MutableServiceDescriptorProto|null[0]
    abstract val method // pbandk.wkt/MutableServiceDescriptorProto.method|{}method[0]
        abstract fun <get-method>(): kotlin.collections/MutableList<pbandk.wkt/MethodDescriptorProto> // pbandk.wkt/MutableServiceDescriptorProto.method.<get-method>|<get-method>(){}[0]

    abstract var name // pbandk.wkt/MutableServiceDescriptorProto.name|{}name[0]
        abstract fun <get-name>(): kotlin/String? // pbandk.wkt/MutableServiceDescriptorProto.name.<get-name>|<get-name>(){}[0]
        abstract fun <set-name>(kotlin/String?) // pbandk.wkt/MutableServiceDescriptorProto.name.<set-name>|<set-name>(kotlin.String?){}[0]
    abstract var options // pbandk.wkt/MutableServiceDescriptorProto.options|{}options[0]
        abstract fun <get-options>(): pbandk.wkt/ServiceOptions? // pbandk.wkt/MutableServiceDescriptorProto.options.<get-options>|<get-options>(){}[0]
        abstract fun <set-options>(pbandk.wkt/ServiceOptions?) // pbandk.wkt/MutableServiceDescriptorProto.options.<set-options>|<set-options>(pbandk.wkt.ServiceOptions?){}[0]
}

sealed interface pbandk.wkt/MutableServiceOptions : pbandk.wkt/ServiceOptions, pbandk/MutableExtendableMessage<pbandk.wkt/ServiceOptions> { // pbandk.wkt/MutableServiceOptions|null[0]
    abstract val uninterpretedOption // pbandk.wkt/MutableServiceOptions.uninterpretedOption|{}uninterpretedOption[0]
        abstract fun <get-uninterpretedOption>(): kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption> // pbandk.wkt/MutableServiceOptions.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]

    abstract var deprecated // pbandk.wkt/MutableServiceOptions.deprecated|{}deprecated[0]
        abstract fun <get-deprecated>(): kotlin/Boolean? // pbandk.wkt/MutableServiceOptions.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
        abstract fun <set-deprecated>(kotlin/Boolean?) // pbandk.wkt/MutableServiceOptions.deprecated.<set-deprecated>|<set-deprecated>(kotlin.Boolean?){}[0]
    abstract var features // pbandk.wkt/MutableServiceOptions.features|{}features[0]
        abstract fun <get-features>(): pbandk.wkt/FeatureSet? // pbandk.wkt/MutableServiceOptions.features.<get-features>|<get-features>(){}[0]
        abstract fun <set-features>(pbandk.wkt/FeatureSet?) // pbandk.wkt/MutableServiceOptions.features.<set-features>|<set-features>(pbandk.wkt.FeatureSet?){}[0]
}

sealed interface pbandk.wkt/MutableSourceCodeInfo : pbandk.wkt/SourceCodeInfo, pbandk/MutableMessage<pbandk.wkt/SourceCodeInfo> { // pbandk.wkt/MutableSourceCodeInfo|null[0]
    abstract val location // pbandk.wkt/MutableSourceCodeInfo.location|{}location[0]
        abstract fun <get-location>(): kotlin.collections/MutableList<pbandk.wkt/SourceCodeInfo.Location> // pbandk.wkt/MutableSourceCodeInfo.location.<get-location>|<get-location>(){}[0]
}

sealed interface pbandk.wkt/MutableSourceContext : pbandk.wkt/SourceContext, pbandk/MutableMessage<pbandk.wkt/SourceContext> { // pbandk.wkt/MutableSourceContext|null[0]
    abstract var fileName // pbandk.wkt/MutableSourceContext.fileName|{}fileName[0]
        abstract fun <get-fileName>(): kotlin/String // pbandk.wkt/MutableSourceContext.fileName.<get-fileName>|<get-fileName>(){}[0]
        abstract fun <set-fileName>(kotlin/String) // pbandk.wkt/MutableSourceContext.fileName.<set-fileName>|<set-fileName>(kotlin.String){}[0]
}

sealed interface pbandk.wkt/MutableStringValue : pbandk.wkt/StringValue, pbandk/MutableMessage<pbandk.wkt/StringValue> { // pbandk.wkt/MutableStringValue|null[0]
    abstract var value // pbandk.wkt/MutableStringValue.value|{}value[0]
        abstract fun <get-value>(): kotlin/String // pbandk.wkt/MutableStringValue.value.<get-value>|<get-value>(){}[0]
        abstract fun <set-value>(kotlin/String) // pbandk.wkt/MutableStringValue.value.<set-value>|<set-value>(kotlin.String){}[0]
}

sealed interface pbandk.wkt/MutableStruct : pbandk.wkt/Struct, pbandk/MutableMessage<pbandk.wkt/Struct> { // pbandk.wkt/MutableStruct|null[0]
    abstract val fields // pbandk.wkt/MutableStruct.fields|{}fields[0]
        abstract fun <get-fields>(): kotlin.collections/MutableMap<kotlin/String, pbandk.wkt/Value> // pbandk.wkt/MutableStruct.fields.<get-fields>|<get-fields>(){}[0]
}

sealed interface pbandk.wkt/MutableTimestamp : pbandk.wkt/Timestamp, pbandk/MutableMessage<pbandk.wkt/Timestamp> { // pbandk.wkt/MutableTimestamp|null[0]
    abstract var nanos // pbandk.wkt/MutableTimestamp.nanos|{}nanos[0]
        abstract fun <get-nanos>(): kotlin/Int // pbandk.wkt/MutableTimestamp.nanos.<get-nanos>|<get-nanos>(){}[0]
        abstract fun <set-nanos>(kotlin/Int) // pbandk.wkt/MutableTimestamp.nanos.<set-nanos>|<set-nanos>(kotlin.Int){}[0]
    abstract var seconds // pbandk.wkt/MutableTimestamp.seconds|{}seconds[0]
        abstract fun <get-seconds>(): kotlin/Long // pbandk.wkt/MutableTimestamp.seconds.<get-seconds>|<get-seconds>(){}[0]
        abstract fun <set-seconds>(kotlin/Long) // pbandk.wkt/MutableTimestamp.seconds.<set-seconds>|<set-seconds>(kotlin.Long){}[0]
}

sealed interface pbandk.wkt/MutableType : pbandk.wkt/Type, pbandk/MutableMessage<pbandk.wkt/Type> { // pbandk.wkt/MutableType|null[0]
    abstract val fields // pbandk.wkt/MutableType.fields|{}fields[0]
        abstract fun <get-fields>(): kotlin.collections/MutableList<pbandk.wkt/Field> // pbandk.wkt/MutableType.fields.<get-fields>|<get-fields>(){}[0]
    abstract val oneofs // pbandk.wkt/MutableType.oneofs|{}oneofs[0]
        abstract fun <get-oneofs>(): kotlin.collections/MutableList<kotlin/String> // pbandk.wkt/MutableType.oneofs.<get-oneofs>|<get-oneofs>(){}[0]
    abstract val options // pbandk.wkt/MutableType.options|{}options[0]
        abstract fun <get-options>(): kotlin.collections/MutableList<pbandk.wkt/Option> // pbandk.wkt/MutableType.options.<get-options>|<get-options>(){}[0]

    abstract var edition // pbandk.wkt/MutableType.edition|{}edition[0]
        abstract fun <get-edition>(): kotlin/String // pbandk.wkt/MutableType.edition.<get-edition>|<get-edition>(){}[0]
        abstract fun <set-edition>(kotlin/String) // pbandk.wkt/MutableType.edition.<set-edition>|<set-edition>(kotlin.String){}[0]
    abstract var name // pbandk.wkt/MutableType.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // pbandk.wkt/MutableType.name.<get-name>|<get-name>(){}[0]
        abstract fun <set-name>(kotlin/String) // pbandk.wkt/MutableType.name.<set-name>|<set-name>(kotlin.String){}[0]
    abstract var sourceContext // pbandk.wkt/MutableType.sourceContext|{}sourceContext[0]
        abstract fun <get-sourceContext>(): pbandk.wkt/SourceContext? // pbandk.wkt/MutableType.sourceContext.<get-sourceContext>|<get-sourceContext>(){}[0]
        abstract fun <set-sourceContext>(pbandk.wkt/SourceContext?) // pbandk.wkt/MutableType.sourceContext.<set-sourceContext>|<set-sourceContext>(pbandk.wkt.SourceContext?){}[0]
    abstract var syntax // pbandk.wkt/MutableType.syntax|{}syntax[0]
        abstract fun <get-syntax>(): pbandk.wkt/Syntax // pbandk.wkt/MutableType.syntax.<get-syntax>|<get-syntax>(){}[0]
        abstract fun <set-syntax>(pbandk.wkt/Syntax) // pbandk.wkt/MutableType.syntax.<set-syntax>|<set-syntax>(pbandk.wkt.Syntax){}[0]
}

sealed interface pbandk.wkt/MutableUInt32Value : pbandk.wkt/UInt32Value, pbandk/MutableMessage<pbandk.wkt/UInt32Value> { // pbandk.wkt/MutableUInt32Value|null[0]
    abstract var value // pbandk.wkt/MutableUInt32Value.value|{}value[0]
        abstract fun <get-value>(): kotlin/Int // pbandk.wkt/MutableUInt32Value.value.<get-value>|<get-value>(){}[0]
        abstract fun <set-value>(kotlin/Int) // pbandk.wkt/MutableUInt32Value.value.<set-value>|<set-value>(kotlin.Int){}[0]
}

sealed interface pbandk.wkt/MutableUInt64Value : pbandk.wkt/UInt64Value, pbandk/MutableMessage<pbandk.wkt/UInt64Value> { // pbandk.wkt/MutableUInt64Value|null[0]
    abstract var value // pbandk.wkt/MutableUInt64Value.value|{}value[0]
        abstract fun <get-value>(): kotlin/Long // pbandk.wkt/MutableUInt64Value.value.<get-value>|<get-value>(){}[0]
        abstract fun <set-value>(kotlin/Long) // pbandk.wkt/MutableUInt64Value.value.<set-value>|<set-value>(kotlin.Long){}[0]
}

sealed interface pbandk.wkt/MutableUninterpretedOption : pbandk.wkt/UninterpretedOption, pbandk/MutableMessage<pbandk.wkt/UninterpretedOption> { // pbandk.wkt/MutableUninterpretedOption|null[0]
    abstract val name // pbandk.wkt/MutableUninterpretedOption.name|{}name[0]
        abstract fun <get-name>(): kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption.NamePart> // pbandk.wkt/MutableUninterpretedOption.name.<get-name>|<get-name>(){}[0]

    abstract var aggregateValue // pbandk.wkt/MutableUninterpretedOption.aggregateValue|{}aggregateValue[0]
        abstract fun <get-aggregateValue>(): kotlin/String? // pbandk.wkt/MutableUninterpretedOption.aggregateValue.<get-aggregateValue>|<get-aggregateValue>(){}[0]
        abstract fun <set-aggregateValue>(kotlin/String?) // pbandk.wkt/MutableUninterpretedOption.aggregateValue.<set-aggregateValue>|<set-aggregateValue>(kotlin.String?){}[0]
    abstract var doubleValue // pbandk.wkt/MutableUninterpretedOption.doubleValue|{}doubleValue[0]
        abstract fun <get-doubleValue>(): kotlin/Double? // pbandk.wkt/MutableUninterpretedOption.doubleValue.<get-doubleValue>|<get-doubleValue>(){}[0]
        abstract fun <set-doubleValue>(kotlin/Double?) // pbandk.wkt/MutableUninterpretedOption.doubleValue.<set-doubleValue>|<set-doubleValue>(kotlin.Double?){}[0]
    abstract var identifierValue // pbandk.wkt/MutableUninterpretedOption.identifierValue|{}identifierValue[0]
        abstract fun <get-identifierValue>(): kotlin/String? // pbandk.wkt/MutableUninterpretedOption.identifierValue.<get-identifierValue>|<get-identifierValue>(){}[0]
        abstract fun <set-identifierValue>(kotlin/String?) // pbandk.wkt/MutableUninterpretedOption.identifierValue.<set-identifierValue>|<set-identifierValue>(kotlin.String?){}[0]
    abstract var negativeIntValue // pbandk.wkt/MutableUninterpretedOption.negativeIntValue|{}negativeIntValue[0]
        abstract fun <get-negativeIntValue>(): kotlin/Long? // pbandk.wkt/MutableUninterpretedOption.negativeIntValue.<get-negativeIntValue>|<get-negativeIntValue>(){}[0]
        abstract fun <set-negativeIntValue>(kotlin/Long?) // pbandk.wkt/MutableUninterpretedOption.negativeIntValue.<set-negativeIntValue>|<set-negativeIntValue>(kotlin.Long?){}[0]
    abstract var positiveIntValue // pbandk.wkt/MutableUninterpretedOption.positiveIntValue|{}positiveIntValue[0]
        abstract fun <get-positiveIntValue>(): kotlin/Long? // pbandk.wkt/MutableUninterpretedOption.positiveIntValue.<get-positiveIntValue>|<get-positiveIntValue>(){}[0]
        abstract fun <set-positiveIntValue>(kotlin/Long?) // pbandk.wkt/MutableUninterpretedOption.positiveIntValue.<set-positiveIntValue>|<set-positiveIntValue>(kotlin.Long?){}[0]
    abstract var stringValue // pbandk.wkt/MutableUninterpretedOption.stringValue|{}stringValue[0]
        abstract fun <get-stringValue>(): pbandk/ByteArr? // pbandk.wkt/MutableUninterpretedOption.stringValue.<get-stringValue>|<get-stringValue>(){}[0]
        abstract fun <set-stringValue>(pbandk/ByteArr?) // pbandk.wkt/MutableUninterpretedOption.stringValue.<set-stringValue>|<set-stringValue>(pbandk.ByteArr?){}[0]
}

sealed interface pbandk.wkt/MutableValue : pbandk.wkt/Value, pbandk/MutableMessage<pbandk.wkt/Value> { // pbandk.wkt/MutableValue|null[0]
    abstract var boolValue // pbandk.wkt/MutableValue.boolValue|{}boolValue[0]
        abstract fun <get-boolValue>(): kotlin/Boolean? // pbandk.wkt/MutableValue.boolValue.<get-boolValue>|<get-boolValue>(){}[0]
        abstract fun <set-boolValue>(kotlin/Boolean?) // pbandk.wkt/MutableValue.boolValue.<set-boolValue>|<set-boolValue>(kotlin.Boolean?){}[0]
    abstract var kind // pbandk.wkt/MutableValue.kind|{}kind[0]
        abstract fun <get-kind>(): pbandk.wkt/Value.Kind<*>? // pbandk.wkt/MutableValue.kind.<get-kind>|<get-kind>(){}[0]
        abstract fun <set-kind>(pbandk.wkt/Value.Kind<*>?) // pbandk.wkt/MutableValue.kind.<set-kind>|<set-kind>(pbandk.wkt.Value.Kind<*>?){}[0]
    abstract var listValue // pbandk.wkt/MutableValue.listValue|{}listValue[0]
        abstract fun <get-listValue>(): pbandk.wkt/ListValue? // pbandk.wkt/MutableValue.listValue.<get-listValue>|<get-listValue>(){}[0]
        abstract fun <set-listValue>(pbandk.wkt/ListValue?) // pbandk.wkt/MutableValue.listValue.<set-listValue>|<set-listValue>(pbandk.wkt.ListValue?){}[0]
    abstract var nullValue // pbandk.wkt/MutableValue.nullValue|{}nullValue[0]
        abstract fun <get-nullValue>(): pbandk.wkt/NullValue? // pbandk.wkt/MutableValue.nullValue.<get-nullValue>|<get-nullValue>(){}[0]
        abstract fun <set-nullValue>(pbandk.wkt/NullValue?) // pbandk.wkt/MutableValue.nullValue.<set-nullValue>|<set-nullValue>(pbandk.wkt.NullValue?){}[0]
    abstract var numberValue // pbandk.wkt/MutableValue.numberValue|{}numberValue[0]
        abstract fun <get-numberValue>(): kotlin/Double? // pbandk.wkt/MutableValue.numberValue.<get-numberValue>|<get-numberValue>(){}[0]
        abstract fun <set-numberValue>(kotlin/Double?) // pbandk.wkt/MutableValue.numberValue.<set-numberValue>|<set-numberValue>(kotlin.Double?){}[0]
    abstract var stringValue // pbandk.wkt/MutableValue.stringValue|{}stringValue[0]
        abstract fun <get-stringValue>(): kotlin/String? // pbandk.wkt/MutableValue.stringValue.<get-stringValue>|<get-stringValue>(){}[0]
        abstract fun <set-stringValue>(kotlin/String?) // pbandk.wkt/MutableValue.stringValue.<set-stringValue>|<set-stringValue>(kotlin.String?){}[0]
    abstract var structValue // pbandk.wkt/MutableValue.structValue|{}structValue[0]
        abstract fun <get-structValue>(): pbandk.wkt/Struct? // pbandk.wkt/MutableValue.structValue.<get-structValue>|<get-structValue>(){}[0]
        abstract fun <set-structValue>(pbandk.wkt/Struct?) // pbandk.wkt/MutableValue.structValue.<set-structValue>|<set-structValue>(pbandk.wkt.Struct?){}[0]
}

sealed interface pbandk.wkt/NullValue : pbandk/Message.Enum { // pbandk.wkt/NullValue|null[0]
    open val descriptor // pbandk.wkt/NullValue.descriptor|{}descriptor[0]
        open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/NullValue> // pbandk.wkt/NullValue.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/NullValue>, pbandk.wkt/NullValue { // pbandk.wkt/NullValue.UNRECOGNIZED|null[0]
        constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/NullValue.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
    }

    final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/NullValue> { // pbandk.wkt/NullValue.Companion|null[0]
        final val descriptor // pbandk.wkt/NullValue.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/NullValue> // pbandk.wkt/NullValue.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        final val values // pbandk.wkt/NullValue.Companion.values|{}values[0]
            final fun <get-values>(): kotlin.collections/List<pbandk.wkt/NullValue> // pbandk.wkt/NullValue.Companion.values.<get-values>|<get-values>(){}[0]

        final fun fromName(kotlin/String): pbandk.wkt/NullValue // pbandk.wkt/NullValue.Companion.fromName|fromName(kotlin.String){}[0]
        final fun fromValue(kotlin/Int): pbandk.wkt/NullValue // pbandk.wkt/NullValue.Companion.fromValue|fromValue(kotlin.Int){}[0]
    }

    final object NULL_VALUE : pbandk.gen/GeneratedEnumValue<pbandk.wkt/NullValue>, pbandk.wkt/NullValue // pbandk.wkt/NullValue.NULL_VALUE|null[0]
}

sealed interface pbandk.wkt/OneofDescriptorProto : pbandk/Message { // pbandk.wkt/OneofDescriptorProto|null[0]
    abstract val descriptor // pbandk.wkt/OneofDescriptorProto.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/OneofDescriptorProto> // pbandk.wkt/OneofDescriptorProto.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val name // pbandk.wkt/OneofDescriptorProto.name|{}name[0]
        abstract fun <get-name>(): kotlin/String? // pbandk.wkt/OneofDescriptorProto.name.<get-name>|<get-name>(){}[0]
    abstract val options // pbandk.wkt/OneofDescriptorProto.options|{}options[0]
        abstract fun <get-options>(): pbandk.wkt/OneofOptions? // pbandk.wkt/OneofDescriptorProto.options.<get-options>|<get-options>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableOneofDescriptorProto, kotlin/Unit>): pbandk.wkt/OneofDescriptorProto // pbandk.wkt/OneofDescriptorProto.copy|copy(kotlin.Function1<pbandk.wkt.MutableOneofDescriptorProto,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/String? = ..., pbandk.wkt/OneofOptions? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/OneofDescriptorProto // pbandk.wkt/OneofDescriptorProto.copy|copy(kotlin.String?;pbandk.wkt.OneofOptions?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/OneofDescriptorProto // pbandk.wkt/OneofDescriptorProto.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/OneofDescriptorProto> { // pbandk.wkt/OneofDescriptorProto.Companion|null[0]
        final val defaultInstance // pbandk.wkt/OneofDescriptorProto.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/OneofDescriptorProto // pbandk.wkt/OneofDescriptorProto.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/OneofDescriptorProto.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/OneofDescriptorProto> // pbandk.wkt/OneofDescriptorProto.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/OneofDescriptorProto.FieldDescriptors|null[0]
        final val name // pbandk.wkt/OneofDescriptorProto.FieldDescriptors.name|{}name[0]
            final fun <get-name>(): pbandk/FieldDescriptor<pbandk.wkt/OneofDescriptorProto, kotlin/String?> // pbandk.wkt/OneofDescriptorProto.FieldDescriptors.name.<get-name>|<get-name>(){}[0]
        final val options // pbandk.wkt/OneofDescriptorProto.FieldDescriptors.options|{}options[0]
            final fun <get-options>(): pbandk/FieldDescriptor<pbandk.wkt/OneofDescriptorProto, pbandk.wkt/OneofOptions?> // pbandk.wkt/OneofDescriptorProto.FieldDescriptors.options.<get-options>|<get-options>(){}[0]
    }
}

sealed interface pbandk.wkt/OneofOptions : pbandk/ExtendableMessage<pbandk.wkt/OneofOptions> { // pbandk.wkt/OneofOptions|null[0]
    abstract val descriptor // pbandk.wkt/OneofOptions.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/OneofOptions> // pbandk.wkt/OneofOptions.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val features // pbandk.wkt/OneofOptions.features|{}features[0]
        abstract fun <get-features>(): pbandk.wkt/FeatureSet? // pbandk.wkt/OneofOptions.features.<get-features>|<get-features>(){}[0]
    abstract val uninterpretedOption // pbandk.wkt/OneofOptions.uninterpretedOption|{}uninterpretedOption[0]
        abstract fun <get-uninterpretedOption>(): kotlin.collections/List<pbandk.wkt/UninterpretedOption> // pbandk.wkt/OneofOptions.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableOneofOptions, kotlin/Unit>): pbandk.wkt/OneofOptions // pbandk.wkt/OneofOptions.copy|copy(kotlin.Function1<pbandk.wkt.MutableOneofOptions,kotlin.Unit>){}[0]
    abstract fun copy(pbandk.wkt/FeatureSet? = ..., kotlin.collections/List<pbandk.wkt/UninterpretedOption> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/OneofOptions // pbandk.wkt/OneofOptions.copy|copy(pbandk.wkt.FeatureSet?;kotlin.collections.List<pbandk.wkt.UninterpretedOption>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/OneofOptions // pbandk.wkt/OneofOptions.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/OneofOptions> { // pbandk.wkt/OneofOptions.Companion|null[0]
        final val defaultInstance // pbandk.wkt/OneofOptions.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/OneofOptions // pbandk.wkt/OneofOptions.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/OneofOptions.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/OneofOptions> // pbandk.wkt/OneofOptions.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/OneofOptions.FieldDescriptors|null[0]
        final val features // pbandk.wkt/OneofOptions.FieldDescriptors.features|{}features[0]
            final fun <get-features>(): pbandk/FieldDescriptor<pbandk.wkt/OneofOptions, pbandk.wkt/FeatureSet?> // pbandk.wkt/OneofOptions.FieldDescriptors.features.<get-features>|<get-features>(){}[0]
        final val uninterpretedOption // pbandk.wkt/OneofOptions.FieldDescriptors.uninterpretedOption|{}uninterpretedOption[0]
            final fun <get-uninterpretedOption>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/OneofOptions, kotlin.collections/List<pbandk.wkt/UninterpretedOption>, kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption>> // pbandk.wkt/OneofOptions.FieldDescriptors.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]
    }
}

sealed interface pbandk.wkt/Option : pbandk/Message { // pbandk.wkt/Option|null[0]
    abstract val descriptor // pbandk.wkt/Option.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Option> // pbandk.wkt/Option.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val name // pbandk.wkt/Option.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // pbandk.wkt/Option.name.<get-name>|<get-name>(){}[0]
    abstract val value // pbandk.wkt/Option.value|{}value[0]
        abstract fun <get-value>(): pbandk.wkt/Any? // pbandk.wkt/Option.value.<get-value>|<get-value>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableOption, kotlin/Unit>): pbandk.wkt/Option // pbandk.wkt/Option.copy|copy(kotlin.Function1<pbandk.wkt.MutableOption,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/String = ..., pbandk.wkt/Any? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Option // pbandk.wkt/Option.copy|copy(kotlin.String;pbandk.wkt.Any?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/Option // pbandk.wkt/Option.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/Option> { // pbandk.wkt/Option.Companion|null[0]
        final val defaultInstance // pbandk.wkt/Option.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/Option // pbandk.wkt/Option.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/Option.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Option> // pbandk.wkt/Option.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/Option.FieldDescriptors|null[0]
        final val name // pbandk.wkt/Option.FieldDescriptors.name|{}name[0]
            final fun <get-name>(): pbandk/FieldDescriptor<pbandk.wkt/Option, kotlin/String> // pbandk.wkt/Option.FieldDescriptors.name.<get-name>|<get-name>(){}[0]
        final val value // pbandk.wkt/Option.FieldDescriptors.value|{}value[0]
            final fun <get-value>(): pbandk/FieldDescriptor<pbandk.wkt/Option, pbandk.wkt/Any?> // pbandk.wkt/Option.FieldDescriptors.value.<get-value>|<get-value>(){}[0]
    }
}

sealed interface pbandk.wkt/ServiceDescriptorProto : pbandk/Message { // pbandk.wkt/ServiceDescriptorProto|null[0]
    abstract val descriptor // pbandk.wkt/ServiceDescriptorProto.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/ServiceDescriptorProto> // pbandk.wkt/ServiceDescriptorProto.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val method // pbandk.wkt/ServiceDescriptorProto.method|{}method[0]
        abstract fun <get-method>(): kotlin.collections/List<pbandk.wkt/MethodDescriptorProto> // pbandk.wkt/ServiceDescriptorProto.method.<get-method>|<get-method>(){}[0]
    abstract val name // pbandk.wkt/ServiceDescriptorProto.name|{}name[0]
        abstract fun <get-name>(): kotlin/String? // pbandk.wkt/ServiceDescriptorProto.name.<get-name>|<get-name>(){}[0]
    abstract val options // pbandk.wkt/ServiceDescriptorProto.options|{}options[0]
        abstract fun <get-options>(): pbandk.wkt/ServiceOptions? // pbandk.wkt/ServiceDescriptorProto.options.<get-options>|<get-options>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableServiceDescriptorProto, kotlin/Unit>): pbandk.wkt/ServiceDescriptorProto // pbandk.wkt/ServiceDescriptorProto.copy|copy(kotlin.Function1<pbandk.wkt.MutableServiceDescriptorProto,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/String? = ..., kotlin.collections/List<pbandk.wkt/MethodDescriptorProto> = ..., pbandk.wkt/ServiceOptions? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/ServiceDescriptorProto // pbandk.wkt/ServiceDescriptorProto.copy|copy(kotlin.String?;kotlin.collections.List<pbandk.wkt.MethodDescriptorProto>;pbandk.wkt.ServiceOptions?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/ServiceDescriptorProto // pbandk.wkt/ServiceDescriptorProto.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/ServiceDescriptorProto> { // pbandk.wkt/ServiceDescriptorProto.Companion|null[0]
        final val defaultInstance // pbandk.wkt/ServiceDescriptorProto.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/ServiceDescriptorProto // pbandk.wkt/ServiceDescriptorProto.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/ServiceDescriptorProto.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/ServiceDescriptorProto> // pbandk.wkt/ServiceDescriptorProto.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/ServiceDescriptorProto.FieldDescriptors|null[0]
        final val method // pbandk.wkt/ServiceDescriptorProto.FieldDescriptors.method|{}method[0]
            final fun <get-method>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/ServiceDescriptorProto, kotlin.collections/List<pbandk.wkt/MethodDescriptorProto>, kotlin.collections/MutableList<pbandk.wkt/MethodDescriptorProto>> // pbandk.wkt/ServiceDescriptorProto.FieldDescriptors.method.<get-method>|<get-method>(){}[0]
        final val name // pbandk.wkt/ServiceDescriptorProto.FieldDescriptors.name|{}name[0]
            final fun <get-name>(): pbandk/FieldDescriptor<pbandk.wkt/ServiceDescriptorProto, kotlin/String?> // pbandk.wkt/ServiceDescriptorProto.FieldDescriptors.name.<get-name>|<get-name>(){}[0]
        final val options // pbandk.wkt/ServiceDescriptorProto.FieldDescriptors.options|{}options[0]
            final fun <get-options>(): pbandk/FieldDescriptor<pbandk.wkt/ServiceDescriptorProto, pbandk.wkt/ServiceOptions?> // pbandk.wkt/ServiceDescriptorProto.FieldDescriptors.options.<get-options>|<get-options>(){}[0]
    }
}

sealed interface pbandk.wkt/ServiceOptions : pbandk/ExtendableMessage<pbandk.wkt/ServiceOptions> { // pbandk.wkt/ServiceOptions|null[0]
    abstract val deprecated // pbandk.wkt/ServiceOptions.deprecated|{}deprecated[0]
        abstract fun <get-deprecated>(): kotlin/Boolean? // pbandk.wkt/ServiceOptions.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
    abstract val descriptor // pbandk.wkt/ServiceOptions.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/ServiceOptions> // pbandk.wkt/ServiceOptions.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val features // pbandk.wkt/ServiceOptions.features|{}features[0]
        abstract fun <get-features>(): pbandk.wkt/FeatureSet? // pbandk.wkt/ServiceOptions.features.<get-features>|<get-features>(){}[0]
    abstract val uninterpretedOption // pbandk.wkt/ServiceOptions.uninterpretedOption|{}uninterpretedOption[0]
        abstract fun <get-uninterpretedOption>(): kotlin.collections/List<pbandk.wkt/UninterpretedOption> // pbandk.wkt/ServiceOptions.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableServiceOptions, kotlin/Unit>): pbandk.wkt/ServiceOptions // pbandk.wkt/ServiceOptions.copy|copy(kotlin.Function1<pbandk.wkt.MutableServiceOptions,kotlin.Unit>){}[0]
    abstract fun copy(pbandk.wkt/FeatureSet? = ..., kotlin/Boolean? = ..., kotlin.collections/List<pbandk.wkt/UninterpretedOption> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/ServiceOptions // pbandk.wkt/ServiceOptions.copy|copy(pbandk.wkt.FeatureSet?;kotlin.Boolean?;kotlin.collections.List<pbandk.wkt.UninterpretedOption>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/ServiceOptions // pbandk.wkt/ServiceOptions.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/ServiceOptions> { // pbandk.wkt/ServiceOptions.Companion|null[0]
        final val defaultInstance // pbandk.wkt/ServiceOptions.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/ServiceOptions // pbandk.wkt/ServiceOptions.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/ServiceOptions.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/ServiceOptions> // pbandk.wkt/ServiceOptions.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/ServiceOptions.FieldDescriptors|null[0]
        final val deprecated // pbandk.wkt/ServiceOptions.FieldDescriptors.deprecated|{}deprecated[0]
            final fun <get-deprecated>(): pbandk/FieldDescriptor<pbandk.wkt/ServiceOptions, kotlin/Boolean?> // pbandk.wkt/ServiceOptions.FieldDescriptors.deprecated.<get-deprecated>|<get-deprecated>(){}[0]
        final val features // pbandk.wkt/ServiceOptions.FieldDescriptors.features|{}features[0]
            final fun <get-features>(): pbandk/FieldDescriptor<pbandk.wkt/ServiceOptions, pbandk.wkt/FeatureSet?> // pbandk.wkt/ServiceOptions.FieldDescriptors.features.<get-features>|<get-features>(){}[0]
        final val uninterpretedOption // pbandk.wkt/ServiceOptions.FieldDescriptors.uninterpretedOption|{}uninterpretedOption[0]
            final fun <get-uninterpretedOption>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/ServiceOptions, kotlin.collections/List<pbandk.wkt/UninterpretedOption>, kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption>> // pbandk.wkt/ServiceOptions.FieldDescriptors.uninterpretedOption.<get-uninterpretedOption>|<get-uninterpretedOption>(){}[0]
    }
}

sealed interface pbandk.wkt/SourceCodeInfo : pbandk/Message { // pbandk.wkt/SourceCodeInfo|null[0]
    abstract val descriptor // pbandk.wkt/SourceCodeInfo.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/SourceCodeInfo> // pbandk.wkt/SourceCodeInfo.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val location // pbandk.wkt/SourceCodeInfo.location|{}location[0]
        abstract fun <get-location>(): kotlin.collections/List<pbandk.wkt/SourceCodeInfo.Location> // pbandk.wkt/SourceCodeInfo.location.<get-location>|<get-location>(){}[0]

    abstract fun copy(kotlin.collections/List<pbandk.wkt/SourceCodeInfo.Location> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/SourceCodeInfo // pbandk.wkt/SourceCodeInfo.copy|copy(kotlin.collections.List<pbandk.wkt.SourceCodeInfo.Location>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableSourceCodeInfo, kotlin/Unit>): pbandk.wkt/SourceCodeInfo // pbandk.wkt/SourceCodeInfo.copy|copy(kotlin.Function1<pbandk.wkt.MutableSourceCodeInfo,kotlin.Unit>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/SourceCodeInfo // pbandk.wkt/SourceCodeInfo.plus|plus(pbandk.Message?){}[0]

    sealed interface Location : pbandk/Message { // pbandk.wkt/SourceCodeInfo.Location|null[0]
        abstract val descriptor // pbandk.wkt/SourceCodeInfo.Location.descriptor|{}descriptor[0]
            abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/SourceCodeInfo.Location> // pbandk.wkt/SourceCodeInfo.Location.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        abstract val leadingComments // pbandk.wkt/SourceCodeInfo.Location.leadingComments|{}leadingComments[0]
            abstract fun <get-leadingComments>(): kotlin/String? // pbandk.wkt/SourceCodeInfo.Location.leadingComments.<get-leadingComments>|<get-leadingComments>(){}[0]
        abstract val leadingDetachedComments // pbandk.wkt/SourceCodeInfo.Location.leadingDetachedComments|{}leadingDetachedComments[0]
            abstract fun <get-leadingDetachedComments>(): kotlin.collections/List<kotlin/String> // pbandk.wkt/SourceCodeInfo.Location.leadingDetachedComments.<get-leadingDetachedComments>|<get-leadingDetachedComments>(){}[0]
        abstract val path // pbandk.wkt/SourceCodeInfo.Location.path|{}path[0]
            abstract fun <get-path>(): kotlin.collections/List<kotlin/Int> // pbandk.wkt/SourceCodeInfo.Location.path.<get-path>|<get-path>(){}[0]
        abstract val span // pbandk.wkt/SourceCodeInfo.Location.span|{}span[0]
            abstract fun <get-span>(): kotlin.collections/List<kotlin/Int> // pbandk.wkt/SourceCodeInfo.Location.span.<get-span>|<get-span>(){}[0]
        abstract val trailingComments // pbandk.wkt/SourceCodeInfo.Location.trailingComments|{}trailingComments[0]
            abstract fun <get-trailingComments>(): kotlin/String? // pbandk.wkt/SourceCodeInfo.Location.trailingComments.<get-trailingComments>|<get-trailingComments>(){}[0]

        abstract fun copy(kotlin.collections/List<kotlin/Int> = ..., kotlin.collections/List<kotlin/Int> = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin.collections/List<kotlin/String> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/SourceCodeInfo.Location // pbandk.wkt/SourceCodeInfo.Location.copy|copy(kotlin.collections.List<kotlin.Int>;kotlin.collections.List<kotlin.Int>;kotlin.String?;kotlin.String?;kotlin.collections.List<kotlin.String>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
        abstract fun copy(kotlin/Function1<pbandk.wkt/SourceCodeInfo.MutableLocation, kotlin/Unit>): pbandk.wkt/SourceCodeInfo.Location // pbandk.wkt/SourceCodeInfo.Location.copy|copy(kotlin.Function1<pbandk.wkt.SourceCodeInfo.MutableLocation,kotlin.Unit>){}[0]
        abstract fun plus(pbandk/Message?): pbandk.wkt/SourceCodeInfo.Location // pbandk.wkt/SourceCodeInfo.Location.plus|plus(pbandk.Message?){}[0]

        final object Companion : pbandk/Message.Companion<pbandk.wkt/SourceCodeInfo.Location> { // pbandk.wkt/SourceCodeInfo.Location.Companion|null[0]
            final val defaultInstance // pbandk.wkt/SourceCodeInfo.Location.Companion.defaultInstance|{}defaultInstance[0]
                final fun <get-defaultInstance>(): pbandk.wkt/SourceCodeInfo.Location // pbandk.wkt/SourceCodeInfo.Location.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
            final val descriptor // pbandk.wkt/SourceCodeInfo.Location.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/SourceCodeInfo.Location> // pbandk.wkt/SourceCodeInfo.Location.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        }

        final object FieldDescriptors { // pbandk.wkt/SourceCodeInfo.Location.FieldDescriptors|null[0]
            final val leadingComments // pbandk.wkt/SourceCodeInfo.Location.FieldDescriptors.leadingComments|{}leadingComments[0]
                final fun <get-leadingComments>(): pbandk/FieldDescriptor<pbandk.wkt/SourceCodeInfo.Location, kotlin/String?> // pbandk.wkt/SourceCodeInfo.Location.FieldDescriptors.leadingComments.<get-leadingComments>|<get-leadingComments>(){}[0]
            final val leadingDetachedComments // pbandk.wkt/SourceCodeInfo.Location.FieldDescriptors.leadingDetachedComments|{}leadingDetachedComments[0]
                final fun <get-leadingDetachedComments>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/SourceCodeInfo.Location, kotlin.collections/List<kotlin/String>, kotlin.collections/MutableList<kotlin/String>> // pbandk.wkt/SourceCodeInfo.Location.FieldDescriptors.leadingDetachedComments.<get-leadingDetachedComments>|<get-leadingDetachedComments>(){}[0]
            final val path // pbandk.wkt/SourceCodeInfo.Location.FieldDescriptors.path|{}path[0]
                final fun <get-path>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/SourceCodeInfo.Location, kotlin.collections/List<kotlin/Int>, kotlin.collections/MutableList<kotlin/Int>> // pbandk.wkt/SourceCodeInfo.Location.FieldDescriptors.path.<get-path>|<get-path>(){}[0]
            final val span // pbandk.wkt/SourceCodeInfo.Location.FieldDescriptors.span|{}span[0]
                final fun <get-span>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/SourceCodeInfo.Location, kotlin.collections/List<kotlin/Int>, kotlin.collections/MutableList<kotlin/Int>> // pbandk.wkt/SourceCodeInfo.Location.FieldDescriptors.span.<get-span>|<get-span>(){}[0]
            final val trailingComments // pbandk.wkt/SourceCodeInfo.Location.FieldDescriptors.trailingComments|{}trailingComments[0]
                final fun <get-trailingComments>(): pbandk/FieldDescriptor<pbandk.wkt/SourceCodeInfo.Location, kotlin/String?> // pbandk.wkt/SourceCodeInfo.Location.FieldDescriptors.trailingComments.<get-trailingComments>|<get-trailingComments>(){}[0]
        }
    }

    sealed interface MutableLocation : pbandk.wkt/SourceCodeInfo.Location, pbandk/MutableMessage<pbandk.wkt/SourceCodeInfo.Location> { // pbandk.wkt/SourceCodeInfo.MutableLocation|null[0]
        abstract val leadingDetachedComments // pbandk.wkt/SourceCodeInfo.MutableLocation.leadingDetachedComments|{}leadingDetachedComments[0]
            abstract fun <get-leadingDetachedComments>(): kotlin.collections/MutableList<kotlin/String> // pbandk.wkt/SourceCodeInfo.MutableLocation.leadingDetachedComments.<get-leadingDetachedComments>|<get-leadingDetachedComments>(){}[0]
        abstract val path // pbandk.wkt/SourceCodeInfo.MutableLocation.path|{}path[0]
            abstract fun <get-path>(): kotlin.collections/MutableList<kotlin/Int> // pbandk.wkt/SourceCodeInfo.MutableLocation.path.<get-path>|<get-path>(){}[0]
        abstract val span // pbandk.wkt/SourceCodeInfo.MutableLocation.span|{}span[0]
            abstract fun <get-span>(): kotlin.collections/MutableList<kotlin/Int> // pbandk.wkt/SourceCodeInfo.MutableLocation.span.<get-span>|<get-span>(){}[0]

        abstract var leadingComments // pbandk.wkt/SourceCodeInfo.MutableLocation.leadingComments|{}leadingComments[0]
            abstract fun <get-leadingComments>(): kotlin/String? // pbandk.wkt/SourceCodeInfo.MutableLocation.leadingComments.<get-leadingComments>|<get-leadingComments>(){}[0]
            abstract fun <set-leadingComments>(kotlin/String?) // pbandk.wkt/SourceCodeInfo.MutableLocation.leadingComments.<set-leadingComments>|<set-leadingComments>(kotlin.String?){}[0]
        abstract var trailingComments // pbandk.wkt/SourceCodeInfo.MutableLocation.trailingComments|{}trailingComments[0]
            abstract fun <get-trailingComments>(): kotlin/String? // pbandk.wkt/SourceCodeInfo.MutableLocation.trailingComments.<get-trailingComments>|<get-trailingComments>(){}[0]
            abstract fun <set-trailingComments>(kotlin/String?) // pbandk.wkt/SourceCodeInfo.MutableLocation.trailingComments.<set-trailingComments>|<set-trailingComments>(kotlin.String?){}[0]
    }

    final object Companion : pbandk/Message.Companion<pbandk.wkt/SourceCodeInfo> { // pbandk.wkt/SourceCodeInfo.Companion|null[0]
        final val defaultInstance // pbandk.wkt/SourceCodeInfo.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/SourceCodeInfo // pbandk.wkt/SourceCodeInfo.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/SourceCodeInfo.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/SourceCodeInfo> // pbandk.wkt/SourceCodeInfo.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun Location(kotlin.collections/List<kotlin/Int> = ..., kotlin.collections/List<kotlin/Int> = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin.collections/List<kotlin/String> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/SourceCodeInfo.Location // pbandk.wkt/SourceCodeInfo.Companion.Location|Location(kotlin.collections.List<kotlin.Int>;kotlin.collections.List<kotlin.Int>;kotlin.String?;kotlin.String?;kotlin.collections.List<kotlin.String>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/SourceCodeInfo.FieldDescriptors|null[0]
        final val location // pbandk.wkt/SourceCodeInfo.FieldDescriptors.location|{}location[0]
            final fun <get-location>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/SourceCodeInfo, kotlin.collections/List<pbandk.wkt/SourceCodeInfo.Location>, kotlin.collections/MutableList<pbandk.wkt/SourceCodeInfo.Location>> // pbandk.wkt/SourceCodeInfo.FieldDescriptors.location.<get-location>|<get-location>(){}[0]
    }
}

sealed interface pbandk.wkt/SourceContext : pbandk/Message { // pbandk.wkt/SourceContext|null[0]
    abstract val descriptor // pbandk.wkt/SourceContext.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/SourceContext> // pbandk.wkt/SourceContext.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val fileName // pbandk.wkt/SourceContext.fileName|{}fileName[0]
        abstract fun <get-fileName>(): kotlin/String // pbandk.wkt/SourceContext.fileName.<get-fileName>|<get-fileName>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableSourceContext, kotlin/Unit>): pbandk.wkt/SourceContext // pbandk.wkt/SourceContext.copy|copy(kotlin.Function1<pbandk.wkt.MutableSourceContext,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/String = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/SourceContext // pbandk.wkt/SourceContext.copy|copy(kotlin.String;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/SourceContext // pbandk.wkt/SourceContext.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/SourceContext> { // pbandk.wkt/SourceContext.Companion|null[0]
        final val defaultInstance // pbandk.wkt/SourceContext.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/SourceContext // pbandk.wkt/SourceContext.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/SourceContext.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/SourceContext> // pbandk.wkt/SourceContext.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/SourceContext.FieldDescriptors|null[0]
        final val fileName // pbandk.wkt/SourceContext.FieldDescriptors.fileName|{}fileName[0]
            final fun <get-fileName>(): pbandk/FieldDescriptor<pbandk.wkt/SourceContext, kotlin/String> // pbandk.wkt/SourceContext.FieldDescriptors.fileName.<get-fileName>|<get-fileName>(){}[0]
    }
}

sealed interface pbandk.wkt/StringValue : pbandk/Message { // pbandk.wkt/StringValue|null[0]
    abstract val descriptor // pbandk.wkt/StringValue.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/StringValue> // pbandk.wkt/StringValue.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val value // pbandk.wkt/StringValue.value|{}value[0]
        abstract fun <get-value>(): kotlin/String // pbandk.wkt/StringValue.value.<get-value>|<get-value>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableStringValue, kotlin/Unit>): pbandk.wkt/StringValue // pbandk.wkt/StringValue.copy|copy(kotlin.Function1<pbandk.wkt.MutableStringValue,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/String = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/StringValue // pbandk.wkt/StringValue.copy|copy(kotlin.String;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/StringValue // pbandk.wkt/StringValue.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/StringValue> { // pbandk.wkt/StringValue.Companion|null[0]
        final val defaultInstance // pbandk.wkt/StringValue.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/StringValue // pbandk.wkt/StringValue.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/StringValue.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/StringValue> // pbandk.wkt/StringValue.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/StringValue.FieldDescriptors|null[0]
        final val value // pbandk.wkt/StringValue.FieldDescriptors.value|{}value[0]
            final fun <get-value>(): pbandk/FieldDescriptor<pbandk.wkt/StringValue, kotlin/String> // pbandk.wkt/StringValue.FieldDescriptors.value.<get-value>|<get-value>(){}[0]
    }
}

sealed interface pbandk.wkt/Struct : pbandk/Message { // pbandk.wkt/Struct|null[0]
    abstract val descriptor // pbandk.wkt/Struct.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Struct> // pbandk.wkt/Struct.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val fields // pbandk.wkt/Struct.fields|{}fields[0]
        abstract fun <get-fields>(): kotlin.collections/Map<kotlin/String, pbandk.wkt/Value> // pbandk.wkt/Struct.fields.<get-fields>|<get-fields>(){}[0]

    abstract fun copy(kotlin.collections/Map<kotlin/String, pbandk.wkt/Value> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Struct // pbandk.wkt/Struct.copy|copy(kotlin.collections.Map<kotlin.String,pbandk.wkt.Value>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableStruct, kotlin/Unit>): pbandk.wkt/Struct // pbandk.wkt/Struct.copy|copy(kotlin.Function1<pbandk.wkt.MutableStruct,kotlin.Unit>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/Struct // pbandk.wkt/Struct.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/Struct> { // pbandk.wkt/Struct.Companion|null[0]
        final val defaultInstance // pbandk.wkt/Struct.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/Struct // pbandk.wkt/Struct.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/Struct.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Struct> // pbandk.wkt/Struct.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/Struct.FieldDescriptors|null[0]
        final val fields // pbandk.wkt/Struct.FieldDescriptors.fields|{}fields[0]
            final fun <get-fields>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/Struct, kotlin.collections/Map<kotlin/String, pbandk.wkt/Value>, kotlin.collections/MutableMap<kotlin/String, pbandk.wkt/Value>> // pbandk.wkt/Struct.FieldDescriptors.fields.<get-fields>|<get-fields>(){}[0]
    }
}

sealed interface pbandk.wkt/Syntax : pbandk/Message.Enum { // pbandk.wkt/Syntax|null[0]
    open val descriptor // pbandk.wkt/Syntax.descriptor|{}descriptor[0]
        open fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/Syntax> // pbandk.wkt/Syntax.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

    final class UNRECOGNIZED : pbandk.gen/UnrecognizedEnumValue<pbandk.wkt/Syntax>, pbandk.wkt/Syntax { // pbandk.wkt/Syntax.UNRECOGNIZED|null[0]
        constructor <init>(kotlin/Int? = ..., kotlin/String? = ...) // pbandk.wkt/Syntax.UNRECOGNIZED.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]
    }

    final object Companion : pbandk/Message.Enum.Companion<pbandk.wkt/Syntax> { // pbandk.wkt/Syntax.Companion|null[0]
        final val descriptor // pbandk.wkt/Syntax.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/EnumDescriptor<pbandk.wkt/Syntax> // pbandk.wkt/Syntax.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        final val values // pbandk.wkt/Syntax.Companion.values|{}values[0]
            final fun <get-values>(): kotlin.collections/List<pbandk.wkt/Syntax> // pbandk.wkt/Syntax.Companion.values.<get-values>|<get-values>(){}[0]

        final fun fromName(kotlin/String): pbandk.wkt/Syntax // pbandk.wkt/Syntax.Companion.fromName|fromName(kotlin.String){}[0]
        final fun fromValue(kotlin/Int): pbandk.wkt/Syntax // pbandk.wkt/Syntax.Companion.fromValue|fromValue(kotlin.Int){}[0]
    }

    final object EDITIONS : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Syntax>, pbandk.wkt/Syntax // pbandk.wkt/Syntax.EDITIONS|null[0]

    final object PROTO2 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Syntax>, pbandk.wkt/Syntax // pbandk.wkt/Syntax.PROTO2|null[0]

    final object PROTO3 : pbandk.gen/GeneratedEnumValue<pbandk.wkt/Syntax>, pbandk.wkt/Syntax // pbandk.wkt/Syntax.PROTO3|null[0]
}

sealed interface pbandk.wkt/Timestamp : pbandk/Message { // pbandk.wkt/Timestamp|null[0]
    abstract val descriptor // pbandk.wkt/Timestamp.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Timestamp> // pbandk.wkt/Timestamp.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val nanos // pbandk.wkt/Timestamp.nanos|{}nanos[0]
        abstract fun <get-nanos>(): kotlin/Int // pbandk.wkt/Timestamp.nanos.<get-nanos>|<get-nanos>(){}[0]
    abstract val seconds // pbandk.wkt/Timestamp.seconds|{}seconds[0]
        abstract fun <get-seconds>(): kotlin/Long // pbandk.wkt/Timestamp.seconds.<get-seconds>|<get-seconds>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableTimestamp, kotlin/Unit>): pbandk.wkt/Timestamp // pbandk.wkt/Timestamp.copy|copy(kotlin.Function1<pbandk.wkt.MutableTimestamp,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/Long = ..., kotlin/Int = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Timestamp // pbandk.wkt/Timestamp.copy|copy(kotlin.Long;kotlin.Int;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/Timestamp // pbandk.wkt/Timestamp.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/Timestamp> { // pbandk.wkt/Timestamp.Companion|null[0]
        final val defaultInstance // pbandk.wkt/Timestamp.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/Timestamp // pbandk.wkt/Timestamp.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/Timestamp.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Timestamp> // pbandk.wkt/Timestamp.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/Timestamp.FieldDescriptors|null[0]
        final val nanos // pbandk.wkt/Timestamp.FieldDescriptors.nanos|{}nanos[0]
            final fun <get-nanos>(): pbandk/FieldDescriptor<pbandk.wkt/Timestamp, kotlin/Int> // pbandk.wkt/Timestamp.FieldDescriptors.nanos.<get-nanos>|<get-nanos>(){}[0]
        final val seconds // pbandk.wkt/Timestamp.FieldDescriptors.seconds|{}seconds[0]
            final fun <get-seconds>(): pbandk/FieldDescriptor<pbandk.wkt/Timestamp, kotlin/Long> // pbandk.wkt/Timestamp.FieldDescriptors.seconds.<get-seconds>|<get-seconds>(){}[0]
    }
}

sealed interface pbandk.wkt/Type : pbandk/Message { // pbandk.wkt/Type|null[0]
    abstract val descriptor // pbandk.wkt/Type.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Type> // pbandk.wkt/Type.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val edition // pbandk.wkt/Type.edition|{}edition[0]
        abstract fun <get-edition>(): kotlin/String // pbandk.wkt/Type.edition.<get-edition>|<get-edition>(){}[0]
    abstract val fields // pbandk.wkt/Type.fields|{}fields[0]
        abstract fun <get-fields>(): kotlin.collections/List<pbandk.wkt/Field> // pbandk.wkt/Type.fields.<get-fields>|<get-fields>(){}[0]
    abstract val name // pbandk.wkt/Type.name|{}name[0]
        abstract fun <get-name>(): kotlin/String // pbandk.wkt/Type.name.<get-name>|<get-name>(){}[0]
    abstract val oneofs // pbandk.wkt/Type.oneofs|{}oneofs[0]
        abstract fun <get-oneofs>(): kotlin.collections/List<kotlin/String> // pbandk.wkt/Type.oneofs.<get-oneofs>|<get-oneofs>(){}[0]
    abstract val options // pbandk.wkt/Type.options|{}options[0]
        abstract fun <get-options>(): kotlin.collections/List<pbandk.wkt/Option> // pbandk.wkt/Type.options.<get-options>|<get-options>(){}[0]
    abstract val sourceContext // pbandk.wkt/Type.sourceContext|{}sourceContext[0]
        abstract fun <get-sourceContext>(): pbandk.wkt/SourceContext? // pbandk.wkt/Type.sourceContext.<get-sourceContext>|<get-sourceContext>(){}[0]
    abstract val syntax // pbandk.wkt/Type.syntax|{}syntax[0]
        abstract fun <get-syntax>(): pbandk.wkt/Syntax // pbandk.wkt/Type.syntax.<get-syntax>|<get-syntax>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableType, kotlin/Unit>): pbandk.wkt/Type // pbandk.wkt/Type.copy|copy(kotlin.Function1<pbandk.wkt.MutableType,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/String = ..., kotlin.collections/List<pbandk.wkt/Field> = ..., kotlin.collections/List<kotlin/String> = ..., kotlin.collections/List<pbandk.wkt/Option> = ..., pbandk.wkt/SourceContext? = ..., pbandk.wkt/Syntax = ..., kotlin/String = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Type // pbandk.wkt/Type.copy|copy(kotlin.String;kotlin.collections.List<pbandk.wkt.Field>;kotlin.collections.List<kotlin.String>;kotlin.collections.List<pbandk.wkt.Option>;pbandk.wkt.SourceContext?;pbandk.wkt.Syntax;kotlin.String;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/Type // pbandk.wkt/Type.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/Type> { // pbandk.wkt/Type.Companion|null[0]
        final val defaultInstance // pbandk.wkt/Type.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/Type // pbandk.wkt/Type.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/Type.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Type> // pbandk.wkt/Type.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/Type.FieldDescriptors|null[0]
        final val edition // pbandk.wkt/Type.FieldDescriptors.edition|{}edition[0]
            final fun <get-edition>(): pbandk/FieldDescriptor<pbandk.wkt/Type, kotlin/String> // pbandk.wkt/Type.FieldDescriptors.edition.<get-edition>|<get-edition>(){}[0]
        final val fields // pbandk.wkt/Type.FieldDescriptors.fields|{}fields[0]
            final fun <get-fields>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/Type, kotlin.collections/List<pbandk.wkt/Field>, kotlin.collections/MutableList<pbandk.wkt/Field>> // pbandk.wkt/Type.FieldDescriptors.fields.<get-fields>|<get-fields>(){}[0]
        final val name // pbandk.wkt/Type.FieldDescriptors.name|{}name[0]
            final fun <get-name>(): pbandk/FieldDescriptor<pbandk.wkt/Type, kotlin/String> // pbandk.wkt/Type.FieldDescriptors.name.<get-name>|<get-name>(){}[0]
        final val oneofs // pbandk.wkt/Type.FieldDescriptors.oneofs|{}oneofs[0]
            final fun <get-oneofs>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/Type, kotlin.collections/List<kotlin/String>, kotlin.collections/MutableList<kotlin/String>> // pbandk.wkt/Type.FieldDescriptors.oneofs.<get-oneofs>|<get-oneofs>(){}[0]
        final val options // pbandk.wkt/Type.FieldDescriptors.options|{}options[0]
            final fun <get-options>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/Type, kotlin.collections/List<pbandk.wkt/Option>, kotlin.collections/MutableList<pbandk.wkt/Option>> // pbandk.wkt/Type.FieldDescriptors.options.<get-options>|<get-options>(){}[0]
        final val sourceContext // pbandk.wkt/Type.FieldDescriptors.sourceContext|{}sourceContext[0]
            final fun <get-sourceContext>(): pbandk/FieldDescriptor<pbandk.wkt/Type, pbandk.wkt/SourceContext?> // pbandk.wkt/Type.FieldDescriptors.sourceContext.<get-sourceContext>|<get-sourceContext>(){}[0]
        final val syntax // pbandk.wkt/Type.FieldDescriptors.syntax|{}syntax[0]
            final fun <get-syntax>(): pbandk/FieldDescriptor<pbandk.wkt/Type, pbandk.wkt/Syntax> // pbandk.wkt/Type.FieldDescriptors.syntax.<get-syntax>|<get-syntax>(){}[0]
    }
}

sealed interface pbandk.wkt/UInt32Value : pbandk/Message { // pbandk.wkt/UInt32Value|null[0]
    abstract val descriptor // pbandk.wkt/UInt32Value.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/UInt32Value> // pbandk.wkt/UInt32Value.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val value // pbandk.wkt/UInt32Value.value|{}value[0]
        abstract fun <get-value>(): kotlin/Int // pbandk.wkt/UInt32Value.value.<get-value>|<get-value>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableUInt32Value, kotlin/Unit>): pbandk.wkt/UInt32Value // pbandk.wkt/UInt32Value.copy|copy(kotlin.Function1<pbandk.wkt.MutableUInt32Value,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/Int = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/UInt32Value // pbandk.wkt/UInt32Value.copy|copy(kotlin.Int;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/UInt32Value // pbandk.wkt/UInt32Value.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/UInt32Value> { // pbandk.wkt/UInt32Value.Companion|null[0]
        final val defaultInstance // pbandk.wkt/UInt32Value.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/UInt32Value // pbandk.wkt/UInt32Value.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/UInt32Value.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/UInt32Value> // pbandk.wkt/UInt32Value.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/UInt32Value.FieldDescriptors|null[0]
        final val value // pbandk.wkt/UInt32Value.FieldDescriptors.value|{}value[0]
            final fun <get-value>(): pbandk/FieldDescriptor<pbandk.wkt/UInt32Value, kotlin/Int> // pbandk.wkt/UInt32Value.FieldDescriptors.value.<get-value>|<get-value>(){}[0]
    }
}

sealed interface pbandk.wkt/UInt64Value : pbandk/Message { // pbandk.wkt/UInt64Value|null[0]
    abstract val descriptor // pbandk.wkt/UInt64Value.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/UInt64Value> // pbandk.wkt/UInt64Value.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val value // pbandk.wkt/UInt64Value.value|{}value[0]
        abstract fun <get-value>(): kotlin/Long // pbandk.wkt/UInt64Value.value.<get-value>|<get-value>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableUInt64Value, kotlin/Unit>): pbandk.wkt/UInt64Value // pbandk.wkt/UInt64Value.copy|copy(kotlin.Function1<pbandk.wkt.MutableUInt64Value,kotlin.Unit>){}[0]
    abstract fun copy(kotlin/Long = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/UInt64Value // pbandk.wkt/UInt64Value.copy|copy(kotlin.Long;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/UInt64Value // pbandk.wkt/UInt64Value.plus|plus(pbandk.Message?){}[0]

    final object Companion : pbandk/Message.Companion<pbandk.wkt/UInt64Value> { // pbandk.wkt/UInt64Value.Companion|null[0]
        final val defaultInstance // pbandk.wkt/UInt64Value.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/UInt64Value // pbandk.wkt/UInt64Value.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/UInt64Value.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/UInt64Value> // pbandk.wkt/UInt64Value.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/UInt64Value.FieldDescriptors|null[0]
        final val value // pbandk.wkt/UInt64Value.FieldDescriptors.value|{}value[0]
            final fun <get-value>(): pbandk/FieldDescriptor<pbandk.wkt/UInt64Value, kotlin/Long> // pbandk.wkt/UInt64Value.FieldDescriptors.value.<get-value>|<get-value>(){}[0]
    }
}

sealed interface pbandk.wkt/UninterpretedOption : pbandk/Message { // pbandk.wkt/UninterpretedOption|null[0]
    abstract val aggregateValue // pbandk.wkt/UninterpretedOption.aggregateValue|{}aggregateValue[0]
        abstract fun <get-aggregateValue>(): kotlin/String? // pbandk.wkt/UninterpretedOption.aggregateValue.<get-aggregateValue>|<get-aggregateValue>(){}[0]
    abstract val descriptor // pbandk.wkt/UninterpretedOption.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/UninterpretedOption> // pbandk.wkt/UninterpretedOption.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val doubleValue // pbandk.wkt/UninterpretedOption.doubleValue|{}doubleValue[0]
        abstract fun <get-doubleValue>(): kotlin/Double? // pbandk.wkt/UninterpretedOption.doubleValue.<get-doubleValue>|<get-doubleValue>(){}[0]
    abstract val identifierValue // pbandk.wkt/UninterpretedOption.identifierValue|{}identifierValue[0]
        abstract fun <get-identifierValue>(): kotlin/String? // pbandk.wkt/UninterpretedOption.identifierValue.<get-identifierValue>|<get-identifierValue>(){}[0]
    abstract val name // pbandk.wkt/UninterpretedOption.name|{}name[0]
        abstract fun <get-name>(): kotlin.collections/List<pbandk.wkt/UninterpretedOption.NamePart> // pbandk.wkt/UninterpretedOption.name.<get-name>|<get-name>(){}[0]
    abstract val negativeIntValue // pbandk.wkt/UninterpretedOption.negativeIntValue|{}negativeIntValue[0]
        abstract fun <get-negativeIntValue>(): kotlin/Long? // pbandk.wkt/UninterpretedOption.negativeIntValue.<get-negativeIntValue>|<get-negativeIntValue>(){}[0]
    abstract val positiveIntValue // pbandk.wkt/UninterpretedOption.positiveIntValue|{}positiveIntValue[0]
        abstract fun <get-positiveIntValue>(): kotlin/Long? // pbandk.wkt/UninterpretedOption.positiveIntValue.<get-positiveIntValue>|<get-positiveIntValue>(){}[0]
    abstract val stringValue // pbandk.wkt/UninterpretedOption.stringValue|{}stringValue[0]
        abstract fun <get-stringValue>(): pbandk/ByteArr? // pbandk.wkt/UninterpretedOption.stringValue.<get-stringValue>|<get-stringValue>(){}[0]

    abstract fun copy(kotlin.collections/List<pbandk.wkt/UninterpretedOption.NamePart> = ..., kotlin/String? = ..., kotlin/Long? = ..., kotlin/Long? = ..., kotlin/Double? = ..., pbandk/ByteArr? = ..., kotlin/String? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/UninterpretedOption // pbandk.wkt/UninterpretedOption.copy|copy(kotlin.collections.List<pbandk.wkt.UninterpretedOption.NamePart>;kotlin.String?;kotlin.Long?;kotlin.Long?;kotlin.Double?;pbandk.ByteArr?;kotlin.String?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableUninterpretedOption, kotlin/Unit>): pbandk.wkt/UninterpretedOption // pbandk.wkt/UninterpretedOption.copy|copy(kotlin.Function1<pbandk.wkt.MutableUninterpretedOption,kotlin.Unit>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/UninterpretedOption // pbandk.wkt/UninterpretedOption.plus|plus(pbandk.Message?){}[0]

    sealed interface MutableNamePart : pbandk.wkt/UninterpretedOption.NamePart, pbandk/MutableMessage<pbandk.wkt/UninterpretedOption.NamePart> { // pbandk.wkt/UninterpretedOption.MutableNamePart|null[0]
        abstract var isExtension // pbandk.wkt/UninterpretedOption.MutableNamePart.isExtension|{}isExtension[0]
            abstract fun <get-isExtension>(): kotlin/Boolean // pbandk.wkt/UninterpretedOption.MutableNamePart.isExtension.<get-isExtension>|<get-isExtension>(){}[0]
            abstract fun <set-isExtension>(kotlin/Boolean) // pbandk.wkt/UninterpretedOption.MutableNamePart.isExtension.<set-isExtension>|<set-isExtension>(kotlin.Boolean){}[0]
        abstract var namePart // pbandk.wkt/UninterpretedOption.MutableNamePart.namePart|{}namePart[0]
            abstract fun <get-namePart>(): kotlin/String // pbandk.wkt/UninterpretedOption.MutableNamePart.namePart.<get-namePart>|<get-namePart>(){}[0]
            abstract fun <set-namePart>(kotlin/String) // pbandk.wkt/UninterpretedOption.MutableNamePart.namePart.<set-namePart>|<set-namePart>(kotlin.String){}[0]
    }

    sealed interface NamePart : pbandk/Message { // pbandk.wkt/UninterpretedOption.NamePart|null[0]
        abstract val descriptor // pbandk.wkt/UninterpretedOption.NamePart.descriptor|{}descriptor[0]
            abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/UninterpretedOption.NamePart> // pbandk.wkt/UninterpretedOption.NamePart.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        abstract val isExtension // pbandk.wkt/UninterpretedOption.NamePart.isExtension|{}isExtension[0]
            abstract fun <get-isExtension>(): kotlin/Boolean // pbandk.wkt/UninterpretedOption.NamePart.isExtension.<get-isExtension>|<get-isExtension>(){}[0]
        abstract val namePart // pbandk.wkt/UninterpretedOption.NamePart.namePart|{}namePart[0]
            abstract fun <get-namePart>(): kotlin/String // pbandk.wkt/UninterpretedOption.NamePart.namePart.<get-namePart>|<get-namePart>(){}[0]

        abstract fun copy(kotlin/Function1<pbandk.wkt/UninterpretedOption.MutableNamePart, kotlin/Unit>): pbandk.wkt/UninterpretedOption.NamePart // pbandk.wkt/UninterpretedOption.NamePart.copy|copy(kotlin.Function1<pbandk.wkt.UninterpretedOption.MutableNamePart,kotlin.Unit>){}[0]
        abstract fun copy(kotlin/String = ..., kotlin/Boolean = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/UninterpretedOption.NamePart // pbandk.wkt/UninterpretedOption.NamePart.copy|copy(kotlin.String;kotlin.Boolean;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
        abstract fun plus(pbandk/Message?): pbandk.wkt/UninterpretedOption.NamePart // pbandk.wkt/UninterpretedOption.NamePart.plus|plus(pbandk.Message?){}[0]

        final object Companion : pbandk/Message.Companion<pbandk.wkt/UninterpretedOption.NamePart> { // pbandk.wkt/UninterpretedOption.NamePart.Companion|null[0]
            final val defaultInstance // pbandk.wkt/UninterpretedOption.NamePart.Companion.defaultInstance|{}defaultInstance[0]
                final fun <get-defaultInstance>(): pbandk.wkt/UninterpretedOption.NamePart // pbandk.wkt/UninterpretedOption.NamePart.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
            final val descriptor // pbandk.wkt/UninterpretedOption.NamePart.Companion.descriptor|{}descriptor[0]
                final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/UninterpretedOption.NamePart> // pbandk.wkt/UninterpretedOption.NamePart.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        }

        final object FieldDescriptors { // pbandk.wkt/UninterpretedOption.NamePart.FieldDescriptors|null[0]
            final val isExtension // pbandk.wkt/UninterpretedOption.NamePart.FieldDescriptors.isExtension|{}isExtension[0]
                final fun <get-isExtension>(): pbandk/FieldDescriptor<pbandk.wkt/UninterpretedOption.NamePart, kotlin/Boolean> // pbandk.wkt/UninterpretedOption.NamePart.FieldDescriptors.isExtension.<get-isExtension>|<get-isExtension>(){}[0]
            final val namePart // pbandk.wkt/UninterpretedOption.NamePart.FieldDescriptors.namePart|{}namePart[0]
                final fun <get-namePart>(): pbandk/FieldDescriptor<pbandk.wkt/UninterpretedOption.NamePart, kotlin/String> // pbandk.wkt/UninterpretedOption.NamePart.FieldDescriptors.namePart.<get-namePart>|<get-namePart>(){}[0]
        }
    }

    final object Companion : pbandk/Message.Companion<pbandk.wkt/UninterpretedOption> { // pbandk.wkt/UninterpretedOption.Companion|null[0]
        final val defaultInstance // pbandk.wkt/UninterpretedOption.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/UninterpretedOption // pbandk.wkt/UninterpretedOption.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/UninterpretedOption.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/UninterpretedOption> // pbandk.wkt/UninterpretedOption.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]

        final fun NamePart(kotlin/String, kotlin/Boolean, kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/UninterpretedOption.NamePart // pbandk.wkt/UninterpretedOption.Companion.NamePart|NamePart(kotlin.String;kotlin.Boolean;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/UninterpretedOption.FieldDescriptors|null[0]
        final val aggregateValue // pbandk.wkt/UninterpretedOption.FieldDescriptors.aggregateValue|{}aggregateValue[0]
            final fun <get-aggregateValue>(): pbandk/FieldDescriptor<pbandk.wkt/UninterpretedOption, kotlin/String?> // pbandk.wkt/UninterpretedOption.FieldDescriptors.aggregateValue.<get-aggregateValue>|<get-aggregateValue>(){}[0]
        final val doubleValue // pbandk.wkt/UninterpretedOption.FieldDescriptors.doubleValue|{}doubleValue[0]
            final fun <get-doubleValue>(): pbandk/FieldDescriptor<pbandk.wkt/UninterpretedOption, kotlin/Double?> // pbandk.wkt/UninterpretedOption.FieldDescriptors.doubleValue.<get-doubleValue>|<get-doubleValue>(){}[0]
        final val identifierValue // pbandk.wkt/UninterpretedOption.FieldDescriptors.identifierValue|{}identifierValue[0]
            final fun <get-identifierValue>(): pbandk/FieldDescriptor<pbandk.wkt/UninterpretedOption, kotlin/String?> // pbandk.wkt/UninterpretedOption.FieldDescriptors.identifierValue.<get-identifierValue>|<get-identifierValue>(){}[0]
        final val name // pbandk.wkt/UninterpretedOption.FieldDescriptors.name|{}name[0]
            final fun <get-name>(): pbandk/FieldDescriptor.MutableValue<pbandk.wkt/UninterpretedOption, kotlin.collections/List<pbandk.wkt/UninterpretedOption.NamePart>, kotlin.collections/MutableList<pbandk.wkt/UninterpretedOption.NamePart>> // pbandk.wkt/UninterpretedOption.FieldDescriptors.name.<get-name>|<get-name>(){}[0]
        final val negativeIntValue // pbandk.wkt/UninterpretedOption.FieldDescriptors.negativeIntValue|{}negativeIntValue[0]
            final fun <get-negativeIntValue>(): pbandk/FieldDescriptor<pbandk.wkt/UninterpretedOption, kotlin/Long?> // pbandk.wkt/UninterpretedOption.FieldDescriptors.negativeIntValue.<get-negativeIntValue>|<get-negativeIntValue>(){}[0]
        final val positiveIntValue // pbandk.wkt/UninterpretedOption.FieldDescriptors.positiveIntValue|{}positiveIntValue[0]
            final fun <get-positiveIntValue>(): pbandk/FieldDescriptor<pbandk.wkt/UninterpretedOption, kotlin/Long?> // pbandk.wkt/UninterpretedOption.FieldDescriptors.positiveIntValue.<get-positiveIntValue>|<get-positiveIntValue>(){}[0]
        final val stringValue // pbandk.wkt/UninterpretedOption.FieldDescriptors.stringValue|{}stringValue[0]
            final fun <get-stringValue>(): pbandk/FieldDescriptor<pbandk.wkt/UninterpretedOption, pbandk/ByteArr?> // pbandk.wkt/UninterpretedOption.FieldDescriptors.stringValue.<get-stringValue>|<get-stringValue>(){}[0]
    }
}

sealed interface pbandk.wkt/Value : pbandk/Message { // pbandk.wkt/Value|null[0]
    abstract val boolValue // pbandk.wkt/Value.boolValue|{}boolValue[0]
        abstract fun <get-boolValue>(): kotlin/Boolean? // pbandk.wkt/Value.boolValue.<get-boolValue>|<get-boolValue>(){}[0]
    abstract val descriptor // pbandk.wkt/Value.descriptor|{}descriptor[0]
        abstract fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Value> // pbandk.wkt/Value.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    abstract val kind // pbandk.wkt/Value.kind|{}kind[0]
        abstract fun <get-kind>(): pbandk.wkt/Value.Kind<*>? // pbandk.wkt/Value.kind.<get-kind>|<get-kind>(){}[0]
    abstract val listValue // pbandk.wkt/Value.listValue|{}listValue[0]
        abstract fun <get-listValue>(): pbandk.wkt/ListValue? // pbandk.wkt/Value.listValue.<get-listValue>|<get-listValue>(){}[0]
    abstract val nullValue // pbandk.wkt/Value.nullValue|{}nullValue[0]
        abstract fun <get-nullValue>(): pbandk.wkt/NullValue? // pbandk.wkt/Value.nullValue.<get-nullValue>|<get-nullValue>(){}[0]
    abstract val numberValue // pbandk.wkt/Value.numberValue|{}numberValue[0]
        abstract fun <get-numberValue>(): kotlin/Double? // pbandk.wkt/Value.numberValue.<get-numberValue>|<get-numberValue>(){}[0]
    abstract val stringValue // pbandk.wkt/Value.stringValue|{}stringValue[0]
        abstract fun <get-stringValue>(): kotlin/String? // pbandk.wkt/Value.stringValue.<get-stringValue>|<get-stringValue>(){}[0]
    abstract val structValue // pbandk.wkt/Value.structValue|{}structValue[0]
        abstract fun <get-structValue>(): pbandk.wkt/Struct? // pbandk.wkt/Value.structValue.<get-structValue>|<get-structValue>(){}[0]

    abstract fun copy(kotlin/Function1<pbandk.wkt/MutableValue, kotlin/Unit>): pbandk.wkt/Value // pbandk.wkt/Value.copy|copy(kotlin.Function1<pbandk.wkt.MutableValue,kotlin.Unit>){}[0]
    abstract fun copy(pbandk.wkt/Value.Kind<*>? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Value // pbandk.wkt/Value.copy|copy(pbandk.wkt.Value.Kind<*>?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
    abstract fun plus(pbandk/Message?): pbandk.wkt/Value // pbandk.wkt/Value.plus|plus(pbandk.Message?){}[0]

    sealed interface <#A1: kotlin/Any> Kind : pbandk/Message.OneOf<#A1> { // pbandk.wkt/Value.Kind|null[0]
        final class BoolValue : pbandk.gen/GeneratedOneOf<pbandk.wkt/Value, kotlin/Boolean>, pbandk.wkt/Value.Kind<kotlin/Boolean> { // pbandk.wkt/Value.Kind.BoolValue|null[0]
            constructor <init>(kotlin/Boolean = ...) // pbandk.wkt/Value.Kind.BoolValue.<init>|<init>(kotlin.Boolean){}[0]
        }

        final class ListValue : pbandk.gen/GeneratedOneOf<pbandk.wkt/Value, pbandk.wkt/ListValue>, pbandk.wkt/Value.Kind<pbandk.wkt/ListValue> { // pbandk.wkt/Value.Kind.ListValue|null[0]
            constructor <init>(pbandk.wkt/ListValue) // pbandk.wkt/Value.Kind.ListValue.<init>|<init>(pbandk.wkt.ListValue){}[0]
        }

        final class NullValue : pbandk.gen/GeneratedOneOf<pbandk.wkt/Value, pbandk.wkt/NullValue>, pbandk.wkt/Value.Kind<pbandk.wkt/NullValue> { // pbandk.wkt/Value.Kind.NullValue|null[0]
            constructor <init>(pbandk.wkt/NullValue = ...) // pbandk.wkt/Value.Kind.NullValue.<init>|<init>(pbandk.wkt.NullValue){}[0]
        }

        final class NumberValue : pbandk.gen/GeneratedOneOf<pbandk.wkt/Value, kotlin/Double>, pbandk.wkt/Value.Kind<kotlin/Double> { // pbandk.wkt/Value.Kind.NumberValue|null[0]
            constructor <init>(kotlin/Double = ...) // pbandk.wkt/Value.Kind.NumberValue.<init>|<init>(kotlin.Double){}[0]
        }

        final class StringValue : pbandk.gen/GeneratedOneOf<pbandk.wkt/Value, kotlin/String>, pbandk.wkt/Value.Kind<kotlin/String> { // pbandk.wkt/Value.Kind.StringValue|null[0]
            constructor <init>(kotlin/String = ...) // pbandk.wkt/Value.Kind.StringValue.<init>|<init>(kotlin.String){}[0]
        }

        final class StructValue : pbandk.gen/GeneratedOneOf<pbandk.wkt/Value, pbandk.wkt/Struct>, pbandk.wkt/Value.Kind<pbandk.wkt/Struct> { // pbandk.wkt/Value.Kind.StructValue|null[0]
            constructor <init>(pbandk.wkt/Struct) // pbandk.wkt/Value.Kind.StructValue.<init>|<init>(pbandk.wkt.Struct){}[0]
        }
    }

    final object Companion : pbandk/Message.Companion<pbandk.wkt/Value> { // pbandk.wkt/Value.Companion|null[0]
        final val defaultInstance // pbandk.wkt/Value.Companion.defaultInstance|{}defaultInstance[0]
            final fun <get-defaultInstance>(): pbandk.wkt/Value // pbandk.wkt/Value.Companion.defaultInstance.<get-defaultInstance>|<get-defaultInstance>(){}[0]
        final val descriptor // pbandk.wkt/Value.Companion.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): pbandk/MessageDescriptor<pbandk.wkt/Value> // pbandk.wkt/Value.Companion.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    }

    final object FieldDescriptors { // pbandk.wkt/Value.FieldDescriptors|null[0]
        final val boolValue // pbandk.wkt/Value.FieldDescriptors.boolValue|{}boolValue[0]
            final fun <get-boolValue>(): pbandk/FieldDescriptor<pbandk.wkt/Value, kotlin/Boolean?> // pbandk.wkt/Value.FieldDescriptors.boolValue.<get-boolValue>|<get-boolValue>(){}[0]
        final val kind // pbandk.wkt/Value.FieldDescriptors.kind|{}kind[0]
            final fun <get-kind>(): pbandk/OneofDescriptor<pbandk.wkt/Value, pbandk.wkt/Value.Kind<*>> // pbandk.wkt/Value.FieldDescriptors.kind.<get-kind>|<get-kind>(){}[0]
        final val listValue // pbandk.wkt/Value.FieldDescriptors.listValue|{}listValue[0]
            final fun <get-listValue>(): pbandk/FieldDescriptor<pbandk.wkt/Value, pbandk.wkt/ListValue?> // pbandk.wkt/Value.FieldDescriptors.listValue.<get-listValue>|<get-listValue>(){}[0]
        final val nullValue // pbandk.wkt/Value.FieldDescriptors.nullValue|{}nullValue[0]
            final fun <get-nullValue>(): pbandk/FieldDescriptor<pbandk.wkt/Value, pbandk.wkt/NullValue?> // pbandk.wkt/Value.FieldDescriptors.nullValue.<get-nullValue>|<get-nullValue>(){}[0]
        final val numberValue // pbandk.wkt/Value.FieldDescriptors.numberValue|{}numberValue[0]
            final fun <get-numberValue>(): pbandk/FieldDescriptor<pbandk.wkt/Value, kotlin/Double?> // pbandk.wkt/Value.FieldDescriptors.numberValue.<get-numberValue>|<get-numberValue>(){}[0]
        final val stringValue // pbandk.wkt/Value.FieldDescriptors.stringValue|{}stringValue[0]
            final fun <get-stringValue>(): pbandk/FieldDescriptor<pbandk.wkt/Value, kotlin/String?> // pbandk.wkt/Value.FieldDescriptors.stringValue.<get-stringValue>|<get-stringValue>(){}[0]
        final val structValue // pbandk.wkt/Value.FieldDescriptors.structValue|{}structValue[0]
            final fun <get-structValue>(): pbandk/FieldDescriptor<pbandk.wkt/Value, pbandk.wkt/Struct?> // pbandk.wkt/Value.FieldDescriptors.structValue.<get-structValue>|<get-structValue>(){}[0]
    }
}

abstract class <#A: pbandk/Message, #B: kotlin/Any> pbandk.gen/GeneratedOneOf : pbandk/Message.OneOf<#B> { // pbandk.gen/GeneratedOneOf|null[0]
    constructor <init>(#B, pbandk/FieldDescriptor<#A, #B?>) // pbandk.gen/GeneratedOneOf.<init>|<init>(1:1;pbandk.FieldDescriptor<1:0,1:1?>){}[0]

    open val value // pbandk.gen/GeneratedOneOf.value|{}value[0]
        open fun <get-value>(): #B // pbandk.gen/GeneratedOneOf.value.<get-value>|<get-value>(){}[0]

    open fun equals(kotlin/Any?): kotlin/Boolean // pbandk.gen/GeneratedOneOf.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // pbandk.gen/GeneratedOneOf.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // pbandk.gen/GeneratedOneOf.toString|toString(){}[0]
}

abstract class <#A: pbandk/Message.Enum> pbandk.gen/GeneratedEnumValue : pbandk/Message.Enum { // pbandk.gen/GeneratedEnumValue|null[0]
    constructor <init>(kotlin/Int, kotlin/String) // pbandk.gen/GeneratedEnumValue.<init>|<init>(kotlin.Int;kotlin.String){}[0]

    final val name // pbandk.gen/GeneratedEnumValue.name|{}name[0]
        final fun <get-name>(): kotlin/String // pbandk.gen/GeneratedEnumValue.name.<get-name>|<get-name>(){}[0]
    final val value // pbandk.gen/GeneratedEnumValue.value|{}value[0]
        final fun <get-value>(): kotlin/Int // pbandk.gen/GeneratedEnumValue.value.<get-value>|<get-value>(){}[0]

    open fun equals(kotlin/Any?): kotlin/Boolean // pbandk.gen/GeneratedEnumValue.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // pbandk.gen/GeneratedEnumValue.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // pbandk.gen/GeneratedEnumValue.toString|toString(){}[0]
}

abstract class <#A: pbandk/Message.Enum> pbandk.gen/UnrecognizedEnumValue : pbandk/Message.Enum { // pbandk.gen/UnrecognizedEnumValue|null[0]
    constructor <init>(kotlin/Int?, kotlin/String?) // pbandk.gen/UnrecognizedEnumValue.<init>|<init>(kotlin.Int?;kotlin.String?){}[0]

    open val name // pbandk.gen/UnrecognizedEnumValue.name|{}name[0]
        open fun <get-name>(): kotlin/String? // pbandk.gen/UnrecognizedEnumValue.name.<get-name>|<get-name>(){}[0]
    open val value // pbandk.gen/UnrecognizedEnumValue.value|{}value[0]
        open fun <get-value>(): kotlin/Int? // pbandk.gen/UnrecognizedEnumValue.value.<get-value>|<get-value>(){}[0]

    open fun equals(kotlin/Any?): kotlin/Boolean // pbandk.gen/UnrecognizedEnumValue.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // pbandk.gen/UnrecognizedEnumValue.hashCode|hashCode(){}[0]
    open fun toString(): kotlin/String // pbandk.gen/UnrecognizedEnumValue.toString|toString(){}[0]
}

abstract class <#A: pbandk/Message> pbandk.gen/AbstractGeneratedMessage : pbandk/Message { // pbandk.gen/AbstractGeneratedMessage|null[0]
    constructor <init>() // pbandk.gen/AbstractGeneratedMessage.<init>|<init>(){}[0]

    open val protoSize // pbandk.gen/AbstractGeneratedMessage.protoSize|{}protoSize[0]
        open fun <get-protoSize>(): kotlin/Int // pbandk.gen/AbstractGeneratedMessage.protoSize.<get-protoSize>|<get-protoSize>(){}[0]

    open fun <#A1: kotlin/Any?> getFieldValue(pbandk/FieldDescriptor<*, #A1>): #A1 // pbandk.gen/AbstractGeneratedMessage.getFieldValue|getFieldValue(pbandk.FieldDescriptor<*,0:0>){0ยง<kotlin.Any?>}[0]
    open fun <#A1: pbandk/MutableMessage<#A>> copy(kotlin/Function1<#A1, kotlin/Unit>): #A // pbandk.gen/AbstractGeneratedMessage.copy|copy(kotlin.Function1<0:0,kotlin.Unit>){0ยง<pbandk.MutableMessage<1:0>>}[0]
    open fun computeHashCode(): kotlin/Int // pbandk.gen/AbstractGeneratedMessage.computeHashCode|computeHashCode(){}[0]
    open fun computeProtoSize(): kotlin/Int // pbandk.gen/AbstractGeneratedMessage.computeProtoSize|computeProtoSize(){}[0]
    open fun equals(kotlin/Any?): kotlin/Boolean // pbandk.gen/AbstractGeneratedMessage.equals|equals(kotlin.Any?){}[0]
    open fun hashCode(): kotlin/Int // pbandk.gen/AbstractGeneratedMessage.hashCode|hashCode(){}[0]
    open fun plus(pbandk/Message?): #A // pbandk.gen/AbstractGeneratedMessage.plus|plus(pbandk.Message?){}[0]
    open fun toString(): kotlin/String // pbandk.gen/AbstractGeneratedMessage.toString|toString(){}[0]
}

abstract class <#A: pbandk/Message> pbandk.gen/GeneratedExtendableMessage : pbandk.gen/AbstractGeneratedMessage<#A>, pbandk/ExtendableMessage<#A> { // pbandk.gen/GeneratedExtendableMessage|null[0]
    constructor <init>(pbandk/FieldSet<#A> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...) // pbandk.gen/GeneratedExtendableMessage.<init>|<init>(pbandk.FieldSet<1:0>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]

    open val extensionFields // pbandk.gen/GeneratedExtendableMessage.extensionFields|{}extensionFields[0]
        open fun <get-extensionFields>(): pbandk/FieldSet<#A> // pbandk.gen/GeneratedExtendableMessage.extensionFields.<get-extensionFields>|<get-extensionFields>(){}[0]
    open val protoSize // pbandk.gen/GeneratedExtendableMessage.protoSize|{}protoSize[0]
        open fun <get-protoSize>(): kotlin/Int // pbandk.gen/GeneratedExtendableMessage.protoSize.<get-protoSize>|<get-protoSize>(){}[0]
    open val unknownFields // pbandk.gen/GeneratedExtendableMessage.unknownFields|{}unknownFields[0]
        open fun <get-unknownFields>(): kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> // pbandk.gen/GeneratedExtendableMessage.unknownFields.<get-unknownFields>|<get-unknownFields>(){}[0]

    open fun hashCode(): kotlin/Int // pbandk.gen/GeneratedExtendableMessage.hashCode|hashCode(){}[0]
}

abstract class <#A: pbandk/Message> pbandk.gen/GeneratedMessage : pbandk.gen/AbstractGeneratedMessage<#A> { // pbandk.gen/GeneratedMessage|null[0]
    constructor <init>(kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...) // pbandk.gen/GeneratedMessage.<init>|<init>(kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]

    open val protoSize // pbandk.gen/GeneratedMessage.protoSize|{}protoSize[0]
        open fun <get-protoSize>(): kotlin/Int // pbandk.gen/GeneratedMessage.protoSize.<get-protoSize>|<get-protoSize>(){}[0]
    open val unknownFields // pbandk.gen/GeneratedMessage.unknownFields|{}unknownFields[0]
        open fun <get-unknownFields>(): kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> // pbandk.gen/GeneratedMessage.unknownFields.<get-unknownFields>|<get-unknownFields>(){}[0]

    open fun hashCode(): kotlin/Int // pbandk.gen/GeneratedMessage.hashCode|hashCode(){}[0]
}

abstract class <#A: pbandk/Message> pbandk.gen/MutableGeneratedExtendableMessage : pbandk.gen/AbstractGeneratedMessage<#A>, pbandk/MutableExtendableMessage<#A> { // pbandk.gen/MutableGeneratedExtendableMessage|null[0]
    constructor <init>(kotlin.collections/MutableMap<kotlin/Int, pbandk/UnknownField> = ...) // pbandk.gen/MutableGeneratedExtendableMessage.<init>|<init>(kotlin.collections.MutableMap<kotlin.Int,pbandk.UnknownField>){}[0]

    open val extensionFields // pbandk.gen/MutableGeneratedExtendableMessage.extensionFields|{}extensionFields[0]
        open fun <get-extensionFields>(): pbandk/MutableFieldSet<#A> // pbandk.gen/MutableGeneratedExtendableMessage.extensionFields.<get-extensionFields>|<get-extensionFields>(){}[0]
    open val unknownFields // pbandk.gen/MutableGeneratedExtendableMessage.unknownFields|{}unknownFields[0]
        open fun <get-unknownFields>(): kotlin.collections/MutableMap<kotlin/Int, pbandk/UnknownField> // pbandk.gen/MutableGeneratedExtendableMessage.unknownFields.<get-unknownFields>|<get-unknownFields>(){}[0]

    open fun <#A1: pbandk/MutableMessage<#A>> copy(kotlin/Function1<#A1, kotlin/Unit>): #A // pbandk.gen/MutableGeneratedExtendableMessage.copy|copy(kotlin.Function1<0:0,kotlin.Unit>){0ยง<pbandk.MutableMessage<1:0>>}[0]
    open fun plus(pbandk/Message?): #A // pbandk.gen/MutableGeneratedExtendableMessage.plus|plus(pbandk.Message?){}[0]
}

abstract class <#A: pbandk/Message> pbandk.gen/MutableGeneratedMessage : pbandk.gen/AbstractGeneratedMessage<#A>, pbandk/MutableMessage<#A> { // pbandk.gen/MutableGeneratedMessage|null[0]
    constructor <init>(kotlin.collections/MutableMap<kotlin/Int, pbandk/UnknownField> = ...) // pbandk.gen/MutableGeneratedMessage.<init>|<init>(kotlin.collections.MutableMap<kotlin.Int,pbandk.UnknownField>){}[0]

    open val unknownFields // pbandk.gen/MutableGeneratedMessage.unknownFields|{}unknownFields[0]
        open fun <get-unknownFields>(): kotlin.collections/MutableMap<kotlin/Int, pbandk/UnknownField> // pbandk.gen/MutableGeneratedMessage.unknownFields.<get-unknownFields>|<get-unknownFields>(){}[0]

    open fun <#A1: pbandk/MutableMessage<#A>> copy(kotlin/Function1<#A1, kotlin/Unit>): #A // pbandk.gen/MutableGeneratedMessage.copy|copy(kotlin.Function1<0:0,kotlin.Unit>){0ยง<pbandk.MutableMessage<1:0>>}[0]
    open fun plus(pbandk/Message?): #A // pbandk.gen/MutableGeneratedMessage.plus|plus(pbandk.Message?){}[0]
}

final class <#A: kotlin/Any> pbandk.gen/ListField : kotlin.collections/List<#A> { // pbandk.gen/ListField|null[0]
    constructor <init>(pbandk.types/ValueType<#A>, kotlin.collections/Collection<#A>) // pbandk.gen/ListField.<init>|<init>(pbandk.types.ValueType<1:0>;kotlin.collections.Collection<1:0>){}[0]

    final val size // pbandk.gen/ListField.size|{}size[0]
        final fun <get-size>(): kotlin/Int // pbandk.gen/ListField.size.<get-size>|<get-size>(){}[0]

    final fun contains(#A): kotlin/Boolean // pbandk.gen/ListField.contains|contains(1:0){}[0]
    final fun containsAll(kotlin.collections/Collection<#A>): kotlin/Boolean // pbandk.gen/ListField.containsAll|containsAll(kotlin.collections.Collection<1:0>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // pbandk.gen/ListField.equals|equals(kotlin.Any?){}[0]
    final fun get(kotlin/Int): #A // pbandk.gen/ListField.get|get(kotlin.Int){}[0]
    final fun hashCode(): kotlin/Int // pbandk.gen/ListField.hashCode|hashCode(){}[0]
    final fun indexOf(#A): kotlin/Int // pbandk.gen/ListField.indexOf|indexOf(1:0){}[0]
    final fun isEmpty(): kotlin/Boolean // pbandk.gen/ListField.isEmpty|isEmpty(){}[0]
    final fun iterator(): kotlin.collections/Iterator<#A> // pbandk.gen/ListField.iterator|iterator(){}[0]
    final fun lastIndexOf(#A): kotlin/Int // pbandk.gen/ListField.lastIndexOf|lastIndexOf(1:0){}[0]
    final fun listIterator(): kotlin.collections/ListIterator<#A> // pbandk.gen/ListField.listIterator|listIterator(){}[0]
    final fun listIterator(kotlin/Int): kotlin.collections/ListIterator<#A> // pbandk.gen/ListField.listIterator|listIterator(kotlin.Int){}[0]
    final fun subList(kotlin/Int, kotlin/Int): kotlin.collections/List<#A> // pbandk.gen/ListField.subList|subList(kotlin.Int;kotlin.Int){}[0]
    final fun toString(): kotlin/String // pbandk.gen/ListField.toString|toString(){}[0]

    // Targets: [js]
    final fun asJsReadonlyArrayView(): kotlin.js.collections/JsReadonlyArray<#A> // pbandk.gen/ListField.asJsReadonlyArrayView|asJsReadonlyArrayView(){}[0]
}

final class <#A: kotlin/Any> pbandk.gen/MutableListField : kotlin.collections/MutableList<#A> { // pbandk.gen/MutableListField|null[0]
    constructor <init>(pbandk.types/ValueType<#A>) // pbandk.gen/MutableListField.<init>|<init>(pbandk.types.ValueType<1:0>){}[0]
    constructor <init>(pbandk/FieldDescriptor<*, *>) // pbandk.gen/MutableListField.<init>|<init>(pbandk.FieldDescriptor<*,*>){}[0]

    final val size // pbandk.gen/MutableListField.size|{}size[0]
        final fun <get-size>(): kotlin/Int // pbandk.gen/MutableListField.size.<get-size>|<get-size>(){}[0]

    final fun add(#A): kotlin/Boolean // pbandk.gen/MutableListField.add|add(1:0){}[0]
    final fun add(kotlin/Int, #A) // pbandk.gen/MutableListField.add|add(kotlin.Int;1:0){}[0]
    final fun addAll(kotlin.collections/Collection<#A>): kotlin/Boolean // pbandk.gen/MutableListField.addAll|addAll(kotlin.collections.Collection<1:0>){}[0]
    final fun addAll(kotlin/Int, kotlin.collections/Collection<#A>): kotlin/Boolean // pbandk.gen/MutableListField.addAll|addAll(kotlin.Int;kotlin.collections.Collection<1:0>){}[0]
    final fun clear() // pbandk.gen/MutableListField.clear|clear(){}[0]
    final fun contains(#A): kotlin/Boolean // pbandk.gen/MutableListField.contains|contains(1:0){}[0]
    final fun containsAll(kotlin.collections/Collection<#A>): kotlin/Boolean // pbandk.gen/MutableListField.containsAll|containsAll(kotlin.collections.Collection<1:0>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // pbandk.gen/MutableListField.equals|equals(kotlin.Any?){}[0]
    final fun get(kotlin/Int): #A // pbandk.gen/MutableListField.get|get(kotlin.Int){}[0]
    final fun hashCode(): kotlin/Int // pbandk.gen/MutableListField.hashCode|hashCode(){}[0]
    final fun indexOf(#A): kotlin/Int // pbandk.gen/MutableListField.indexOf|indexOf(1:0){}[0]
    final fun isEmpty(): kotlin/Boolean // pbandk.gen/MutableListField.isEmpty|isEmpty(){}[0]
    final fun iterator(): kotlin.collections/MutableIterator<#A> // pbandk.gen/MutableListField.iterator|iterator(){}[0]
    final fun lastIndexOf(#A): kotlin/Int // pbandk.gen/MutableListField.lastIndexOf|lastIndexOf(1:0){}[0]
    final fun listIterator(): kotlin.collections/MutableListIterator<#A> // pbandk.gen/MutableListField.listIterator|listIterator(){}[0]
    final fun listIterator(kotlin/Int): kotlin.collections/MutableListIterator<#A> // pbandk.gen/MutableListField.listIterator|listIterator(kotlin.Int){}[0]
    final fun remove(#A): kotlin/Boolean // pbandk.gen/MutableListField.remove|remove(1:0){}[0]
    final fun removeAll(kotlin.collections/Collection<#A>): kotlin/Boolean // pbandk.gen/MutableListField.removeAll|removeAll(kotlin.collections.Collection<1:0>){}[0]
    final fun removeAt(kotlin/Int): #A // pbandk.gen/MutableListField.removeAt|removeAt(kotlin.Int){}[0]
    final fun retainAll(kotlin.collections/Collection<#A>): kotlin/Boolean // pbandk.gen/MutableListField.retainAll|retainAll(kotlin.collections.Collection<1:0>){}[0]
    final fun set(kotlin/Int, #A): #A // pbandk.gen/MutableListField.set|set(kotlin.Int;1:0){}[0]
    final fun subList(kotlin/Int, kotlin/Int): kotlin.collections/MutableList<#A> // pbandk.gen/MutableListField.subList|subList(kotlin.Int;kotlin.Int){}[0]
    final fun toListField(): pbandk.gen/ListField<#A> // pbandk.gen/MutableListField.toListField|toListField(){}[0]
    final fun toString(): kotlin/String // pbandk.gen/MutableListField.toString|toString(){}[0]

    // Targets: [js]
    final fun asJsArrayView(): kotlin.js.collections/JsArray<#A> // pbandk.gen/MutableListField.asJsArrayView|asJsArrayView(){}[0]

    // Targets: [js]
    final fun asJsReadonlyArrayView(): kotlin.js.collections/JsReadonlyArray<#A> // pbandk.gen/MutableListField.asJsReadonlyArrayView|asJsReadonlyArrayView(){}[0]
}

final class <#A: pbandk/Message, #B: pbandk/Message.OneOf<*>> pbandk/OneofDescriptor { // pbandk/OneofDescriptor|null[0]
    final val fields // pbandk/OneofDescriptor.fields|{}fields[0]
        final fun <get-fields>(): pbandk/FieldDescriptorSet<#A> // pbandk/OneofDescriptor.fields.<get-fields>|<get-fields>(){}[0]
    final val name // pbandk/OneofDescriptor.name|{}name[0]
        final fun <get-name>(): kotlin/String // pbandk/OneofDescriptor.name.<get-name>|<get-name>(){}[0]

    final object Companion { // pbandk/OneofDescriptor.Companion|null[0]
        final fun <#A2: pbandk/Message, #B2: pbandk/MutableMessage<#A2>, #C2: pbandk/Message.OneOf<*>> of(kotlin.reflect/KProperty0<pbandk/MessageDescriptor<#A2>>, kotlin/String, kotlin.reflect/KProperty1<#A2, #C2?>, kotlin.reflect/KMutableProperty1<#B2, #C2?>, kotlin.collections/Collection<pbandk/FieldDescriptor<#A2, *>>, pbandk.wkt/OneofOptions = ...): pbandk/OneofDescriptor<#A2, #C2> // pbandk/OneofDescriptor.Companion.of|of(kotlin.reflect.KProperty0<pbandk.MessageDescriptor<0:0>>;kotlin.String;kotlin.reflect.KProperty1<0:0,0:2?>;kotlin.reflect.KMutableProperty1<0:1,0:2?>;kotlin.collections.Collection<pbandk.FieldDescriptor<0:0,*>>;pbandk.wkt.OneofOptions){0ยง<pbandk.Message>;1ยง<pbandk.MutableMessage<0:0>>;2ยง<pbandk.Message.OneOf<*>>}[0]
    }
}

final class <#A: pbandk/Message.Enum> pbandk/EnumDescriptor { // pbandk/EnumDescriptor|null[0]
    final val enumCompanion // pbandk/EnumDescriptor.enumCompanion|{}enumCompanion[0]
        final fun <get-enumCompanion>(): pbandk/Message.Enum.Companion<#A> // pbandk/EnumDescriptor.enumCompanion.<get-enumCompanion>|<get-enumCompanion>(){}[0]
    final val fullName // pbandk/EnumDescriptor.fullName|{}fullName[0]
        final fun <get-fullName>(): kotlin/String // pbandk/EnumDescriptor.fullName.<get-fullName>|<get-fullName>(){}[0]
    final val name // pbandk/EnumDescriptor.name|{}name[0]
        final fun <get-name>(): kotlin/String // pbandk/EnumDescriptor.name.<get-name>|<get-name>(){}[0]

    final object Companion { // pbandk/EnumDescriptor.Companion|null[0]
        final fun <#A2: pbandk/Message.Enum> of(kotlin/String, kotlin.reflect/KClass<#A2>, pbandk/Message.Enum.Companion<#A2>): pbandk/EnumDescriptor<#A2> // pbandk/EnumDescriptor.Companion.of|of(kotlin.String;kotlin.reflect.KClass<0:0>;pbandk.Message.Enum.Companion<0:0>){0ยง<pbandk.Message.Enum>}[0]
    }
}

final class <#A: pbandk/Message> pbandk/FieldDescriptorSet : kotlin.collections/Collection<pbandk/FieldDescriptor<#A, out kotlin/Any?>> { // pbandk/FieldDescriptorSet|null[0]
    constructor <init>(kotlin.collections/Collection<pbandk/FieldDescriptor<#A, out kotlin/Any?>>) // pbandk/FieldDescriptorSet.<init>|<init>(kotlin.collections.Collection<pbandk.FieldDescriptor<1:0,out|kotlin.Any?>>){}[0]

    final val size // pbandk/FieldDescriptorSet.size|{}size[0]
        final fun <get-size>(): kotlin/Int // pbandk/FieldDescriptorSet.size.<get-size>|<get-size>(){}[0]

    final fun contains(pbandk/FieldDescriptor<#A, out kotlin/Any?>): kotlin/Boolean // pbandk/FieldDescriptorSet.contains|contains(pbandk.FieldDescriptor<1:0,out|kotlin.Any?>){}[0]
    final fun containsAll(kotlin.collections/Collection<pbandk/FieldDescriptor<#A, out kotlin/Any?>>): kotlin/Boolean // pbandk/FieldDescriptorSet.containsAll|containsAll(kotlin.collections.Collection<pbandk.FieldDescriptor<1:0,out|kotlin.Any?>>){}[0]
    final fun get(kotlin/Int): pbandk/FieldDescriptor<#A, out kotlin/Any?>? // pbandk/FieldDescriptorSet.get|get(kotlin.Int){}[0]
    final fun get(kotlin/String): pbandk/FieldDescriptor<#A, out kotlin/Any?>? // pbandk/FieldDescriptorSet.get|get(kotlin.String){}[0]
    final fun isEmpty(): kotlin/Boolean // pbandk/FieldDescriptorSet.isEmpty|isEmpty(){}[0]
    final fun iterator(): kotlin.collections/Iterator<pbandk/FieldDescriptor<#A, out kotlin/Any?>> // pbandk/FieldDescriptorSet.iterator|iterator(){}[0]
}

final class <#A: pbandk/Message> pbandk/MessageDescriptor { // pbandk/MessageDescriptor|null[0]
    final val fields // pbandk/MessageDescriptor.fields|{}fields[0]
        final fun <get-fields>(): pbandk/FieldDescriptorSet<#A> // pbandk/MessageDescriptor.fields.<get-fields>|<get-fields>(){}[0]
    final val fullName // pbandk/MessageDescriptor.fullName|{}fullName[0]
        final fun <get-fullName>(): kotlin/String // pbandk/MessageDescriptor.fullName.<get-fullName>|<get-fullName>(){}[0]
    final val messageCompanion // pbandk/MessageDescriptor.messageCompanion|{}messageCompanion[0]
        final fun <get-messageCompanion>(): pbandk/Message.Companion<#A> // pbandk/MessageDescriptor.messageCompanion.<get-messageCompanion>|<get-messageCompanion>(){}[0]
    final val name // pbandk/MessageDescriptor.name|{}name[0]
        final fun <get-name>(): kotlin/String // pbandk/MessageDescriptor.name.<get-name>|<get-name>(){}[0]

    final object Companion { // pbandk/MessageDescriptor.Companion|null[0]
        final fun <#A2: pbandk/Message, #B2: pbandk/MutableMessage<#A2>> of(pbandk/MessageMetadata, kotlin.reflect/KClass<#A2>, pbandk/Message.Companion<#A2>, kotlin/Function1<kotlin/Function1<#B2, kotlin/Unit>, #A2>, kotlin.collections/Collection<pbandk/FieldDescriptor<#A2, *>> = ..., kotlin.collections/Collection<pbandk/OneofDescriptor<#A2, *>> = ...): pbandk/MessageDescriptor<#A2> // pbandk/MessageDescriptor.Companion.of|of(pbandk.MessageMetadata;kotlin.reflect.KClass<0:0>;pbandk.Message.Companion<0:0>;kotlin.Function1<kotlin.Function1<0:1,kotlin.Unit>,0:0>;kotlin.collections.Collection<pbandk.FieldDescriptor<0:0,*>>;kotlin.collections.Collection<pbandk.OneofDescriptor<0:0,*>>){0ยง<pbandk.Message>;1ยง<pbandk.MutableMessage<0:0>>}[0]
    }
}

final class pbandk.binary/BinaryFieldValueEncoder { // pbandk.binary/BinaryFieldValueEncoder|null[0]
    final object Companion // pbandk.binary/BinaryFieldValueEncoder.Companion|null[0]
}

final class pbandk.json/JsonConfig { // pbandk.json/JsonConfig|null[0]
    constructor <init>(kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., pbandk/TypeRegistry = ...) // pbandk.json/JsonConfig.<init>|<init>(kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;pbandk.TypeRegistry){}[0]

    final val compactOutput // pbandk.json/JsonConfig.compactOutput|{}compactOutput[0]
        final fun <get-compactOutput>(): kotlin/Boolean // pbandk.json/JsonConfig.compactOutput.<get-compactOutput>|<get-compactOutput>(){}[0]
    final val ignoreUnknownFieldsInInput // pbandk.json/JsonConfig.ignoreUnknownFieldsInInput|{}ignoreUnknownFieldsInInput[0]
        final fun <get-ignoreUnknownFieldsInInput>(): kotlin/Boolean // pbandk.json/JsonConfig.ignoreUnknownFieldsInInput.<get-ignoreUnknownFieldsInInput>|<get-ignoreUnknownFieldsInInput>(){}[0]
    final val outputDefaultStringsAsNull // pbandk.json/JsonConfig.outputDefaultStringsAsNull|{}outputDefaultStringsAsNull[0]
        final fun <get-outputDefaultStringsAsNull>(): kotlin/Boolean // pbandk.json/JsonConfig.outputDefaultStringsAsNull.<get-outputDefaultStringsAsNull>|<get-outputDefaultStringsAsNull>(){}[0]
    final val outputDefaultValues // pbandk.json/JsonConfig.outputDefaultValues|{}outputDefaultValues[0]
        final fun <get-outputDefaultValues>(): kotlin/Boolean // pbandk.json/JsonConfig.outputDefaultValues.<get-outputDefaultValues>|<get-outputDefaultValues>(){}[0]
    final val outputProtoFieldNames // pbandk.json/JsonConfig.outputProtoFieldNames|{}outputProtoFieldNames[0]
        final fun <get-outputProtoFieldNames>(): kotlin/Boolean // pbandk.json/JsonConfig.outputProtoFieldNames.<get-outputProtoFieldNames>|<get-outputProtoFieldNames>(){}[0]
    final val typeRegistry // pbandk.json/JsonConfig.typeRegistry|{}typeRegistry[0]
        final fun <get-typeRegistry>(): pbandk/TypeRegistry // pbandk.json/JsonConfig.typeRegistry.<get-typeRegistry>|<get-typeRegistry>(){}[0]

    final fun component1(): kotlin/Boolean // pbandk.json/JsonConfig.component1|component1(){}[0]
    final fun component2(): kotlin/Boolean // pbandk.json/JsonConfig.component2|component2(){}[0]
    final fun component3(): kotlin/Boolean // pbandk.json/JsonConfig.component3|component3(){}[0]
    final fun component4(): kotlin/Boolean // pbandk.json/JsonConfig.component4|component4(){}[0]
    final fun component5(): kotlin/Boolean // pbandk.json/JsonConfig.component5|component5(){}[0]
    final fun component6(): pbandk/TypeRegistry // pbandk.json/JsonConfig.component6|component6(){}[0]
    final fun copy(kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., kotlin/Boolean = ..., pbandk/TypeRegistry = ...): pbandk.json/JsonConfig // pbandk.json/JsonConfig.copy|copy(kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;kotlin.Boolean;pbandk.TypeRegistry){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // pbandk.json/JsonConfig.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // pbandk.json/JsonConfig.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // pbandk.json/JsonConfig.toString|toString(){}[0]

    final object Companion { // pbandk.json/JsonConfig.Companion|null[0]
        final val DEFAULT // pbandk.json/JsonConfig.Companion.DEFAULT|{}DEFAULT[0]
            final fun <get-DEFAULT>(): pbandk.json/JsonConfig // pbandk.json/JsonConfig.Companion.DEFAULT.<get-DEFAULT>|<get-DEFAULT>(){}[0]
    }
}

final class pbandk.json/JsonFieldValueEncoder // pbandk.json/JsonFieldValueEncoder|null[0]

final class pbandk/ByteArr { // pbandk/ByteArr|null[0]
    constructor <init>(kotlin/ByteArray) // pbandk/ByteArr.<init>|<init>(kotlin.ByteArray){}[0]

    final val array // pbandk/ByteArr.array|{}array[0]
        final fun <get-array>(): kotlin/ByteArray // pbandk/ByteArr.array.<get-array>|<get-array>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // pbandk/ByteArr.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // pbandk/ByteArr.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // pbandk/ByteArr.toString|toString(){}[0]

    final object Companion { // pbandk/ByteArr.Companion|null[0]
        final val empty // pbandk/ByteArr.Companion.empty|{}empty[0]
            final fun <get-empty>(): pbandk/ByteArr // pbandk/ByteArr.Companion.empty.<get-empty>|<get-empty>(){}[0]
    }
}

final class pbandk/InvalidProtocolBufferException : kotlin/RuntimeException { // pbandk/InvalidProtocolBufferException|null[0]
    final object Companion { // pbandk/InvalidProtocolBufferException.Companion|null[0]
        final fun missingRequiredField(kotlin/String): pbandk/InvalidProtocolBufferException // pbandk/InvalidProtocolBufferException.Companion.missingRequiredField|missingRequiredField(kotlin.String){}[0]
    }
}

final class pbandk/MessageMetadata { // pbandk/MessageMetadata|null[0]
    constructor <init>(kotlin/String, pbandk.wkt/Syntax) // pbandk/MessageMetadata.<init>|<init>(kotlin.String;pbandk.wkt.Syntax){}[0]

    final val fullName // pbandk/MessageMetadata.fullName|{}fullName[0]
        final fun <get-fullName>(): kotlin/String // pbandk/MessageMetadata.fullName.<get-fullName>|<get-fullName>(){}[0]
    final val name // pbandk/MessageMetadata.name|{}name[0]
        final fun <get-name>(): kotlin/String // pbandk/MessageMetadata.name.<get-name>|<get-name>(){}[0]
}

final class pbandk/UnknownField { // pbandk/UnknownField|null[0]
    constructor <init>(kotlin/Int, kotlin.collections/List<pbandk/UnknownField.Value>) // pbandk/UnknownField.<init>|<init>(kotlin.Int;kotlin.collections.List<pbandk.UnknownField.Value>){}[0]

    final val fieldNum // pbandk/UnknownField.fieldNum|{}fieldNum[0]
        final fun <get-fieldNum>(): kotlin/Int // pbandk/UnknownField.fieldNum.<get-fieldNum>|<get-fieldNum>(){}[0]
    final val values // pbandk/UnknownField.values|{}values[0]
        final fun <get-values>(): kotlin.collections/List<pbandk/UnknownField.Value> // pbandk/UnknownField.values.<get-values>|<get-values>(){}[0]

    final fun component1(): kotlin/Int // pbandk/UnknownField.component1|component1(){}[0]
    final fun component2(): kotlin.collections/List<pbandk/UnknownField.Value> // pbandk/UnknownField.component2|component2(){}[0]
    final fun copy(kotlin/Int = ..., kotlin.collections/List<pbandk/UnknownField.Value> = ...): pbandk/UnknownField // pbandk/UnknownField.copy|copy(kotlin.Int;kotlin.collections.List<pbandk.UnknownField.Value>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // pbandk/UnknownField.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // pbandk/UnknownField.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // pbandk/UnknownField.toString|toString(){}[0]

    final class Value { // pbandk/UnknownField.Value|null[0]
        constructor <init>(pbandk.binary/WireValue) // pbandk/UnknownField.Value.<init>|<init>(pbandk.binary.WireValue){}[0]

        final val wireValue // pbandk/UnknownField.Value.wireValue|{}wireValue[0]
            final fun <get-wireValue>(): pbandk.binary/WireValue // pbandk/UnknownField.Value.wireValue.<get-wireValue>|<get-wireValue>(){}[0]

        final fun component1(): pbandk.binary/WireValue // pbandk/UnknownField.Value.component1|component1(){}[0]
        final fun copy(pbandk.binary/WireValue = ...): pbandk/UnknownField.Value // pbandk/UnknownField.Value.copy|copy(pbandk.binary.WireValue){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // pbandk/UnknownField.Value.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // pbandk/UnknownField.Value.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // pbandk/UnknownField.Value.toString|toString(){}[0]
    }
}

final value class pbandk.binary/WireType { // pbandk.binary/WireType|null[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // pbandk.binary/WireType.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // pbandk.binary/WireType.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // pbandk.binary/WireType.toString|toString(){}[0]
}

sealed class <#A: pbandk/Message, #B: kotlin/Any?> pbandk/FieldDescriptor : kotlin/Comparable<pbandk/FieldDescriptor<#A, *>> { // pbandk/FieldDescriptor|null[0]
    final val fullName // pbandk/FieldDescriptor.fullName|{}fullName[0]
        final fun <get-fullName>(): kotlin/String // pbandk/FieldDescriptor.fullName.<get-fullName>|<get-fullName>(){}[0]
    final val name // pbandk/FieldDescriptor.name|{}name[0]
        final fun <get-name>(): kotlin/String // pbandk/FieldDescriptor.name.<get-name>|<get-name>(){}[0]
    final val options // pbandk/FieldDescriptor.options|{}options[0]
        final fun <get-options>(): pbandk.wkt/FieldOptions // pbandk/FieldDescriptor.options.<get-options>|<get-options>(){}[0]

    abstract fun getValue(#A): #B // pbandk/FieldDescriptor.getValue|getValue(1:0){}[0]
    abstract fun setValue(pbandk/MutableMessage<#A>, #B) // pbandk/FieldDescriptor.setValue|setValue(pbandk.MutableMessage<1:0>;1:1){}[0]
    open fun compareTo(pbandk/FieldDescriptor<#A, *>): kotlin/Int // pbandk/FieldDescriptor.compareTo|compareTo(pbandk.FieldDescriptor<1:0,*>){}[0]

    abstract class <#A1: pbandk/Message, #B1: kotlin/Any?, #C1: kotlin/Any> MutableValue : pbandk/FieldDescriptor<#A1, #B1> { // pbandk/FieldDescriptor.MutableValue|null[0]
        constructor <init>(kotlin/Function0<pbandk/MessageDescriptor<#A1>>, pbandk/FieldMetadata) // pbandk/FieldDescriptor.MutableValue.<init>|<init>(kotlin.Function0<pbandk.MessageDescriptor<1:0>>;pbandk.FieldMetadata){}[0]

        abstract fun getMutableValue(pbandk/MutableMessage<#A1>): #C1 // pbandk/FieldDescriptor.MutableValue.getMutableValue|getMutableValue(pbandk.MutableMessage<1:0>){}[0]
    }

    final object Companion { // pbandk/FieldDescriptor.Companion|null[0]
        final fun <#A2: pbandk/ExtendableMessage<#A2>, #B2: kotlin/Any> ofExtension(kotlin.reflect/KProperty0<pbandk/MessageDescriptor<#A2>>, kotlin/String, kotlin/Int, pbandk.types/ValueType<#B2>, kotlin/String, pbandk.wkt/FieldOptions? = ...): pbandk/FieldDescriptor<#A2, #B2?> // pbandk/FieldDescriptor.Companion.ofExtension|ofExtension(kotlin.reflect.KProperty0<pbandk.MessageDescriptor<0:0>>;kotlin.String;kotlin.Int;pbandk.types.ValueType<0:1>;kotlin.String;pbandk.wkt.FieldOptions?){0ยง<pbandk.ExtendableMessage<0:0>>;1ยง<kotlin.Any>}[0]
        final fun <#A2: pbandk/ExtendableMessage<#A2>, #B2: kotlin/Any> ofRepeatedExtension(kotlin.reflect/KProperty0<pbandk/MessageDescriptor<#A2>>, kotlin/String, kotlin/Int, pbandk.types/ValueType<#B2>, kotlin/String, pbandk.wkt/FieldOptions? = ...): pbandk/FieldDescriptor.MutableValue<#A2, kotlin.collections/List<#B2>, kotlin.collections/MutableList<#B2>> // pbandk/FieldDescriptor.Companion.ofRepeatedExtension|ofRepeatedExtension(kotlin.reflect.KProperty0<pbandk.MessageDescriptor<0:0>>;kotlin.String;kotlin.Int;pbandk.types.ValueType<0:1>;kotlin.String;pbandk.wkt.FieldOptions?){0ยง<pbandk.ExtendableMessage<0:0>>;1ยง<kotlin.Any>}[0]
        final fun <#A2: pbandk/Message, #B2: pbandk/MutableMessage<#A2>, #C2: kotlin/Any, #D2: kotlin/Any> ofMap(pbandk/MessageMetadata, kotlin.reflect/KProperty0<pbandk/MessageDescriptor<#A2>>, kotlin/String, kotlin/Int, pbandk.types/ValueType<#C2>, pbandk.types/ValueType<#D2>, kotlin.reflect/KProperty1<#A2, kotlin.collections/Map<#C2, #D2>>, kotlin.reflect/KProperty1<#B2, kotlin.collections/MutableMap<#C2, #D2>>, kotlin/String, pbandk.wkt/FieldOptions? = ...): pbandk/FieldDescriptor.MutableValue<#A2, kotlin.collections/Map<#C2, #D2>, kotlin.collections/MutableMap<#C2, #D2>> // pbandk/FieldDescriptor.Companion.ofMap|ofMap(pbandk.MessageMetadata;kotlin.reflect.KProperty0<pbandk.MessageDescriptor<0:0>>;kotlin.String;kotlin.Int;pbandk.types.ValueType<0:2>;pbandk.types.ValueType<0:3>;kotlin.reflect.KProperty1<0:0,kotlin.collections.Map<0:2,0:3>>;kotlin.reflect.KProperty1<0:1,kotlin.collections.MutableMap<0:2,0:3>>;kotlin.String;pbandk.wkt.FieldOptions?){0ยง<pbandk.Message>;1ยง<pbandk.MutableMessage<0:0>>;2ยง<kotlin.Any>;3ยง<kotlin.Any>}[0]
        final fun <#A2: pbandk/Message, #B2: pbandk/MutableMessage<#A2>, #C2: kotlin/Any> ofOneof(pbandk/MessageMetadata, kotlin.reflect/KProperty0<pbandk/MessageDescriptor<#A2>>, kotlin/String, kotlin/Int, pbandk.types/ValueType<#C2>, kotlin.reflect/KProperty1<#A2, #C2?>, kotlin.reflect/KMutableProperty1<#B2, #C2?>, kotlin/String, pbandk.wkt/FieldOptions? = ...): pbandk/FieldDescriptor<#A2, #C2?> // pbandk/FieldDescriptor.Companion.ofOneof|ofOneof(pbandk.MessageMetadata;kotlin.reflect.KProperty0<pbandk.MessageDescriptor<0:0>>;kotlin.String;kotlin.Int;pbandk.types.ValueType<0:2>;kotlin.reflect.KProperty1<0:0,0:2?>;kotlin.reflect.KMutableProperty1<0:1,0:2?>;kotlin.String;pbandk.wkt.FieldOptions?){0ยง<pbandk.Message>;1ยง<pbandk.MutableMessage<0:0>>;2ยง<kotlin.Any>}[0]
        final fun <#A2: pbandk/Message, #B2: pbandk/MutableMessage<#A2>, #C2: kotlin/Any> ofOptional(pbandk/MessageMetadata, kotlin.reflect/KProperty0<pbandk/MessageDescriptor<#A2>>, kotlin/String, kotlin/Int, pbandk.types/ValueType<#C2>, kotlin.reflect/KProperty1<#A2, #C2?>, kotlin.reflect/KMutableProperty1<#B2, #C2?>, kotlin/String, pbandk.wkt/FieldOptions? = ...): pbandk/FieldDescriptor<#A2, #C2?> // pbandk/FieldDescriptor.Companion.ofOptional|ofOptional(pbandk.MessageMetadata;kotlin.reflect.KProperty0<pbandk.MessageDescriptor<0:0>>;kotlin.String;kotlin.Int;pbandk.types.ValueType<0:2>;kotlin.reflect.KProperty1<0:0,0:2?>;kotlin.reflect.KMutableProperty1<0:1,0:2?>;kotlin.String;pbandk.wkt.FieldOptions?){0ยง<pbandk.Message>;1ยง<pbandk.MutableMessage<0:0>>;2ยง<kotlin.Any>}[0]
        final fun <#A2: pbandk/Message, #B2: pbandk/MutableMessage<#A2>, #C2: kotlin/Any> ofRepeated(pbandk/MessageMetadata, kotlin.reflect/KProperty0<pbandk/MessageDescriptor<#A2>>, kotlin/String, kotlin/Int, pbandk.types/ValueType<#C2>, kotlin.reflect/KProperty1<#A2, kotlin.collections/List<#C2>>, kotlin.reflect/KProperty1<#B2, kotlin.collections/MutableList<#C2>>, kotlin/String, pbandk.wkt/FieldOptions? = ...): pbandk/FieldDescriptor.MutableValue<#A2, kotlin.collections/List<#C2>, kotlin.collections/MutableList<#C2>> // pbandk/FieldDescriptor.Companion.ofRepeated|ofRepeated(pbandk.MessageMetadata;kotlin.reflect.KProperty0<pbandk.MessageDescriptor<0:0>>;kotlin.String;kotlin.Int;pbandk.types.ValueType<0:2>;kotlin.reflect.KProperty1<0:0,kotlin.collections.List<0:2>>;kotlin.reflect.KProperty1<0:1,kotlin.collections.MutableList<0:2>>;kotlin.String;pbandk.wkt.FieldOptions?){0ยง<pbandk.Message>;1ยง<pbandk.MutableMessage<0:0>>;2ยง<kotlin.Any>}[0]
        final fun <#A2: pbandk/Message, #B2: pbandk/MutableMessage<#A2>, #C2: kotlin/Any> ofRequired(pbandk/MessageMetadata, kotlin.reflect/KProperty0<pbandk/MessageDescriptor<#A2>>, kotlin/String, kotlin/Int, pbandk.types/ValueType<#C2>, kotlin.reflect/KProperty1<#A2, #C2>, kotlin.reflect/KMutableProperty1<#B2, #C2>, kotlin/String, pbandk.wkt/FieldOptions? = ...): pbandk/FieldDescriptor<#A2, #C2> // pbandk/FieldDescriptor.Companion.ofRequired|ofRequired(pbandk.MessageMetadata;kotlin.reflect.KProperty0<pbandk.MessageDescriptor<0:0>>;kotlin.String;kotlin.Int;pbandk.types.ValueType<0:2>;kotlin.reflect.KProperty1<0:0,0:2>;kotlin.reflect.KMutableProperty1<0:1,0:2>;kotlin.String;pbandk.wkt.FieldOptions?){0ยง<pbandk.Message>;1ยง<pbandk.MutableMessage<0:0>>;2ยง<kotlin.Any>}[0]
        final fun <#A2: pbandk/Message, #B2: pbandk/MutableMessage<#A2>, #C2: kotlin/Any> ofSingular(pbandk/MessageMetadata, kotlin.reflect/KProperty0<pbandk/MessageDescriptor<#A2>>, kotlin/String, kotlin/Int, pbandk.types/ValueType<#C2>, kotlin.reflect/KProperty1<#A2, #C2>, kotlin.reflect/KMutableProperty1<#B2, #C2>, kotlin/String, pbandk.wkt/FieldOptions? = ...): pbandk/FieldDescriptor<#A2, #C2> // pbandk/FieldDescriptor.Companion.ofSingular|ofSingular(pbandk.MessageMetadata;kotlin.reflect.KProperty0<pbandk.MessageDescriptor<0:0>>;kotlin.String;kotlin.Int;pbandk.types.ValueType<0:2>;kotlin.reflect.KProperty1<0:0,0:2>;kotlin.reflect.KMutableProperty1<0:1,0:2>;kotlin.String;pbandk.wkt.FieldOptions?){0ยง<pbandk.Message>;1ยง<pbandk.MutableMessage<0:0>>;2ยง<kotlin.Any>}[0]
    }
}

sealed class <#A: pbandk/Message> pbandk/FieldSet { // pbandk/FieldSet|null[0]
    constructor <init>() // pbandk/FieldSet.<init>|<init>(){}[0]

    abstract fun contains(pbandk/FieldDescriptor<#A, *>): kotlin/Boolean // pbandk/FieldSet.contains|contains(pbandk.FieldDescriptor<1:0,*>){}[0]
    final fun <#A1: kotlin/Any?> getOrDefault(pbandk/FieldDescriptor<#A, #A1>): #A1 // pbandk/FieldSet.getOrDefault|getOrDefault(pbandk.FieldDescriptor<1:0,0:0>){0ยง<kotlin.Any?>}[0]

    final class <#A1: pbandk/Message> Iterator : pbandk.internal/FieldIterator<#A1> { // pbandk/FieldSet.Iterator|null[0]
        constructor <init>(kotlin.collections/Iterator<kotlin.collections/Map.Entry<pbandk/FieldDescriptor<#A1, out kotlin/Any?>, kotlin/Any>>) // pbandk/FieldSet.Iterator.<init>|<init>(kotlin.collections.Iterator<kotlin.collections.Map.Entry<pbandk.FieldDescriptor<1:0,out|kotlin.Any?>,kotlin.Any>>){}[0]

        final fun hasNext(): kotlin/Boolean // pbandk/FieldSet.Iterator.hasNext|hasNext(){}[0]
        final fun next(): pbandk/FieldDescriptor<#A1, out kotlin/Any?> // pbandk/FieldSet.Iterator.next|next(){}[0]
        final fun nextValue(): kotlin/Any? // pbandk/FieldSet.Iterator.nextValue|nextValue(){}[0]
    }

    final object Companion // pbandk/FieldSet.Companion|null[0]
}

sealed class <#A: pbandk/Message> pbandk/MutableFieldSet : pbandk/FieldSet<#A> { // pbandk/MutableFieldSet|null[0]
    constructor <init>() // pbandk/MutableFieldSet.<init>|<init>(){}[0]

    abstract fun <#A1: kotlin/Any?, #B1: kotlin/Any> getOrCreate(pbandk/FieldDescriptor.MutableValue<#A, #A1, #B1>): #B1 // pbandk/MutableFieldSet.getOrCreate|getOrCreate(pbandk.FieldDescriptor.MutableValue<1:0,0:0,0:1>){0ยง<kotlin.Any?>;1ยง<kotlin.Any>}[0]
    abstract fun <#A1: kotlin/Any?> set(pbandk/FieldDescriptor<#A, #A1>, #A1) // pbandk/MutableFieldSet.set|set(pbandk.FieldDescriptor<1:0,0:0>;0:0){0ยง<kotlin.Any?>}[0]
    abstract fun remove(pbandk/FieldDescriptor<#A, *>) // pbandk/MutableFieldSet.remove|remove(pbandk.FieldDescriptor<1:0,*>){}[0]
    abstract fun toFieldSet(): pbandk/FieldSet<#A> // pbandk/MutableFieldSet.toFieldSet|toFieldSet(){}[0]
}

sealed class pbandk.binary/BinaryFieldValueDecoder { // pbandk.binary/BinaryFieldValueDecoder|null[0]
    constructor <init>() // pbandk.binary/BinaryFieldValueDecoder.<init>|<init>(){}[0]

    sealed class Group : pbandk.binary/BinaryFieldValueDecoder { // pbandk.binary/BinaryFieldValueDecoder.Group|null[0]
        constructor <init>() // pbandk.binary/BinaryFieldValueDecoder.Group.<init>|<init>(){}[0]

        abstract fun decodeValue(): pbandk.binary/WireValue.Group // pbandk.binary/BinaryFieldValueDecoder.Group.decodeValue|decodeValue(){}[0]
    }

    sealed class I32 : pbandk.binary/BinaryFieldValueDecoder { // pbandk.binary/BinaryFieldValueDecoder.I32|null[0]
        constructor <init>() // pbandk.binary/BinaryFieldValueDecoder.I32.<init>|<init>(){}[0]

        abstract fun decodeValue(): pbandk.binary/WireValue.I32 // pbandk.binary/BinaryFieldValueDecoder.I32.decodeValue|decodeValue(){}[0]
    }

    sealed class I64 : pbandk.binary/BinaryFieldValueDecoder { // pbandk.binary/BinaryFieldValueDecoder.I64|null[0]
        constructor <init>() // pbandk.binary/BinaryFieldValueDecoder.I64.<init>|<init>(){}[0]

        abstract fun decodeValue(): pbandk.binary/WireValue.I64 // pbandk.binary/BinaryFieldValueDecoder.I64.decodeValue|decodeValue(){}[0]
    }

    sealed class Len : pbandk.binary/BinaryFieldValueDecoder { // pbandk.binary/BinaryFieldValueDecoder.Len|null[0]
        constructor <init>() // pbandk.binary/BinaryFieldValueDecoder.Len.<init>|<init>(){}[0]

        abstract fun decodeValue(): pbandk.binary/WireValue.Len // pbandk.binary/BinaryFieldValueDecoder.Len.decodeValue|decodeValue(){}[0]
        abstract fun postDecode(kotlin/Int?) // pbandk.binary/BinaryFieldValueDecoder.Len.postDecode|postDecode(kotlin.Int?){}[0]
        abstract fun preDecode(): kotlin/Int? // pbandk.binary/BinaryFieldValueDecoder.Len.preDecode|preDecode(){}[0]
    }

    sealed class Varint : pbandk.binary/BinaryFieldValueDecoder { // pbandk.binary/BinaryFieldValueDecoder.Varint|null[0]
        constructor <init>() // pbandk.binary/BinaryFieldValueDecoder.Varint.<init>|<init>(){}[0]

        abstract fun decodeValue(): pbandk.binary/WireValue.Varint // pbandk.binary/BinaryFieldValueDecoder.Varint.decodeValue|decodeValue(){}[0]
    }

    final object Companion // pbandk.binary/BinaryFieldValueDecoder.Companion|null[0]

    final object EndGroup : pbandk.binary/BinaryFieldValueDecoder { // pbandk.binary/BinaryFieldValueDecoder.EndGroup|null[0]
        final fun decodeValue(): pbandk.binary/WireValue.EndGroup // pbandk.binary/BinaryFieldValueDecoder.EndGroup.decodeValue|decodeValue(){}[0]
    }
}

sealed class pbandk.json/JsonFieldValueDecoder { // pbandk.json/JsonFieldValueDecoder|null[0]
    constructor <init>() // pbandk.json/JsonFieldValueDecoder.<init>|<init>(){}[0]

    final class Array : pbandk.json/JsonFieldValueDecoder // pbandk.json/JsonFieldValueDecoder.Array|null[0]

    final class Boolean : pbandk.json/JsonFieldValueDecoder // pbandk.json/JsonFieldValueDecoder.Boolean|null[0]

    final class Null : pbandk.json/JsonFieldValueDecoder // pbandk.json/JsonFieldValueDecoder.Null|null[0]

    final class Number : pbandk.json/JsonFieldValueDecoder // pbandk.json/JsonFieldValueDecoder.Number|null[0]

    final class Object : pbandk.json/JsonFieldValueDecoder // pbandk.json/JsonFieldValueDecoder.Object|null[0]

    final class String : pbandk.json/JsonFieldValueDecoder // pbandk.json/JsonFieldValueDecoder.String|null[0]

    final object Companion // pbandk.json/JsonFieldValueDecoder.Companion|null[0]
}

sealed class pbandk/FieldMetadata { // pbandk/FieldMetadata|null[0]
    constructor <init>(kotlin/String, kotlin/Int, kotlin/String, kotlin/Boolean, kotlin/Boolean, pbandk.wkt/FieldOptions? = ...) // pbandk/FieldMetadata.<init>|<init>(kotlin.String;kotlin.Int;kotlin.String;kotlin.Boolean;kotlin.Boolean;pbandk.wkt.FieldOptions?){}[0]

    abstract val fullName // pbandk/FieldMetadata.fullName|{}fullName[0]
        abstract fun <get-fullName>(): kotlin/String // pbandk/FieldMetadata.fullName.<get-fullName>|<get-fullName>(){}[0]
    final val name // pbandk/FieldMetadata.name|{}name[0]
        final fun <get-name>(): kotlin/String // pbandk/FieldMetadata.name.<get-name>|<get-name>(){}[0]
    final val options // pbandk/FieldMetadata.options|{}options[0]
        final fun <get-options>(): pbandk.wkt/FieldOptions // pbandk/FieldMetadata.options.<get-options>|<get-options>(){}[0]
}

final val pbandk.wkt/java // pbandk.wkt/java|@pbandk.wkt.FeatureSet{}java[0]
    final fun (pbandk.wkt/FeatureSet).<get-java>(): pbandk.wkt/JavaFeatures? // pbandk.wkt/java.<get-java>|<get-java>@pbandk.wkt.FeatureSet(){}[0]
final val pbandk.wkt/java // pbandk.wkt/java|{}java[0]
    final fun <get-java>(): pbandk/FieldDescriptor<pbandk.wkt/FeatureSet, pbandk.wkt/JavaFeatures?> // pbandk.wkt/java.<get-java>|<get-java>(){}[0]

final var pbandk.wkt/java // pbandk.wkt/java|@pbandk.wkt.MutableFeatureSet{}java[0]
    final fun (pbandk.wkt/MutableFeatureSet).<get-java>(): pbandk.wkt/JavaFeatures? // pbandk.wkt/java.<get-java>|<get-java>@pbandk.wkt.MutableFeatureSet(){}[0]
    final fun (pbandk.wkt/MutableFeatureSet).<set-java>(pbandk.wkt/JavaFeatures?) // pbandk.wkt/java.<set-java>|<set-java>@pbandk.wkt.MutableFeatureSet(pbandk.wkt.JavaFeatures?){}[0]

final fun (pbandk.wkt/Any?).pbandk.wkt/orDefault(): pbandk.wkt/Any // pbandk.wkt/orDefault|orDefault@pbandk.wkt.Any?(){}[0]
final fun (pbandk.wkt/Api?).pbandk.wkt/orDefault(): pbandk.wkt/Api // pbandk.wkt/orDefault|orDefault@pbandk.wkt.Api?(){}[0]
final fun (pbandk.wkt/BoolValue?).pbandk.wkt/orDefault(): pbandk.wkt/BoolValue // pbandk.wkt/orDefault|orDefault@pbandk.wkt.BoolValue?(){}[0]
final fun (pbandk.wkt/BytesValue?).pbandk.wkt/orDefault(): pbandk.wkt/BytesValue // pbandk.wkt/orDefault|orDefault@pbandk.wkt.BytesValue?(){}[0]
final fun (pbandk.wkt/DescriptorProto.Companion).pbandk.wkt/ExtensionRange(kotlin/Function1<pbandk.wkt/DescriptorProto.MutableExtensionRange, kotlin/Unit>): pbandk.wkt/DescriptorProto.ExtensionRange // pbandk.wkt/ExtensionRange|ExtensionRange@pbandk.wkt.DescriptorProto.Companion(kotlin.Function1<pbandk.wkt.DescriptorProto.MutableExtensionRange,kotlin.Unit>){}[0]
final fun (pbandk.wkt/DescriptorProto.Companion).pbandk.wkt/ReservedRange(kotlin/Function1<pbandk.wkt/DescriptorProto.MutableReservedRange, kotlin/Unit>): pbandk.wkt/DescriptorProto.ReservedRange // pbandk.wkt/ReservedRange|ReservedRange@pbandk.wkt.DescriptorProto.Companion(kotlin.Function1<pbandk.wkt.DescriptorProto.MutableReservedRange,kotlin.Unit>){}[0]
final fun (pbandk.wkt/DescriptorProto.ExtensionRange?).pbandk.wkt/orDefault(): pbandk.wkt/DescriptorProto.ExtensionRange // pbandk.wkt/orDefault|orDefault@pbandk.wkt.DescriptorProto.ExtensionRange?(){}[0]
final fun (pbandk.wkt/DescriptorProto.ReservedRange?).pbandk.wkt/orDefault(): pbandk.wkt/DescriptorProto.ReservedRange // pbandk.wkt/orDefault|orDefault@pbandk.wkt.DescriptorProto.ReservedRange?(){}[0]
final fun (pbandk.wkt/DescriptorProto?).pbandk.wkt/orDefault(): pbandk.wkt/DescriptorProto // pbandk.wkt/orDefault|orDefault@pbandk.wkt.DescriptorProto?(){}[0]
final fun (pbandk.wkt/DoubleValue?).pbandk.wkt/orDefault(): pbandk.wkt/DoubleValue // pbandk.wkt/orDefault|orDefault@pbandk.wkt.DoubleValue?(){}[0]
final fun (pbandk.wkt/Duration?).pbandk.wkt/orDefault(): pbandk.wkt/Duration // pbandk.wkt/orDefault|orDefault@pbandk.wkt.Duration?(){}[0]
final fun (pbandk.wkt/Empty?).pbandk.wkt/orDefault(): pbandk.wkt/Empty // pbandk.wkt/orDefault|orDefault@pbandk.wkt.Empty?(){}[0]
final fun (pbandk.wkt/Enum?).pbandk.wkt/orDefault(): pbandk.wkt/Enum // pbandk.wkt/orDefault|orDefault@pbandk.wkt.Enum?(){}[0]
final fun (pbandk.wkt/EnumDescriptorProto.Companion).pbandk.wkt/EnumReservedRange(kotlin/Function1<pbandk.wkt/EnumDescriptorProto.MutableEnumReservedRange, kotlin/Unit>): pbandk.wkt/EnumDescriptorProto.EnumReservedRange // pbandk.wkt/EnumReservedRange|EnumReservedRange@pbandk.wkt.EnumDescriptorProto.Companion(kotlin.Function1<pbandk.wkt.EnumDescriptorProto.MutableEnumReservedRange,kotlin.Unit>){}[0]
final fun (pbandk.wkt/EnumDescriptorProto.EnumReservedRange?).pbandk.wkt/orDefault(): pbandk.wkt/EnumDescriptorProto.EnumReservedRange // pbandk.wkt/orDefault|orDefault@pbandk.wkt.EnumDescriptorProto.EnumReservedRange?(){}[0]
final fun (pbandk.wkt/EnumDescriptorProto?).pbandk.wkt/orDefault(): pbandk.wkt/EnumDescriptorProto // pbandk.wkt/orDefault|orDefault@pbandk.wkt.EnumDescriptorProto?(){}[0]
final fun (pbandk.wkt/EnumOptions?).pbandk.wkt/orDefault(): pbandk.wkt/EnumOptions // pbandk.wkt/orDefault|orDefault@pbandk.wkt.EnumOptions?(){}[0]
final fun (pbandk.wkt/EnumValue?).pbandk.wkt/orDefault(): pbandk.wkt/EnumValue // pbandk.wkt/orDefault|orDefault@pbandk.wkt.EnumValue?(){}[0]
final fun (pbandk.wkt/EnumValueDescriptorProto?).pbandk.wkt/orDefault(): pbandk.wkt/EnumValueDescriptorProto // pbandk.wkt/orDefault|orDefault@pbandk.wkt.EnumValueDescriptorProto?(){}[0]
final fun (pbandk.wkt/EnumValueOptions?).pbandk.wkt/orDefault(): pbandk.wkt/EnumValueOptions // pbandk.wkt/orDefault|orDefault@pbandk.wkt.EnumValueOptions?(){}[0]
final fun (pbandk.wkt/ExtensionRangeOptions.Companion).pbandk.wkt/Declaration(kotlin/Function1<pbandk.wkt/ExtensionRangeOptions.MutableDeclaration, kotlin/Unit>): pbandk.wkt/ExtensionRangeOptions.Declaration // pbandk.wkt/Declaration|Declaration@pbandk.wkt.ExtensionRangeOptions.Companion(kotlin.Function1<pbandk.wkt.ExtensionRangeOptions.MutableDeclaration,kotlin.Unit>){}[0]
final fun (pbandk.wkt/ExtensionRangeOptions.Declaration?).pbandk.wkt/orDefault(): pbandk.wkt/ExtensionRangeOptions.Declaration // pbandk.wkt/orDefault|orDefault@pbandk.wkt.ExtensionRangeOptions.Declaration?(){}[0]
final fun (pbandk.wkt/ExtensionRangeOptions?).pbandk.wkt/orDefault(): pbandk.wkt/ExtensionRangeOptions // pbandk.wkt/orDefault|orDefault@pbandk.wkt.ExtensionRangeOptions?(){}[0]
final fun (pbandk.wkt/FeatureSet?).pbandk.wkt/orDefault(): pbandk.wkt/FeatureSet // pbandk.wkt/orDefault|orDefault@pbandk.wkt.FeatureSet?(){}[0]
final fun (pbandk.wkt/FeatureSetDefaults.Companion).pbandk.wkt/FeatureSetEditionDefault(kotlin/Function1<pbandk.wkt/FeatureSetDefaults.MutableFeatureSetEditionDefault, kotlin/Unit>): pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault // pbandk.wkt/FeatureSetEditionDefault|FeatureSetEditionDefault@pbandk.wkt.FeatureSetDefaults.Companion(kotlin.Function1<pbandk.wkt.FeatureSetDefaults.MutableFeatureSetEditionDefault,kotlin.Unit>){}[0]
final fun (pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault?).pbandk.wkt/orDefault(): pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault // pbandk.wkt/orDefault|orDefault@pbandk.wkt.FeatureSetDefaults.FeatureSetEditionDefault?(){}[0]
final fun (pbandk.wkt/FeatureSetDefaults?).pbandk.wkt/orDefault(): pbandk.wkt/FeatureSetDefaults // pbandk.wkt/orDefault|orDefault@pbandk.wkt.FeatureSetDefaults?(){}[0]
final fun (pbandk.wkt/Field?).pbandk.wkt/orDefault(): pbandk.wkt/Field // pbandk.wkt/orDefault|orDefault@pbandk.wkt.Field?(){}[0]
final fun (pbandk.wkt/FieldDescriptorProto?).pbandk.wkt/orDefault(): pbandk.wkt/FieldDescriptorProto // pbandk.wkt/orDefault|orDefault@pbandk.wkt.FieldDescriptorProto?(){}[0]
final fun (pbandk.wkt/FieldMask?).pbandk.wkt/orDefault(): pbandk.wkt/FieldMask // pbandk.wkt/orDefault|orDefault@pbandk.wkt.FieldMask?(){}[0]
final fun (pbandk.wkt/FieldOptions.Companion).pbandk.wkt/EditionDefault(kotlin/Function1<pbandk.wkt/FieldOptions.MutableEditionDefault, kotlin/Unit>): pbandk.wkt/FieldOptions.EditionDefault // pbandk.wkt/EditionDefault|EditionDefault@pbandk.wkt.FieldOptions.Companion(kotlin.Function1<pbandk.wkt.FieldOptions.MutableEditionDefault,kotlin.Unit>){}[0]
final fun (pbandk.wkt/FieldOptions.Companion).pbandk.wkt/FeatureSupport(kotlin/Function1<pbandk.wkt/FieldOptions.MutableFeatureSupport, kotlin/Unit>): pbandk.wkt/FieldOptions.FeatureSupport // pbandk.wkt/FeatureSupport|FeatureSupport@pbandk.wkt.FieldOptions.Companion(kotlin.Function1<pbandk.wkt.FieldOptions.MutableFeatureSupport,kotlin.Unit>){}[0]
final fun (pbandk.wkt/FieldOptions.EditionDefault?).pbandk.wkt/orDefault(): pbandk.wkt/FieldOptions.EditionDefault // pbandk.wkt/orDefault|orDefault@pbandk.wkt.FieldOptions.EditionDefault?(){}[0]
final fun (pbandk.wkt/FieldOptions.FeatureSupport?).pbandk.wkt/orDefault(): pbandk.wkt/FieldOptions.FeatureSupport // pbandk.wkt/orDefault|orDefault@pbandk.wkt.FieldOptions.FeatureSupport?(){}[0]
final fun (pbandk.wkt/FieldOptions?).pbandk.wkt/orDefault(): pbandk.wkt/FieldOptions // pbandk.wkt/orDefault|orDefault@pbandk.wkt.FieldOptions?(){}[0]
final fun (pbandk.wkt/FileDescriptorProto?).pbandk.wkt/orDefault(): pbandk.wkt/FileDescriptorProto // pbandk.wkt/orDefault|orDefault@pbandk.wkt.FileDescriptorProto?(){}[0]
final fun (pbandk.wkt/FileDescriptorSet?).pbandk.wkt/orDefault(): pbandk.wkt/FileDescriptorSet // pbandk.wkt/orDefault|orDefault@pbandk.wkt.FileDescriptorSet?(){}[0]
final fun (pbandk.wkt/FileOptions?).pbandk.wkt/orDefault(): pbandk.wkt/FileOptions // pbandk.wkt/orDefault|orDefault@pbandk.wkt.FileOptions?(){}[0]
final fun (pbandk.wkt/FloatValue?).pbandk.wkt/orDefault(): pbandk.wkt/FloatValue // pbandk.wkt/orDefault|orDefault@pbandk.wkt.FloatValue?(){}[0]
final fun (pbandk.wkt/GeneratedCodeInfo.Annotation?).pbandk.wkt/orDefault(): pbandk.wkt/GeneratedCodeInfo.Annotation // pbandk.wkt/orDefault|orDefault@pbandk.wkt.GeneratedCodeInfo.Annotation?(){}[0]
final fun (pbandk.wkt/GeneratedCodeInfo.Companion).pbandk.wkt/Annotation(kotlin/Function1<pbandk.wkt/GeneratedCodeInfo.MutableAnnotation, kotlin/Unit>): pbandk.wkt/GeneratedCodeInfo.Annotation // pbandk.wkt/Annotation|Annotation@pbandk.wkt.GeneratedCodeInfo.Companion(kotlin.Function1<pbandk.wkt.GeneratedCodeInfo.MutableAnnotation,kotlin.Unit>){}[0]
final fun (pbandk.wkt/GeneratedCodeInfo?).pbandk.wkt/orDefault(): pbandk.wkt/GeneratedCodeInfo // pbandk.wkt/orDefault|orDefault@pbandk.wkt.GeneratedCodeInfo?(){}[0]
final fun (pbandk.wkt/Int32Value?).pbandk.wkt/orDefault(): pbandk.wkt/Int32Value // pbandk.wkt/orDefault|orDefault@pbandk.wkt.Int32Value?(){}[0]
final fun (pbandk.wkt/Int64Value?).pbandk.wkt/orDefault(): pbandk.wkt/Int64Value // pbandk.wkt/orDefault|orDefault@pbandk.wkt.Int64Value?(){}[0]
final fun (pbandk.wkt/JavaFeatures?).pbandk.wkt/orDefault(): pbandk.wkt/JavaFeatures // pbandk.wkt/orDefault|orDefault@pbandk.wkt.JavaFeatures?(){}[0]
final fun (pbandk.wkt/ListValue?).pbandk.wkt/orDefault(): pbandk.wkt/ListValue // pbandk.wkt/orDefault|orDefault@pbandk.wkt.ListValue?(){}[0]
final fun (pbandk.wkt/MessageOptions?).pbandk.wkt/orDefault(): pbandk.wkt/MessageOptions // pbandk.wkt/orDefault|orDefault@pbandk.wkt.MessageOptions?(){}[0]
final fun (pbandk.wkt/Method?).pbandk.wkt/orDefault(): pbandk.wkt/Method // pbandk.wkt/orDefault|orDefault@pbandk.wkt.Method?(){}[0]
final fun (pbandk.wkt/MethodDescriptorProto?).pbandk.wkt/orDefault(): pbandk.wkt/MethodDescriptorProto // pbandk.wkt/orDefault|orDefault@pbandk.wkt.MethodDescriptorProto?(){}[0]
final fun (pbandk.wkt/MethodOptions?).pbandk.wkt/orDefault(): pbandk.wkt/MethodOptions // pbandk.wkt/orDefault|orDefault@pbandk.wkt.MethodOptions?(){}[0]
final fun (pbandk.wkt/Mixin?).pbandk.wkt/orDefault(): pbandk.wkt/Mixin // pbandk.wkt/orDefault|orDefault@pbandk.wkt.Mixin?(){}[0]
final fun (pbandk.wkt/MutableDescriptorProto).pbandk.wkt/ExtensionRange(kotlin/Function1<pbandk.wkt/DescriptorProto.MutableExtensionRange, kotlin/Unit>): pbandk.wkt/DescriptorProto.ExtensionRange // pbandk.wkt/ExtensionRange|ExtensionRange@pbandk.wkt.MutableDescriptorProto(kotlin.Function1<pbandk.wkt.DescriptorProto.MutableExtensionRange,kotlin.Unit>){}[0]
final fun (pbandk.wkt/MutableDescriptorProto).pbandk.wkt/ReservedRange(kotlin/Function1<pbandk.wkt/DescriptorProto.MutableReservedRange, kotlin/Unit>): pbandk.wkt/DescriptorProto.ReservedRange // pbandk.wkt/ReservedRange|ReservedRange@pbandk.wkt.MutableDescriptorProto(kotlin.Function1<pbandk.wkt.DescriptorProto.MutableReservedRange,kotlin.Unit>){}[0]
final fun (pbandk.wkt/MutableEnumDescriptorProto).pbandk.wkt/EnumReservedRange(kotlin/Function1<pbandk.wkt/EnumDescriptorProto.MutableEnumReservedRange, kotlin/Unit>): pbandk.wkt/EnumDescriptorProto.EnumReservedRange // pbandk.wkt/EnumReservedRange|EnumReservedRange@pbandk.wkt.MutableEnumDescriptorProto(kotlin.Function1<pbandk.wkt.EnumDescriptorProto.MutableEnumReservedRange,kotlin.Unit>){}[0]
final fun (pbandk.wkt/MutableExtensionRangeOptions).pbandk.wkt/Declaration(kotlin/Function1<pbandk.wkt/ExtensionRangeOptions.MutableDeclaration, kotlin/Unit>): pbandk.wkt/ExtensionRangeOptions.Declaration // pbandk.wkt/Declaration|Declaration@pbandk.wkt.MutableExtensionRangeOptions(kotlin.Function1<pbandk.wkt.ExtensionRangeOptions.MutableDeclaration,kotlin.Unit>){}[0]
final fun (pbandk.wkt/MutableFeatureSetDefaults).pbandk.wkt/FeatureSetEditionDefault(kotlin/Function1<pbandk.wkt/FeatureSetDefaults.MutableFeatureSetEditionDefault, kotlin/Unit>): pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault // pbandk.wkt/FeatureSetEditionDefault|FeatureSetEditionDefault@pbandk.wkt.MutableFeatureSetDefaults(kotlin.Function1<pbandk.wkt.FeatureSetDefaults.MutableFeatureSetEditionDefault,kotlin.Unit>){}[0]
final fun (pbandk.wkt/MutableFieldOptions).pbandk.wkt/EditionDefault(kotlin/Function1<pbandk.wkt/FieldOptions.MutableEditionDefault, kotlin/Unit>): pbandk.wkt/FieldOptions.EditionDefault // pbandk.wkt/EditionDefault|EditionDefault@pbandk.wkt.MutableFieldOptions(kotlin.Function1<pbandk.wkt.FieldOptions.MutableEditionDefault,kotlin.Unit>){}[0]
final fun (pbandk.wkt/MutableFieldOptions).pbandk.wkt/FeatureSupport(kotlin/Function1<pbandk.wkt/FieldOptions.MutableFeatureSupport, kotlin/Unit>): pbandk.wkt/FieldOptions.FeatureSupport // pbandk.wkt/FeatureSupport|FeatureSupport@pbandk.wkt.MutableFieldOptions(kotlin.Function1<pbandk.wkt.FieldOptions.MutableFeatureSupport,kotlin.Unit>){}[0]
final fun (pbandk.wkt/MutableGeneratedCodeInfo).pbandk.wkt/Annotation(kotlin/Function1<pbandk.wkt/GeneratedCodeInfo.MutableAnnotation, kotlin/Unit>): pbandk.wkt/GeneratedCodeInfo.Annotation // pbandk.wkt/Annotation|Annotation@pbandk.wkt.MutableGeneratedCodeInfo(kotlin.Function1<pbandk.wkt.GeneratedCodeInfo.MutableAnnotation,kotlin.Unit>){}[0]
final fun (pbandk.wkt/MutableSourceCodeInfo).pbandk.wkt/Location(kotlin/Function1<pbandk.wkt/SourceCodeInfo.MutableLocation, kotlin/Unit>): pbandk.wkt/SourceCodeInfo.Location // pbandk.wkt/Location|Location@pbandk.wkt.MutableSourceCodeInfo(kotlin.Function1<pbandk.wkt.SourceCodeInfo.MutableLocation,kotlin.Unit>){}[0]
final fun (pbandk.wkt/MutableUninterpretedOption).pbandk.wkt/NamePart(kotlin/Function1<pbandk.wkt/UninterpretedOption.MutableNamePart, kotlin/Unit>): pbandk.wkt/UninterpretedOption.NamePart // pbandk.wkt/NamePart|NamePart@pbandk.wkt.MutableUninterpretedOption(kotlin.Function1<pbandk.wkt.UninterpretedOption.MutableNamePart,kotlin.Unit>){}[0]
final fun (pbandk.wkt/OneofDescriptorProto?).pbandk.wkt/orDefault(): pbandk.wkt/OneofDescriptorProto // pbandk.wkt/orDefault|orDefault@pbandk.wkt.OneofDescriptorProto?(){}[0]
final fun (pbandk.wkt/OneofOptions?).pbandk.wkt/orDefault(): pbandk.wkt/OneofOptions // pbandk.wkt/orDefault|orDefault@pbandk.wkt.OneofOptions?(){}[0]
final fun (pbandk.wkt/Option?).pbandk.wkt/orDefault(): pbandk.wkt/Option // pbandk.wkt/orDefault|orDefault@pbandk.wkt.Option?(){}[0]
final fun (pbandk.wkt/ServiceDescriptorProto?).pbandk.wkt/orDefault(): pbandk.wkt/ServiceDescriptorProto // pbandk.wkt/orDefault|orDefault@pbandk.wkt.ServiceDescriptorProto?(){}[0]
final fun (pbandk.wkt/ServiceOptions?).pbandk.wkt/orDefault(): pbandk.wkt/ServiceOptions // pbandk.wkt/orDefault|orDefault@pbandk.wkt.ServiceOptions?(){}[0]
final fun (pbandk.wkt/SourceCodeInfo.Companion).pbandk.wkt/Location(kotlin/Function1<pbandk.wkt/SourceCodeInfo.MutableLocation, kotlin/Unit>): pbandk.wkt/SourceCodeInfo.Location // pbandk.wkt/Location|Location@pbandk.wkt.SourceCodeInfo.Companion(kotlin.Function1<pbandk.wkt.SourceCodeInfo.MutableLocation,kotlin.Unit>){}[0]
final fun (pbandk.wkt/SourceCodeInfo.Location?).pbandk.wkt/orDefault(): pbandk.wkt/SourceCodeInfo.Location // pbandk.wkt/orDefault|orDefault@pbandk.wkt.SourceCodeInfo.Location?(){}[0]
final fun (pbandk.wkt/SourceCodeInfo?).pbandk.wkt/orDefault(): pbandk.wkt/SourceCodeInfo // pbandk.wkt/orDefault|orDefault@pbandk.wkt.SourceCodeInfo?(){}[0]
final fun (pbandk.wkt/SourceContext?).pbandk.wkt/orDefault(): pbandk.wkt/SourceContext // pbandk.wkt/orDefault|orDefault@pbandk.wkt.SourceContext?(){}[0]
final fun (pbandk.wkt/StringValue?).pbandk.wkt/orDefault(): pbandk.wkt/StringValue // pbandk.wkt/orDefault|orDefault@pbandk.wkt.StringValue?(){}[0]
final fun (pbandk.wkt/Struct?).pbandk.wkt/orDefault(): pbandk.wkt/Struct // pbandk.wkt/orDefault|orDefault@pbandk.wkt.Struct?(){}[0]
final fun (pbandk.wkt/Timestamp?).pbandk.wkt/orDefault(): pbandk.wkt/Timestamp // pbandk.wkt/orDefault|orDefault@pbandk.wkt.Timestamp?(){}[0]
final fun (pbandk.wkt/Type?).pbandk.wkt/orDefault(): pbandk.wkt/Type // pbandk.wkt/orDefault|orDefault@pbandk.wkt.Type?(){}[0]
final fun (pbandk.wkt/UInt32Value?).pbandk.wkt/orDefault(): pbandk.wkt/UInt32Value // pbandk.wkt/orDefault|orDefault@pbandk.wkt.UInt32Value?(){}[0]
final fun (pbandk.wkt/UInt64Value?).pbandk.wkt/orDefault(): pbandk.wkt/UInt64Value // pbandk.wkt/orDefault|orDefault@pbandk.wkt.UInt64Value?(){}[0]
final fun (pbandk.wkt/UninterpretedOption.Companion).pbandk.wkt/NamePart(kotlin/Function1<pbandk.wkt/UninterpretedOption.MutableNamePart, kotlin/Unit>): pbandk.wkt/UninterpretedOption.NamePart // pbandk.wkt/NamePart|NamePart@pbandk.wkt.UninterpretedOption.Companion(kotlin.Function1<pbandk.wkt.UninterpretedOption.MutableNamePart,kotlin.Unit>){}[0]
final fun (pbandk.wkt/UninterpretedOption?).pbandk.wkt/orDefault(): pbandk.wkt/UninterpretedOption // pbandk.wkt/orDefault|orDefault@pbandk.wkt.UninterpretedOption?(){}[0]
final fun (pbandk.wkt/Value?).pbandk.wkt/orDefault(): pbandk.wkt/Value // pbandk.wkt/orDefault|orDefault@pbandk.wkt.Value?(){}[0]
final fun (pbandk/TypeRegistry).pbandk/contains(pbandk/Message.Companion<*>): kotlin/Boolean // pbandk/contains|contains@pbandk.TypeRegistry(pbandk.Message.Companion<*>){}[0]
final fun (pbandk/TypeRegistry).pbandk/contains(pbandk/MessageDescriptor<*>): kotlin/Boolean // pbandk/contains|contains@pbandk.TypeRegistry(pbandk.MessageDescriptor<*>){}[0]
final fun (pbandk/TypeRegistry).pbandk/containsTypeUrl(kotlin/String): kotlin/Boolean // pbandk/containsTypeUrl|containsTypeUrl@pbandk.TypeRegistry(kotlin.String){}[0]
final fun (pbandk/TypeRegistry).pbandk/getTypeUrl(kotlin/String): pbandk/MessageDescriptor<*>? // pbandk/getTypeUrl|getTypeUrl@pbandk.TypeRegistry(kotlin.String){}[0]
final fun (pbandk/TypeRegistry.Builder).pbandk/add(pbandk/Message.Companion<*>) // pbandk/add|add@pbandk.TypeRegistry.Builder(pbandk.Message.Companion<*>){}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any> pbandk.gen/MutableMapField(pbandk/FieldDescriptor<*, kotlin.collections/Map<#A, #B>>): pbandk.gen/MutableMapField<#A, #B> // pbandk.gen/MutableMapField|MutableMapField(pbandk.FieldDescriptor<*,kotlin.collections.Map<0:0,0:1>>){0ยง<kotlin.Any>;1ยง<kotlin.Any>}[0]
final fun <#A: kotlin/Any, #B: kotlin/Any> pbandk.gen/MutableMapField(pbandk/Message.Companion<pbandk.gen/MapField.Entry<#A, #B>>): pbandk.gen/MutableMapField<#A, #B> // pbandk.gen/MutableMapField|MutableMapField(pbandk.Message.Companion<pbandk.gen.MapField.Entry<0:0,0:1>>){0ยง<kotlin.Any>;1ยง<kotlin.Any>}[0]
final fun <#A: pbandk/Message.Enum> pbandk.types/enum(pbandk/Message.Enum.Companion<#A>): pbandk.types/ValueType<#A> // pbandk.types/enum|enum(pbandk.Message.Enum.Companion<0:0>){0ยง<pbandk.Message.Enum>}[0]
final fun <#A: pbandk/Message> (#A).pbandk.json/encodeToJsonString(pbandk.json/JsonConfig = ...): kotlin/String // pbandk.json/encodeToJsonString|encodeToJsonString@0:0(pbandk.json.JsonConfig){0ยง<pbandk.Message>}[0]
final fun <#A: pbandk/Message> (#A).pbandk/encodeToByteArray(): kotlin/ByteArray // pbandk/encodeToByteArray|encodeToByteArray@0:0(){0ยง<pbandk.Message>}[0]
final fun <#A: pbandk/Message> (#A).pbandk/encodeWith(pbandk/MessageEncoder) // pbandk/encodeWith|encodeWith@0:0(pbandk.MessageEncoder){0ยง<pbandk.Message>}[0]
final fun <#A: pbandk/Message> (#A?).pbandk/plus(#A?): #A? // pbandk/plus|plus@0:0?(0:0?){0ยง<pbandk.Message>}[0]
final fun <#A: pbandk/Message> (pbandk.wkt/Any).pbandk/isA(pbandk/Message.Companion<#A>): kotlin/Boolean // pbandk/isA|isA@pbandk.wkt.Any(pbandk.Message.Companion<0:0>){0ยง<pbandk.Message>}[0]
final fun <#A: pbandk/Message> (pbandk.wkt/Any).pbandk/unpack(pbandk/Message.Companion<#A>): #A // pbandk/unpack|unpack@pbandk.wkt.Any(pbandk.Message.Companion<0:0>){0ยง<pbandk.Message>}[0]
final fun <#A: pbandk/Message> (pbandk.wkt/Any.Companion).pbandk/pack(#A, kotlin/String = ...): pbandk.wkt/Any // pbandk/pack|pack@pbandk.wkt.Any.Companion(0:0;kotlin.String){0ยง<pbandk.Message>}[0]
final fun <#A: pbandk/Message> (pbandk/Message.Companion<#A>).pbandk.json/decodeFromJsonString(kotlin/String, pbandk.json/JsonConfig = ...): #A // pbandk.json/decodeFromJsonString|decodeFromJsonString@pbandk.Message.Companion<0:0>(kotlin.String;pbandk.json.JsonConfig){0ยง<pbandk.Message>}[0]
final fun <#A: pbandk/Message> (pbandk/Message.Companion<#A>).pbandk/decodeFromByteArray(kotlin/ByteArray): #A // pbandk/decodeFromByteArray|decodeFromByteArray@pbandk.Message.Companion<0:0>(kotlin.ByteArray){0ยง<pbandk.Message>}[0]
final fun <#A: pbandk/Message> (pbandk/Message.Companion<#A>).pbandk/decodeWith(pbandk/MessageDecoder): #A // pbandk/decodeWith|decodeWith@pbandk.Message.Companion<0:0>(pbandk.MessageDecoder){0ยง<pbandk.Message>}[0]
final fun <#A: pbandk/Message> pbandk.types/group(pbandk/Message.Companion<#A>): pbandk.types/ValueType<#A> // pbandk.types/group|group(pbandk.Message.Companion<0:0>){0ยง<pbandk.Message>}[0]
final fun <#A: pbandk/Message> pbandk.types/message(pbandk/Message.Companion<#A>, kotlin/Boolean = ...): pbandk.types/ValueType<#A> // pbandk.types/message|message(pbandk.Message.Companion<0:0>;kotlin.Boolean){0ยง<pbandk.Message>}[0]
final fun pbandk.types/any(): pbandk.types/ValueType<pbandk.wkt/Any> // pbandk.types/any|any(){}[0]
final fun pbandk.types/bool(): pbandk.types/ValueType<kotlin/Boolean> // pbandk.types/bool|bool(){}[0]
final fun pbandk.types/boolValue(): pbandk.types/ValueType<kotlin/Boolean> // pbandk.types/boolValue|boolValue(){}[0]
final fun pbandk.types/bytes(): pbandk.types/ValueType<pbandk/ByteArr> // pbandk.types/bytes|bytes(){}[0]
final fun pbandk.types/bytesValue(): pbandk.types/ValueType<pbandk/ByteArr> // pbandk.types/bytesValue|bytesValue(){}[0]
final fun pbandk.types/double(): pbandk.types/ValueType<kotlin/Double> // pbandk.types/double|double(){}[0]
final fun pbandk.types/doubleValue(): pbandk.types/ValueType<kotlin/Double> // pbandk.types/doubleValue|doubleValue(){}[0]
final fun pbandk.types/duration(): pbandk.types/ValueType<pbandk.wkt/Duration> // pbandk.types/duration|duration(){}[0]
final fun pbandk.types/fixed32(): pbandk.types/ValueType<kotlin/Int> // pbandk.types/fixed32|fixed32(){}[0]
final fun pbandk.types/fixed64(): pbandk.types/ValueType<kotlin/Long> // pbandk.types/fixed64|fixed64(){}[0]
final fun pbandk.types/float(): pbandk.types/ValueType<kotlin/Float> // pbandk.types/float|float(){}[0]
final fun pbandk.types/floatValue(): pbandk.types/ValueType<kotlin/Float> // pbandk.types/floatValue|floatValue(){}[0]
final fun pbandk.types/int32(): pbandk.types/ValueType<kotlin/Int> // pbandk.types/int32|int32(){}[0]
final fun pbandk.types/int32Value(): pbandk.types/ValueType<kotlin/Int> // pbandk.types/int32Value|int32Value(){}[0]
final fun pbandk.types/int64(): pbandk.types/ValueType<kotlin/Long> // pbandk.types/int64|int64(){}[0]
final fun pbandk.types/int64Value(): pbandk.types/ValueType<kotlin/Long> // pbandk.types/int64Value|int64Value(){}[0]
final fun pbandk.types/listValue(): pbandk.types/ValueType<pbandk.wkt/ListValue> // pbandk.types/listValue|listValue(){}[0]
final fun pbandk.types/sfixed32(): pbandk.types/ValueType<kotlin/Int> // pbandk.types/sfixed32|sfixed32(){}[0]
final fun pbandk.types/sfixed64(): pbandk.types/ValueType<kotlin/Long> // pbandk.types/sfixed64|sfixed64(){}[0]
final fun pbandk.types/sint32(): pbandk.types/ValueType<kotlin/Int> // pbandk.types/sint32|sint32(){}[0]
final fun pbandk.types/sint64(): pbandk.types/ValueType<kotlin/Long> // pbandk.types/sint64|sint64(){}[0]
final fun pbandk.types/string(): pbandk.types/ValueType<kotlin/String> // pbandk.types/string|string(){}[0]
final fun pbandk.types/stringValue(): pbandk.types/ValueType<kotlin/String> // pbandk.types/stringValue|stringValue(){}[0]
final fun pbandk.types/struct(): pbandk.types/ValueType<pbandk.wkt/Struct> // pbandk.types/struct|struct(){}[0]
final fun pbandk.types/timestamp(): pbandk.types/ValueType<pbandk.wkt/Timestamp> // pbandk.types/timestamp|timestamp(){}[0]
final fun pbandk.types/uInt32Value(): pbandk.types/ValueType<kotlin/Int> // pbandk.types/uInt32Value|uInt32Value(){}[0]
final fun pbandk.types/uInt64Value(): pbandk.types/ValueType<kotlin/Long> // pbandk.types/uInt64Value|uInt64Value(){}[0]
final fun pbandk.types/uint32(): pbandk.types/ValueType<kotlin/Int> // pbandk.types/uint32|uint32(){}[0]
final fun pbandk.types/uint64(): pbandk.types/ValueType<kotlin/Long> // pbandk.types/uint64|uint64(){}[0]
final fun pbandk.types/value(): pbandk.types/ValueType<pbandk.wkt/Value> // pbandk.types/value|value(){}[0]
final fun pbandk.wkt/Any(kotlin/Function1<pbandk.wkt/MutableAny, kotlin/Unit>): pbandk.wkt/Any // pbandk.wkt/Any|Any(kotlin.Function1<pbandk.wkt.MutableAny,kotlin.Unit>){}[0]
final fun pbandk.wkt/Any(kotlin/String = ..., pbandk/ByteArr = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Any // pbandk.wkt/Any|Any(kotlin.String;pbandk.ByteArr;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/Api(kotlin/Function1<pbandk.wkt/MutableApi, kotlin/Unit>): pbandk.wkt/Api // pbandk.wkt/Api|Api(kotlin.Function1<pbandk.wkt.MutableApi,kotlin.Unit>){}[0]
final fun pbandk.wkt/Api(kotlin/String = ..., kotlin.collections/List<pbandk.wkt/Method> = ..., kotlin.collections/List<pbandk.wkt/Option> = ..., kotlin/String = ..., pbandk.wkt/SourceContext? = ..., kotlin.collections/List<pbandk.wkt/Mixin> = ..., pbandk.wkt/Syntax = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Api // pbandk.wkt/Api|Api(kotlin.String;kotlin.collections.List<pbandk.wkt.Method>;kotlin.collections.List<pbandk.wkt.Option>;kotlin.String;pbandk.wkt.SourceContext?;kotlin.collections.List<pbandk.wkt.Mixin>;pbandk.wkt.Syntax;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/BoolValue(kotlin/Boolean = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/BoolValue // pbandk.wkt/BoolValue|BoolValue(kotlin.Boolean;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/BoolValue(kotlin/Function1<pbandk.wkt/MutableBoolValue, kotlin/Unit>): pbandk.wkt/BoolValue // pbandk.wkt/BoolValue|BoolValue(kotlin.Function1<pbandk.wkt.MutableBoolValue,kotlin.Unit>){}[0]
final fun pbandk.wkt/BytesValue(kotlin/Function1<pbandk.wkt/MutableBytesValue, kotlin/Unit>): pbandk.wkt/BytesValue // pbandk.wkt/BytesValue|BytesValue(kotlin.Function1<pbandk.wkt.MutableBytesValue,kotlin.Unit>){}[0]
final fun pbandk.wkt/BytesValue(pbandk/ByteArr = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/BytesValue // pbandk.wkt/BytesValue|BytesValue(pbandk.ByteArr;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/DescriptorProto(kotlin/Function1<pbandk.wkt/MutableDescriptorProto, kotlin/Unit>): pbandk.wkt/DescriptorProto // pbandk.wkt/DescriptorProto|DescriptorProto(kotlin.Function1<pbandk.wkt.MutableDescriptorProto,kotlin.Unit>){}[0]
final fun pbandk.wkt/DescriptorProto(kotlin/String? = ..., kotlin.collections/List<pbandk.wkt/FieldDescriptorProto> = ..., kotlin.collections/List<pbandk.wkt/FieldDescriptorProto> = ..., kotlin.collections/List<pbandk.wkt/DescriptorProto> = ..., kotlin.collections/List<pbandk.wkt/EnumDescriptorProto> = ..., kotlin.collections/List<pbandk.wkt/DescriptorProto.ExtensionRange> = ..., kotlin.collections/List<pbandk.wkt/OneofDescriptorProto> = ..., pbandk.wkt/MessageOptions? = ..., kotlin.collections/List<pbandk.wkt/DescriptorProto.ReservedRange> = ..., kotlin.collections/List<kotlin/String> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/DescriptorProto // pbandk.wkt/DescriptorProto|DescriptorProto(kotlin.String?;kotlin.collections.List<pbandk.wkt.FieldDescriptorProto>;kotlin.collections.List<pbandk.wkt.FieldDescriptorProto>;kotlin.collections.List<pbandk.wkt.DescriptorProto>;kotlin.collections.List<pbandk.wkt.EnumDescriptorProto>;kotlin.collections.List<pbandk.wkt.DescriptorProto.ExtensionRange>;kotlin.collections.List<pbandk.wkt.OneofDescriptorProto>;pbandk.wkt.MessageOptions?;kotlin.collections.List<pbandk.wkt.DescriptorProto.ReservedRange>;kotlin.collections.List<kotlin.String>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/DoubleValue(kotlin/Double = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/DoubleValue // pbandk.wkt/DoubleValue|DoubleValue(kotlin.Double;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/DoubleValue(kotlin/Function1<pbandk.wkt/MutableDoubleValue, kotlin/Unit>): pbandk.wkt/DoubleValue // pbandk.wkt/DoubleValue|DoubleValue(kotlin.Function1<pbandk.wkt.MutableDoubleValue,kotlin.Unit>){}[0]
final fun pbandk.wkt/Duration(kotlin/Function1<pbandk.wkt/MutableDuration, kotlin/Unit>): pbandk.wkt/Duration // pbandk.wkt/Duration|Duration(kotlin.Function1<pbandk.wkt.MutableDuration,kotlin.Unit>){}[0]
final fun pbandk.wkt/Duration(kotlin/Long = ..., kotlin/Int = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Duration // pbandk.wkt/Duration|Duration(kotlin.Long;kotlin.Int;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/Empty(kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Empty // pbandk.wkt/Empty|Empty(kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/Empty(kotlin/Function1<pbandk.wkt/MutableEmpty, kotlin/Unit>): pbandk.wkt/Empty // pbandk.wkt/Empty|Empty(kotlin.Function1<pbandk.wkt.MutableEmpty,kotlin.Unit>){}[0]
final fun pbandk.wkt/Enum(kotlin/Function1<pbandk.wkt/MutableEnum, kotlin/Unit>): pbandk.wkt/Enum // pbandk.wkt/Enum|Enum(kotlin.Function1<pbandk.wkt.MutableEnum,kotlin.Unit>){}[0]
final fun pbandk.wkt/Enum(kotlin/String = ..., kotlin.collections/List<pbandk.wkt/EnumValue> = ..., kotlin.collections/List<pbandk.wkt/Option> = ..., pbandk.wkt/SourceContext? = ..., pbandk.wkt/Syntax = ..., kotlin/String = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Enum // pbandk.wkt/Enum|Enum(kotlin.String;kotlin.collections.List<pbandk.wkt.EnumValue>;kotlin.collections.List<pbandk.wkt.Option>;pbandk.wkt.SourceContext?;pbandk.wkt.Syntax;kotlin.String;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/EnumDescriptorProto(kotlin/Function1<pbandk.wkt/MutableEnumDescriptorProto, kotlin/Unit>): pbandk.wkt/EnumDescriptorProto // pbandk.wkt/EnumDescriptorProto|EnumDescriptorProto(kotlin.Function1<pbandk.wkt.MutableEnumDescriptorProto,kotlin.Unit>){}[0]
final fun pbandk.wkt/EnumDescriptorProto(kotlin/String? = ..., kotlin.collections/List<pbandk.wkt/EnumValueDescriptorProto> = ..., pbandk.wkt/EnumOptions? = ..., kotlin.collections/List<pbandk.wkt/EnumDescriptorProto.EnumReservedRange> = ..., kotlin.collections/List<kotlin/String> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/EnumDescriptorProto // pbandk.wkt/EnumDescriptorProto|EnumDescriptorProto(kotlin.String?;kotlin.collections.List<pbandk.wkt.EnumValueDescriptorProto>;pbandk.wkt.EnumOptions?;kotlin.collections.List<pbandk.wkt.EnumDescriptorProto.EnumReservedRange>;kotlin.collections.List<kotlin.String>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/EnumOptions(kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., pbandk.wkt/FeatureSet? = ..., kotlin.collections/List<pbandk.wkt/UninterpretedOption> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/EnumOptions // pbandk.wkt/EnumOptions|EnumOptions(kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;pbandk.wkt.FeatureSet?;kotlin.collections.List<pbandk.wkt.UninterpretedOption>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/EnumOptions(kotlin/Function1<pbandk.wkt/MutableEnumOptions, kotlin/Unit>): pbandk.wkt/EnumOptions // pbandk.wkt/EnumOptions|EnumOptions(kotlin.Function1<pbandk.wkt.MutableEnumOptions,kotlin.Unit>){}[0]
final fun pbandk.wkt/EnumValue(kotlin/Function1<pbandk.wkt/MutableEnumValue, kotlin/Unit>): pbandk.wkt/EnumValue // pbandk.wkt/EnumValue|EnumValue(kotlin.Function1<pbandk.wkt.MutableEnumValue,kotlin.Unit>){}[0]
final fun pbandk.wkt/EnumValue(kotlin/String = ..., kotlin/Int = ..., kotlin.collections/List<pbandk.wkt/Option> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/EnumValue // pbandk.wkt/EnumValue|EnumValue(kotlin.String;kotlin.Int;kotlin.collections.List<pbandk.wkt.Option>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/EnumValueDescriptorProto(kotlin/Function1<pbandk.wkt/MutableEnumValueDescriptorProto, kotlin/Unit>): pbandk.wkt/EnumValueDescriptorProto // pbandk.wkt/EnumValueDescriptorProto|EnumValueDescriptorProto(kotlin.Function1<pbandk.wkt.MutableEnumValueDescriptorProto,kotlin.Unit>){}[0]
final fun pbandk.wkt/EnumValueDescriptorProto(kotlin/String? = ..., kotlin/Int? = ..., pbandk.wkt/EnumValueOptions? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/EnumValueDescriptorProto // pbandk.wkt/EnumValueDescriptorProto|EnumValueDescriptorProto(kotlin.String?;kotlin.Int?;pbandk.wkt.EnumValueOptions?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/EnumValueOptions(kotlin/Boolean? = ..., pbandk.wkt/FeatureSet? = ..., kotlin/Boolean? = ..., pbandk.wkt/FieldOptions.FeatureSupport? = ..., kotlin.collections/List<pbandk.wkt/UninterpretedOption> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/EnumValueOptions // pbandk.wkt/EnumValueOptions|EnumValueOptions(kotlin.Boolean?;pbandk.wkt.FeatureSet?;kotlin.Boolean?;pbandk.wkt.FieldOptions.FeatureSupport?;kotlin.collections.List<pbandk.wkt.UninterpretedOption>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/EnumValueOptions(kotlin/Function1<pbandk.wkt/MutableEnumValueOptions, kotlin/Unit>): pbandk.wkt/EnumValueOptions // pbandk.wkt/EnumValueOptions|EnumValueOptions(kotlin.Function1<pbandk.wkt.MutableEnumValueOptions,kotlin.Unit>){}[0]
final fun pbandk.wkt/ExtensionRangeOptions(kotlin.collections/List<pbandk.wkt/UninterpretedOption> = ..., kotlin.collections/List<pbandk.wkt/ExtensionRangeOptions.Declaration> = ..., pbandk.wkt/FeatureSet? = ..., pbandk.wkt/ExtensionRangeOptions.VerificationState? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/ExtensionRangeOptions // pbandk.wkt/ExtensionRangeOptions|ExtensionRangeOptions(kotlin.collections.List<pbandk.wkt.UninterpretedOption>;kotlin.collections.List<pbandk.wkt.ExtensionRangeOptions.Declaration>;pbandk.wkt.FeatureSet?;pbandk.wkt.ExtensionRangeOptions.VerificationState?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/ExtensionRangeOptions(kotlin/Function1<pbandk.wkt/MutableExtensionRangeOptions, kotlin/Unit>): pbandk.wkt/ExtensionRangeOptions // pbandk.wkt/ExtensionRangeOptions|ExtensionRangeOptions(kotlin.Function1<pbandk.wkt.MutableExtensionRangeOptions,kotlin.Unit>){}[0]
final fun pbandk.wkt/FeatureSet(kotlin/Function1<pbandk.wkt/MutableFeatureSet, kotlin/Unit>): pbandk.wkt/FeatureSet // pbandk.wkt/FeatureSet|FeatureSet(kotlin.Function1<pbandk.wkt.MutableFeatureSet,kotlin.Unit>){}[0]
final fun pbandk.wkt/FeatureSet(pbandk.wkt/FeatureSet.FieldPresence? = ..., pbandk.wkt/FeatureSet.EnumType? = ..., pbandk.wkt/FeatureSet.RepeatedFieldEncoding? = ..., pbandk.wkt/FeatureSet.Utf8Validation? = ..., pbandk.wkt/FeatureSet.MessageEncoding? = ..., pbandk.wkt/FeatureSet.JsonFormat? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FeatureSet // pbandk.wkt/FeatureSet|FeatureSet(pbandk.wkt.FeatureSet.FieldPresence?;pbandk.wkt.FeatureSet.EnumType?;pbandk.wkt.FeatureSet.RepeatedFieldEncoding?;pbandk.wkt.FeatureSet.Utf8Validation?;pbandk.wkt.FeatureSet.MessageEncoding?;pbandk.wkt.FeatureSet.JsonFormat?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/FeatureSetDefaults(kotlin.collections/List<pbandk.wkt/FeatureSetDefaults.FeatureSetEditionDefault> = ..., pbandk.wkt/Edition? = ..., pbandk.wkt/Edition? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FeatureSetDefaults // pbandk.wkt/FeatureSetDefaults|FeatureSetDefaults(kotlin.collections.List<pbandk.wkt.FeatureSetDefaults.FeatureSetEditionDefault>;pbandk.wkt.Edition?;pbandk.wkt.Edition?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/FeatureSetDefaults(kotlin/Function1<pbandk.wkt/MutableFeatureSetDefaults, kotlin/Unit>): pbandk.wkt/FeatureSetDefaults // pbandk.wkt/FeatureSetDefaults|FeatureSetDefaults(kotlin.Function1<pbandk.wkt.MutableFeatureSetDefaults,kotlin.Unit>){}[0]
final fun pbandk.wkt/Field(kotlin/Function1<pbandk.wkt/MutableField, kotlin/Unit>): pbandk.wkt/Field // pbandk.wkt/Field|Field(kotlin.Function1<pbandk.wkt.MutableField,kotlin.Unit>){}[0]
final fun pbandk.wkt/Field(pbandk.wkt/Field.Kind = ..., pbandk.wkt/Field.Cardinality = ..., kotlin/Int = ..., kotlin/String = ..., kotlin/String = ..., kotlin/Int = ..., kotlin/Boolean = ..., kotlin.collections/List<pbandk.wkt/Option> = ..., kotlin/String = ..., kotlin/String = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Field // pbandk.wkt/Field|Field(pbandk.wkt.Field.Kind;pbandk.wkt.Field.Cardinality;kotlin.Int;kotlin.String;kotlin.String;kotlin.Int;kotlin.Boolean;kotlin.collections.List<pbandk.wkt.Option>;kotlin.String;kotlin.String;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/FieldDescriptorProto(kotlin/Function1<pbandk.wkt/MutableFieldDescriptorProto, kotlin/Unit>): pbandk.wkt/FieldDescriptorProto // pbandk.wkt/FieldDescriptorProto|FieldDescriptorProto(kotlin.Function1<pbandk.wkt.MutableFieldDescriptorProto,kotlin.Unit>){}[0]
final fun pbandk.wkt/FieldDescriptorProto(kotlin/String? = ..., kotlin/Int? = ..., pbandk.wkt/FieldDescriptorProto.Label? = ..., pbandk.wkt/FieldDescriptorProto.Type? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/Int? = ..., kotlin/String? = ..., pbandk.wkt/FieldOptions? = ..., kotlin/Boolean? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FieldDescriptorProto // pbandk.wkt/FieldDescriptorProto|FieldDescriptorProto(kotlin.String?;kotlin.Int?;pbandk.wkt.FieldDescriptorProto.Label?;pbandk.wkt.FieldDescriptorProto.Type?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.Int?;kotlin.String?;pbandk.wkt.FieldOptions?;kotlin.Boolean?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/FieldMask(kotlin.collections/List<kotlin/String> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FieldMask // pbandk.wkt/FieldMask|FieldMask(kotlin.collections.List<kotlin.String>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/FieldMask(kotlin/Function1<pbandk.wkt/MutableFieldMask, kotlin/Unit>): pbandk.wkt/FieldMask // pbandk.wkt/FieldMask|FieldMask(kotlin.Function1<pbandk.wkt.MutableFieldMask,kotlin.Unit>){}[0]
final fun pbandk.wkt/FieldOptions(kotlin/Function1<pbandk.wkt/MutableFieldOptions, kotlin/Unit>): pbandk.wkt/FieldOptions // pbandk.wkt/FieldOptions|FieldOptions(kotlin.Function1<pbandk.wkt.MutableFieldOptions,kotlin.Unit>){}[0]
final fun pbandk.wkt/FieldOptions(pbandk.wkt/FieldOptions.CType? = ..., kotlin/Boolean? = ..., pbandk.wkt/FieldOptions.JSType? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., pbandk.wkt/FieldOptions.OptionRetention? = ..., kotlin.collections/List<pbandk.wkt/FieldOptions.OptionTargetType> = ..., kotlin.collections/List<pbandk.wkt/FieldOptions.EditionDefault> = ..., pbandk.wkt/FeatureSet? = ..., pbandk.wkt/FieldOptions.FeatureSupport? = ..., kotlin.collections/List<pbandk.wkt/UninterpretedOption> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FieldOptions // pbandk.wkt/FieldOptions|FieldOptions(pbandk.wkt.FieldOptions.CType?;kotlin.Boolean?;pbandk.wkt.FieldOptions.JSType?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;pbandk.wkt.FieldOptions.OptionRetention?;kotlin.collections.List<pbandk.wkt.FieldOptions.OptionTargetType>;kotlin.collections.List<pbandk.wkt.FieldOptions.EditionDefault>;pbandk.wkt.FeatureSet?;pbandk.wkt.FieldOptions.FeatureSupport?;kotlin.collections.List<pbandk.wkt.UninterpretedOption>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/FileDescriptorProto(kotlin/Function1<pbandk.wkt/MutableFileDescriptorProto, kotlin/Unit>): pbandk.wkt/FileDescriptorProto // pbandk.wkt/FileDescriptorProto|FileDescriptorProto(kotlin.Function1<pbandk.wkt.MutableFileDescriptorProto,kotlin.Unit>){}[0]
final fun pbandk.wkt/FileDescriptorProto(kotlin/String? = ..., kotlin/String? = ..., kotlin.collections/List<kotlin/String> = ..., kotlin.collections/List<kotlin/Int> = ..., kotlin.collections/List<kotlin/Int> = ..., kotlin.collections/List<pbandk.wkt/DescriptorProto> = ..., kotlin.collections/List<pbandk.wkt/EnumDescriptorProto> = ..., kotlin.collections/List<pbandk.wkt/ServiceDescriptorProto> = ..., kotlin.collections/List<pbandk.wkt/FieldDescriptorProto> = ..., pbandk.wkt/FileOptions? = ..., pbandk.wkt/SourceCodeInfo? = ..., kotlin/String? = ..., pbandk.wkt/Edition? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FileDescriptorProto // pbandk.wkt/FileDescriptorProto|FileDescriptorProto(kotlin.String?;kotlin.String?;kotlin.collections.List<kotlin.String>;kotlin.collections.List<kotlin.Int>;kotlin.collections.List<kotlin.Int>;kotlin.collections.List<pbandk.wkt.DescriptorProto>;kotlin.collections.List<pbandk.wkt.EnumDescriptorProto>;kotlin.collections.List<pbandk.wkt.ServiceDescriptorProto>;kotlin.collections.List<pbandk.wkt.FieldDescriptorProto>;pbandk.wkt.FileOptions?;pbandk.wkt.SourceCodeInfo?;kotlin.String?;pbandk.wkt.Edition?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/FileDescriptorSet(kotlin.collections/List<pbandk.wkt/FileDescriptorProto> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FileDescriptorSet // pbandk.wkt/FileDescriptorSet|FileDescriptorSet(kotlin.collections.List<pbandk.wkt.FileDescriptorProto>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/FileDescriptorSet(kotlin/Function1<pbandk.wkt/MutableFileDescriptorSet, kotlin/Unit>): pbandk.wkt/FileDescriptorSet // pbandk.wkt/FileDescriptorSet|FileDescriptorSet(kotlin.Function1<pbandk.wkt.MutableFileDescriptorSet,kotlin.Unit>){}[0]
final fun pbandk.wkt/FileOptions(kotlin/Function1<pbandk.wkt/MutableFileOptions, kotlin/Unit>): pbandk.wkt/FileOptions // pbandk.wkt/FileOptions|FileOptions(kotlin.Function1<pbandk.wkt.MutableFileOptions,kotlin.Unit>){}[0]
final fun pbandk.wkt/FileOptions(kotlin/String? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., pbandk.wkt/FileOptions.OptimizeMode? = ..., kotlin/String? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., pbandk.wkt/FeatureSet? = ..., kotlin.collections/List<pbandk.wkt/UninterpretedOption> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FileOptions // pbandk.wkt/FileOptions|FileOptions(kotlin.String?;kotlin.String?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;pbandk.wkt.FileOptions.OptimizeMode?;kotlin.String?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;kotlin.String?;pbandk.wkt.FeatureSet?;kotlin.collections.List<pbandk.wkt.UninterpretedOption>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/FloatValue(kotlin/Float = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/FloatValue // pbandk.wkt/FloatValue|FloatValue(kotlin.Float;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/FloatValue(kotlin/Function1<pbandk.wkt/MutableFloatValue, kotlin/Unit>): pbandk.wkt/FloatValue // pbandk.wkt/FloatValue|FloatValue(kotlin.Function1<pbandk.wkt.MutableFloatValue,kotlin.Unit>){}[0]
final fun pbandk.wkt/GeneratedCodeInfo(kotlin.collections/List<pbandk.wkt/GeneratedCodeInfo.Annotation> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/GeneratedCodeInfo // pbandk.wkt/GeneratedCodeInfo|GeneratedCodeInfo(kotlin.collections.List<pbandk.wkt.GeneratedCodeInfo.Annotation>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/GeneratedCodeInfo(kotlin/Function1<pbandk.wkt/MutableGeneratedCodeInfo, kotlin/Unit>): pbandk.wkt/GeneratedCodeInfo // pbandk.wkt/GeneratedCodeInfo|GeneratedCodeInfo(kotlin.Function1<pbandk.wkt.MutableGeneratedCodeInfo,kotlin.Unit>){}[0]
final fun pbandk.wkt/Int32Value(kotlin/Function1<pbandk.wkt/MutableInt32Value, kotlin/Unit>): pbandk.wkt/Int32Value // pbandk.wkt/Int32Value|Int32Value(kotlin.Function1<pbandk.wkt.MutableInt32Value,kotlin.Unit>){}[0]
final fun pbandk.wkt/Int32Value(kotlin/Int = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Int32Value // pbandk.wkt/Int32Value|Int32Value(kotlin.Int;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/Int64Value(kotlin/Function1<pbandk.wkt/MutableInt64Value, kotlin/Unit>): pbandk.wkt/Int64Value // pbandk.wkt/Int64Value|Int64Value(kotlin.Function1<pbandk.wkt.MutableInt64Value,kotlin.Unit>){}[0]
final fun pbandk.wkt/Int64Value(kotlin/Long = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Int64Value // pbandk.wkt/Int64Value|Int64Value(kotlin.Long;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/JavaFeatures(kotlin/Boolean? = ..., pbandk.wkt/JavaFeatures.Utf8Validation? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/JavaFeatures // pbandk.wkt/JavaFeatures|JavaFeatures(kotlin.Boolean?;pbandk.wkt.JavaFeatures.Utf8Validation?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/JavaFeatures(kotlin/Function1<pbandk.wkt/MutableJavaFeatures, kotlin/Unit>): pbandk.wkt/JavaFeatures // pbandk.wkt/JavaFeatures|JavaFeatures(kotlin.Function1<pbandk.wkt.MutableJavaFeatures,kotlin.Unit>){}[0]
final fun pbandk.wkt/ListValue(kotlin.collections/List<pbandk.wkt/Value> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/ListValue // pbandk.wkt/ListValue|ListValue(kotlin.collections.List<pbandk.wkt.Value>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/ListValue(kotlin/Function1<pbandk.wkt/MutableListValue, kotlin/Unit>): pbandk.wkt/ListValue // pbandk.wkt/ListValue|ListValue(kotlin.Function1<pbandk.wkt.MutableListValue,kotlin.Unit>){}[0]
final fun pbandk.wkt/MessageOptions(kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., pbandk.wkt/FeatureSet? = ..., kotlin.collections/List<pbandk.wkt/UninterpretedOption> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/MessageOptions // pbandk.wkt/MessageOptions|MessageOptions(kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;kotlin.Boolean?;pbandk.wkt.FeatureSet?;kotlin.collections.List<pbandk.wkt.UninterpretedOption>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/MessageOptions(kotlin/Function1<pbandk.wkt/MutableMessageOptions, kotlin/Unit>): pbandk.wkt/MessageOptions // pbandk.wkt/MessageOptions|MessageOptions(kotlin.Function1<pbandk.wkt.MutableMessageOptions,kotlin.Unit>){}[0]
final fun pbandk.wkt/Method(kotlin/Function1<pbandk.wkt/MutableMethod, kotlin/Unit>): pbandk.wkt/Method // pbandk.wkt/Method|Method(kotlin.Function1<pbandk.wkt.MutableMethod,kotlin.Unit>){}[0]
final fun pbandk.wkt/Method(kotlin/String = ..., kotlin/String = ..., kotlin/Boolean = ..., kotlin/String = ..., kotlin/Boolean = ..., kotlin.collections/List<pbandk.wkt/Option> = ..., pbandk.wkt/Syntax = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Method // pbandk.wkt/Method|Method(kotlin.String;kotlin.String;kotlin.Boolean;kotlin.String;kotlin.Boolean;kotlin.collections.List<pbandk.wkt.Option>;pbandk.wkt.Syntax;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/MethodDescriptorProto(kotlin/Function1<pbandk.wkt/MutableMethodDescriptorProto, kotlin/Unit>): pbandk.wkt/MethodDescriptorProto // pbandk.wkt/MethodDescriptorProto|MethodDescriptorProto(kotlin.Function1<pbandk.wkt.MutableMethodDescriptorProto,kotlin.Unit>){}[0]
final fun pbandk.wkt/MethodDescriptorProto(kotlin/String? = ..., kotlin/String? = ..., kotlin/String? = ..., pbandk.wkt/MethodOptions? = ..., kotlin/Boolean? = ..., kotlin/Boolean? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/MethodDescriptorProto // pbandk.wkt/MethodDescriptorProto|MethodDescriptorProto(kotlin.String?;kotlin.String?;kotlin.String?;pbandk.wkt.MethodOptions?;kotlin.Boolean?;kotlin.Boolean?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/MethodOptions(kotlin/Boolean? = ..., pbandk.wkt/MethodOptions.IdempotencyLevel? = ..., pbandk.wkt/FeatureSet? = ..., kotlin.collections/List<pbandk.wkt/UninterpretedOption> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/MethodOptions // pbandk.wkt/MethodOptions|MethodOptions(kotlin.Boolean?;pbandk.wkt.MethodOptions.IdempotencyLevel?;pbandk.wkt.FeatureSet?;kotlin.collections.List<pbandk.wkt.UninterpretedOption>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/MethodOptions(kotlin/Function1<pbandk.wkt/MutableMethodOptions, kotlin/Unit>): pbandk.wkt/MethodOptions // pbandk.wkt/MethodOptions|MethodOptions(kotlin.Function1<pbandk.wkt.MutableMethodOptions,kotlin.Unit>){}[0]
final fun pbandk.wkt/Mixin(kotlin/Function1<pbandk.wkt/MutableMixin, kotlin/Unit>): pbandk.wkt/Mixin // pbandk.wkt/Mixin|Mixin(kotlin.Function1<pbandk.wkt.MutableMixin,kotlin.Unit>){}[0]
final fun pbandk.wkt/Mixin(kotlin/String = ..., kotlin/String = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Mixin // pbandk.wkt/Mixin|Mixin(kotlin.String;kotlin.String;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/OneofDescriptorProto(kotlin/Function1<pbandk.wkt/MutableOneofDescriptorProto, kotlin/Unit>): pbandk.wkt/OneofDescriptorProto // pbandk.wkt/OneofDescriptorProto|OneofDescriptorProto(kotlin.Function1<pbandk.wkt.MutableOneofDescriptorProto,kotlin.Unit>){}[0]
final fun pbandk.wkt/OneofDescriptorProto(kotlin/String? = ..., pbandk.wkt/OneofOptions? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/OneofDescriptorProto // pbandk.wkt/OneofDescriptorProto|OneofDescriptorProto(kotlin.String?;pbandk.wkt.OneofOptions?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/OneofOptions(kotlin/Function1<pbandk.wkt/MutableOneofOptions, kotlin/Unit>): pbandk.wkt/OneofOptions // pbandk.wkt/OneofOptions|OneofOptions(kotlin.Function1<pbandk.wkt.MutableOneofOptions,kotlin.Unit>){}[0]
final fun pbandk.wkt/OneofOptions(pbandk.wkt/FeatureSet? = ..., kotlin.collections/List<pbandk.wkt/UninterpretedOption> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/OneofOptions // pbandk.wkt/OneofOptions|OneofOptions(pbandk.wkt.FeatureSet?;kotlin.collections.List<pbandk.wkt.UninterpretedOption>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/Option(kotlin/Function1<pbandk.wkt/MutableOption, kotlin/Unit>): pbandk.wkt/Option // pbandk.wkt/Option|Option(kotlin.Function1<pbandk.wkt.MutableOption,kotlin.Unit>){}[0]
final fun pbandk.wkt/Option(kotlin/String = ..., pbandk.wkt/Any? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Option // pbandk.wkt/Option|Option(kotlin.String;pbandk.wkt.Any?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/ServiceDescriptorProto(kotlin/Function1<pbandk.wkt/MutableServiceDescriptorProto, kotlin/Unit>): pbandk.wkt/ServiceDescriptorProto // pbandk.wkt/ServiceDescriptorProto|ServiceDescriptorProto(kotlin.Function1<pbandk.wkt.MutableServiceDescriptorProto,kotlin.Unit>){}[0]
final fun pbandk.wkt/ServiceDescriptorProto(kotlin/String? = ..., kotlin.collections/List<pbandk.wkt/MethodDescriptorProto> = ..., pbandk.wkt/ServiceOptions? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/ServiceDescriptorProto // pbandk.wkt/ServiceDescriptorProto|ServiceDescriptorProto(kotlin.String?;kotlin.collections.List<pbandk.wkt.MethodDescriptorProto>;pbandk.wkt.ServiceOptions?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/ServiceOptions(kotlin/Function1<pbandk.wkt/MutableServiceOptions, kotlin/Unit>): pbandk.wkt/ServiceOptions // pbandk.wkt/ServiceOptions|ServiceOptions(kotlin.Function1<pbandk.wkt.MutableServiceOptions,kotlin.Unit>){}[0]
final fun pbandk.wkt/ServiceOptions(pbandk.wkt/FeatureSet? = ..., kotlin/Boolean? = ..., kotlin.collections/List<pbandk.wkt/UninterpretedOption> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/ServiceOptions // pbandk.wkt/ServiceOptions|ServiceOptions(pbandk.wkt.FeatureSet?;kotlin.Boolean?;kotlin.collections.List<pbandk.wkt.UninterpretedOption>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/SourceCodeInfo(kotlin.collections/List<pbandk.wkt/SourceCodeInfo.Location> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/SourceCodeInfo // pbandk.wkt/SourceCodeInfo|SourceCodeInfo(kotlin.collections.List<pbandk.wkt.SourceCodeInfo.Location>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/SourceCodeInfo(kotlin/Function1<pbandk.wkt/MutableSourceCodeInfo, kotlin/Unit>): pbandk.wkt/SourceCodeInfo // pbandk.wkt/SourceCodeInfo|SourceCodeInfo(kotlin.Function1<pbandk.wkt.MutableSourceCodeInfo,kotlin.Unit>){}[0]
final fun pbandk.wkt/SourceContext(kotlin/Function1<pbandk.wkt/MutableSourceContext, kotlin/Unit>): pbandk.wkt/SourceContext // pbandk.wkt/SourceContext|SourceContext(kotlin.Function1<pbandk.wkt.MutableSourceContext,kotlin.Unit>){}[0]
final fun pbandk.wkt/SourceContext(kotlin/String = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/SourceContext // pbandk.wkt/SourceContext|SourceContext(kotlin.String;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/StringValue(kotlin/Function1<pbandk.wkt/MutableStringValue, kotlin/Unit>): pbandk.wkt/StringValue // pbandk.wkt/StringValue|StringValue(kotlin.Function1<pbandk.wkt.MutableStringValue,kotlin.Unit>){}[0]
final fun pbandk.wkt/StringValue(kotlin/String = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/StringValue // pbandk.wkt/StringValue|StringValue(kotlin.String;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/Struct(kotlin.collections/Map<kotlin/String, pbandk.wkt/Value> = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Struct // pbandk.wkt/Struct|Struct(kotlin.collections.Map<kotlin.String,pbandk.wkt.Value>;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/Struct(kotlin/Function1<pbandk.wkt/MutableStruct, kotlin/Unit>): pbandk.wkt/Struct // pbandk.wkt/Struct|Struct(kotlin.Function1<pbandk.wkt.MutableStruct,kotlin.Unit>){}[0]
final fun pbandk.wkt/Timestamp(kotlin/Function1<pbandk.wkt/MutableTimestamp, kotlin/Unit>): pbandk.wkt/Timestamp // pbandk.wkt/Timestamp|Timestamp(kotlin.Function1<pbandk.wkt.MutableTimestamp,kotlin.Unit>){}[0]
final fun pbandk.wkt/Timestamp(kotlin/Long = ..., kotlin/Int = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Timestamp // pbandk.wkt/Timestamp|Timestamp(kotlin.Long;kotlin.Int;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/Type(kotlin/Function1<pbandk.wkt/MutableType, kotlin/Unit>): pbandk.wkt/Type // pbandk.wkt/Type|Type(kotlin.Function1<pbandk.wkt.MutableType,kotlin.Unit>){}[0]
final fun pbandk.wkt/Type(kotlin/String = ..., kotlin.collections/List<pbandk.wkt/Field> = ..., kotlin.collections/List<kotlin/String> = ..., kotlin.collections/List<pbandk.wkt/Option> = ..., pbandk.wkt/SourceContext? = ..., pbandk.wkt/Syntax = ..., kotlin/String = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Type // pbandk.wkt/Type|Type(kotlin.String;kotlin.collections.List<pbandk.wkt.Field>;kotlin.collections.List<kotlin.String>;kotlin.collections.List<pbandk.wkt.Option>;pbandk.wkt.SourceContext?;pbandk.wkt.Syntax;kotlin.String;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/UInt32Value(kotlin/Function1<pbandk.wkt/MutableUInt32Value, kotlin/Unit>): pbandk.wkt/UInt32Value // pbandk.wkt/UInt32Value|UInt32Value(kotlin.Function1<pbandk.wkt.MutableUInt32Value,kotlin.Unit>){}[0]
final fun pbandk.wkt/UInt32Value(kotlin/Int = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/UInt32Value // pbandk.wkt/UInt32Value|UInt32Value(kotlin.Int;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/UInt64Value(kotlin/Function1<pbandk.wkt/MutableUInt64Value, kotlin/Unit>): pbandk.wkt/UInt64Value // pbandk.wkt/UInt64Value|UInt64Value(kotlin.Function1<pbandk.wkt.MutableUInt64Value,kotlin.Unit>){}[0]
final fun pbandk.wkt/UInt64Value(kotlin/Long = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/UInt64Value // pbandk.wkt/UInt64Value|UInt64Value(kotlin.Long;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/UninterpretedOption(kotlin.collections/List<pbandk.wkt/UninterpretedOption.NamePart> = ..., kotlin/String? = ..., kotlin/Long? = ..., kotlin/Long? = ..., kotlin/Double? = ..., pbandk/ByteArr? = ..., kotlin/String? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/UninterpretedOption // pbandk.wkt/UninterpretedOption|UninterpretedOption(kotlin.collections.List<pbandk.wkt.UninterpretedOption.NamePart>;kotlin.String?;kotlin.Long?;kotlin.Long?;kotlin.Double?;pbandk.ByteArr?;kotlin.String?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk.wkt/UninterpretedOption(kotlin/Function1<pbandk.wkt/MutableUninterpretedOption, kotlin/Unit>): pbandk.wkt/UninterpretedOption // pbandk.wkt/UninterpretedOption|UninterpretedOption(kotlin.Function1<pbandk.wkt.MutableUninterpretedOption,kotlin.Unit>){}[0]
final fun pbandk.wkt/Value(kotlin/Function1<pbandk.wkt/MutableValue, kotlin/Unit>): pbandk.wkt/Value // pbandk.wkt/Value|Value(kotlin.Function1<pbandk.wkt.MutableValue,kotlin.Unit>){}[0]
final fun pbandk.wkt/Value(pbandk.wkt/Value.Kind<*>? = ..., kotlin.collections/Map<kotlin/Int, pbandk/UnknownField> = ...): pbandk.wkt/Value // pbandk.wkt/Value|Value(pbandk.wkt.Value.Kind<*>?;kotlin.collections.Map<kotlin.Int,pbandk.UnknownField>){}[0]
final fun pbandk/typeRegistry(kotlin/Function1<pbandk/TypeRegistry.Builder, kotlin/Unit>): pbandk/TypeRegistry // pbandk/typeRegistry|typeRegistry(kotlin.Function1<pbandk.TypeRegistry.Builder,kotlin.Unit>){}[0]

// Targets: [native, wasmJs]
open annotation class pbandk/Export : kotlin/Annotation { // pbandk/Export|null[0]
    constructor <init>() // pbandk/Export.<init>|<init>(){}[0]
}

// Targets: [native]
open annotation class pbandk/JsName : kotlin/Annotation { // pbandk/JsName|null[0]
    constructor <init>(kotlin/String) // pbandk/JsName.<init>|<init>(kotlin.String){}[0]

    final val name // pbandk/JsName.name|{}name[0]
        final fun <get-name>(): kotlin/String // pbandk/JsName.name.<get-name>|<get-name>(){}[0]
}
