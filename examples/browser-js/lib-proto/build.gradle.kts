import com.google.protobuf.gradle.*

plugins {
    // The protobuf gradle plugin will fail if the project doesn't include the `java-library`, `java`, or one of the
    // Android plugins.
    `java-library`
    kotlin("multiplatform")
    id("com.google.protobuf")
}

val pbandkVersion: String by rootProject.extra
val protobufVersion = "4.26.1"

dependencies {
    // This is needed for includes, ref: https://github.com/google/protobuf-gradle-plugin/issues/41#issuecomment-143884188
    compileOnly("com.google.protobuf:protobuf-java:$protobufVersion")
}

kotlin {
    // The `:lib-proto` project needs to declare the same target platforms that will be used by the `:app` project
    js {
        browser()
    }

    sourceSets {
        commonMain {
            dependencies {
                api("pro.streem.pbandk:pbandk-runtime:$pbandkVersion")
            }
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobufVersion"
    }
    plugins {
        id("pbandk") {
            artifact = "pro.streem.pbandk:protoc-gen-pbandk-jvm:$pbandkVersion:jvm8@jar"
        }
    }
    generateProtoTasks {
        ofSourceSet("main").forEach { task ->
            task.builtins {
                remove("java")
            }
            task.plugins {
                id("pbandk") {
                    option("kotlin_package=pbandk.examples.browserjs.pb")

                    // Publish the code generated by pbandk as part of the current Kotlin Multiplatform project's
                    // `commonMain` source set. This allows other Kotlin Multiplatform sub-projects to consume the
                    // pbandk-generated Kotlin code using a regular gradle project dependency.
                    val outputDir = task.getOutputDir(this)
                    project.kotlin.sourceSets.commonMain.configure {
                        // `builtBy` ensures that gradle will automatically run the `generateProto` task before trying
                        // to compile the generated Kotlin code
                        kotlin.srcDir(project.files(outputDir).builtBy(task))
                    }
                }
            }
        }
    }
}

tasks {
    compileJava {
        // The protobuf gradle plugin requires this project to apply the `java-library` plugin. But since we're only
        // generating Kotlin code, we need to disable the `compileJava` task. Otherwise gradle will complain that there
        // is no Java code available to compile.
        enabled = false
    }
}