#
# Check https://circleci.com/docs/2.0/ for more details
#
version: 2.1

executors:
  jvm:
    docker:
      - image: circleci/openjdk:11-jdk-browsers
    environment:
      TERM: dumb
      GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process'

  nodejs:
    docker:
      - image: circleci/node:lts

  native:
    docker:
      - image: cimg/base:2020.01


commands:

  conformance_test:
    parameters:
      target:
        description: Target platform for which to run conformance tests
        type: string

    steps:
      - attach_workspace:
          at: ~/project

      - restore_cache:
          name: Restore protobuf cache
          keys:
            - v3-protobuf-3.10.1

      - run:
          name: Run << parameters.target >> conformance tests
          command: |
            export CONF_TEST_PATH=~/protobuf/conformance/conformance-test-runner
            ./conformance/test-conformance.sh << parameters.target >>


  restore_gradle_cache:
    steps:
      - run:
          name: Collect files for dependencies cache key
          command: |
            find . -path ./examples -prune -o -name '*.gradle*' -type f -print0 \
            | sort -z \
            | xargs -0 cat \
            > /tmp/circleci_cache_key

      - restore_cache:
          name: Restore dependencies cache
          keys:
            - v2-dependencies-{{ checksum "/tmp/circleci_cache_key" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-


  save_gradle_cache:
    steps:
      - save_cache:
          name: Save dependencies cache
          paths:
            - ~/.gradle
            - ~/.konan
          key: v2-dependencies-{{ checksum "/tmp/circleci_cache_key" }}
          when: always


jobs:

  build:
    executor:
      name: jvm

    steps:
      - checkout

      - run:
          name: Install Kotlin/Native compiler dependencies
          command: sudo apt update && sudo apt install libncurses5

      - restore_gradle_cache

      - run: ./gradlew build

      - restore_cache:
          name: Restore protobuf cache
          keys:
            - v3-protobuf-3.10.1

      - run:
          name: Build protoc and protobuf conformance-test-runner
          command: |
            cd ~
            if [ -e ./protobuf/install/bin/protoc -a -e ./protobuf/conformance/conformance-test-runner ]; then
              exit
            fi
            curl -sSLO https://github.com/protocolbuffers/protobuf/releases/download/v3.10.1/protobuf-all-3.10.1.tar.gz
            tar xzvf protobuf-all-3.10.1.tar.gz
            mv protobuf-3.10.1 protobuf
            cd protobuf
            ./configure --prefix="$(pwd)/install"
            make
            make install
            cd conformance
            make

      - save_cache:
          name: Save protobuf cache
          paths:
            - ~/protobuf
          key: v3-protobuf-3.10.1

      - run:
          name: Ensure bundled types are up-to-date
          command: |
            export PATH="$PATH:$HOME/protobuf/install/bin"
            ./gradlew -Dprotoc.path=$HOME/protobuf/install \
              :runtime:generateWellKnownTypes \
              :runtime:generateTestTypes \
              :protoc-gen-kotlin:protoc-gen-kotlin-lib:generateProto \
              :conformance:conformance-lib:generateProto
            if [ -n "$(git status --porcelain)" ]; then
              echo "*** Found uncommitted changes to bundled types: ***"
              git status
              exit 1
            else
              exit 0
            fi

      - run:
          name: Publish artifacts to local maven repository
          command: |
            ./gradlew publishToMavenLocal
            echo "Published files:"
            find $HOME/.m2/repository -type f

      - persist_to_workspace:
          root: /home/circleci
          paths:
            - .m2/repository

      - run:
          name: Build conformance test suite
          command: ./gradlew :conformance:conformance-lib:assemble :conformance:conformance-jvm:installDist :conformance:conformance-native:build

      # persist files necessary to run conformance tests
      - persist_to_workspace:
          root: .
          paths:
            - conformance/test-conformance.sh
            # jvm
            - conformance/jvm/build/install/conformance
            - conformance/jvm/failing_tests.txt
            # js
            - build/js
            - conformance/js/failing_tests.txt
            - conformance/js/run.sh
            # native
            - conformance/native/build/bin/linux/conformanceReleaseExecutable/conformance.kexe
            - conformance/native/failing_tests.txt

      - save_gradle_cache


  conformance_jvm:
    executor:
      name: jvm

    steps:
      - conformance_test:
          target: jvm


  conformance_js:
    executor:
      name: nodejs

    steps:
      - conformance_test:
          target: js


  conformance_native:
    executor:
      name: native

    steps:
      - conformance_test:
          target: linux


  build_examples:
    executor:
      name: jvm

    steps:
      - checkout

      - attach_workspace:
          at: ~/project

      - run:
          name: Setup local maven repository
          command: mv .m2 $HOME/

      - run:
          name: Collect files for dependencies cache key
          command: |
            find ./examples -name '*.gradle*' -type f -print0 \
            | sort -z \
            | xargs -0 cat \
            > /tmp/circleci_cache_key

      - restore_cache:
          name: Restore dependencies cache
          keys:
            - v1-examples-dependencies-{{ checksum "/tmp/circleci_cache_key" }}
            # fallback to using the latest cache if no exact match is found
            - v1-examples-dependencies-

      - run:
          name: Build all examples
          command: |
            for d in examples/*; do
              set -e
              [ -d "$d" ] || continue
              echo "== $d =="
              pushd "$d" >/dev/null
              ../../gradlew build
              popd >/dev/null
            done

      - save_cache:
          name: Save dependencies cache
          paths:
            - ~/.gradle
          key: v1-examples-dependencies-{{ checksum "/tmp/circleci_cache_key" }}
          when: always


  publish:
    executor:
      name: jvm

    steps:
      - checkout
      - restore_gradle_cache
      - run: ./gradlew clean publishToBintrayRepository
      - save_gradle_cache


workflows:
  version: 2.1
  build:
    jobs:
      - build:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)+([-+].+)*/
      - conformance_jvm:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)+([-+].+)*/
      - conformance_js:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)+([-+].+)*/
      - conformance_native:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)+([-+].+)*/
      - build_examples:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)+([-+].+)*/
      - publish:
          requires:
            - build
            - conformance_jvm
            - conformance_js
            - conformance_native
            - build_examples
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)+([-+].+)*/
